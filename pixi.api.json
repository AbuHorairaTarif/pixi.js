{
	"type": "RootDoc",
	"children": [
		{
			"name": "PIXI",
			"type": "NSDoc",
			"access": "public",
			"scope": "inner",
			"brief": "",
			"children": [
				{
					"name": "filters",
					"type": "NSDoc",
					"access": "public",
					"scope": "static",
					"brief": "",
					"children": [
						{
							"name": "AlphaFilter",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "<p>Simplest filter - applies alpha.</p>",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "alpha",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Coefficient for alpha multiplication</p>"
								},
								{
									"name": "apply",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Applies the filter</p>"
								},
								{
									"name": "blendMode",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Sets the blendmode of the filter</p>"
								},
								{
									"name": "padding",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "resolution",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "enabled",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>If enabled is true the filter is applied, if false it will not.</p>"
								},
								{
									"name": "autoFit",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "legacy",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "state",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "uniforms",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "from",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>A short hand function to create a shader based of a vertex and fragment shader</p>"
								},
								{
									"name": "program",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Program that the shader uses</p>"
								}
							]
						},
						{
							"name": "BlurFilter",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "<p>The BlurFilter applies a Gaussian blur to an object.</p>",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "apply",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Applies the filter.</p>"
								},
								{
									"name": "updatePadding",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "blur",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Sets the strength of both the blurX and blurY properties simultaneously</p>"
								},
								{
									"name": "quality",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Sets the number of passes for blur. More passes means higher quaility bluring.</p>"
								},
								{
									"name": "blurX",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Sets the strength of the blurX property</p>"
								},
								{
									"name": "blurY",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Sets the strength of the blurY property</p>"
								},
								{
									"name": "blendMode",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Sets the blendmode of the filter</p>"
								},
								{
									"name": "repeatEdgePixels",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>If set to true the edge of the target will be clamped</p>"
								},
								{
									"name": "padding",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "resolution",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "enabled",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>If enabled is true the filter is applied, if false it will not.</p>"
								},
								{
									"name": "autoFit",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "legacy",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "state",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "uniforms",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "from",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>A short hand function to create a shader based of a vertex and fragment shader</p>"
								},
								{
									"name": "program",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Program that the shader uses</p>"
								}
							]
						},
						{
							"name": "BlurFilterPass",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "<p>The BlurFilterPass applies a horizontal or vertical Gaussian blur to an object.</p>",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "apply",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Applies the filter.</p>"
								},
								{
									"name": "blur",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Sets the strength of both the blur.</p>"
								},
								{
									"name": "quality",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "blendMode",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Sets the blendmode of the filter</p>"
								},
								{
									"name": "padding",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "resolution",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "enabled",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>If enabled is true the filter is applied, if false it will not.</p>"
								},
								{
									"name": "autoFit",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "legacy",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "state",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "uniforms",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "from",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>A short hand function to create a shader based of a vertex and fragment shader</p>"
								},
								{
									"name": "program",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Program that the shader uses</p>"
								}
							]
						},
						{
							"name": "ColorMatrixFilter",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_loadMatrix",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Transforms current matrix and set the new one</p>"
								},
								{
									"name": "_multiply",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Multiplies two mat5's</p>"
								},
								{
									"name": "_colorMatrix",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Create a Float32 Array and normalize the offset component to 0-1</p>"
								},
								{
									"name": "brightness",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Adjusts brightness</p>"
								},
								{
									"name": "greyscale",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Set the matrices in grey scales</p>"
								},
								{
									"name": "blackAndWhite",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Set the black and white matrice.</p>"
								},
								{
									"name": "hue",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Set the hue property of the color</p>"
								},
								{
									"name": "contrast",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "saturate",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "desaturate",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Desaturate image (remove color)</p>"
								},
								{
									"name": "negative",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Negative image (inverse of classic rgb matrix)</p>"
								},
								{
									"name": "sepia",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Sepia image</p>"
								},
								{
									"name": "technicolor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Color motion picture process invented in 1916 (thanks Dominic Szablewski)</p>"
								},
								{
									"name": "polaroid",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Polaroid filter</p>"
								},
								{
									"name": "toBGR",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Filter who transforms : Red -&gt; Blue and Blue -&gt; Red</p>"
								},
								{
									"name": "kodachrome",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Color reversal film introduced by Eastman Kodak in 1935. (thanks Dominic Szablewski)</p>"
								},
								{
									"name": "browni",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Brown delicious browni filter (thanks Dominic Szablewski)</p>"
								},
								{
									"name": "vintage",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Vintage filter (thanks Dominic Szablewski)</p>"
								},
								{
									"name": "colorTone",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>We don't know exactly what it does, kind of gradient map, but funny to play with!</p>"
								},
								{
									"name": "night",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Night effect</p>"
								},
								{
									"name": "predator",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Predator effect</p>"
								},
								{
									"name": "lsd",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>LSD effect</p>"
								},
								{
									"name": "reset",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Erase the current matrix by setting the default one</p>"
								},
								{
									"name": "matrix",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The matrix of the color matrix filter</p>"
								},
								{
									"name": "alpha",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The opacity value to use when mixing the original and resultant colors.</p>"
								},
								{
									"name": "apply",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Applies the filter</p>"
								},
								{
									"name": "blendMode",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Sets the blendmode of the filter</p>"
								},
								{
									"name": "padding",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "resolution",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "enabled",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>If enabled is true the filter is applied, if false it will not.</p>"
								},
								{
									"name": "autoFit",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "legacy",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "state",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "uniforms",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "from",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>A short hand function to create a shader based of a vertex and fragment shader</p>"
								},
								{
									"name": "program",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Program that the shader uses</p>"
								}
							]
						},
						{
							"name": "DisplacementFilter",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "apply",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Applies the filter.</p>"
								},
								{
									"name": "map",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The texture used for the displacement map. Must be power of 2 sized texture.</p>"
								},
								{
									"name": "scale",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "blendMode",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Sets the blendmode of the filter</p>"
								},
								{
									"name": "padding",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "resolution",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "enabled",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>If enabled is true the filter is applied, if false it will not.</p>"
								},
								{
									"name": "autoFit",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "legacy",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "state",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "uniforms",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "from",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>A short hand function to create a shader based of a vertex and fragment shader</p>"
								},
								{
									"name": "program",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Program that the shader uses</p>"
								}
							]
						},
						{
							"name": "FXAAFilter",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "apply",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Applies the filter</p>"
								},
								{
									"name": "blendMode",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Sets the blendmode of the filter</p>"
								},
								{
									"name": "padding",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "resolution",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "enabled",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>If enabled is true the filter is applied, if false it will not.</p>"
								},
								{
									"name": "autoFit",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "legacy",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "state",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "uniforms",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "from",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>A short hand function to create a shader based of a vertex and fragment shader</p>"
								},
								{
									"name": "program",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Program that the shader uses</p>"
								}
							]
						},
						{
							"name": "NoiseFilter",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "<p>A Noise effect filter.</p>",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "noise",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The amount of noise to apply, this value should be in the range (0, 1].</p>"
								},
								{
									"name": "seed",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>A seed value to apply to the random noise generation. <code>Math.random()</code> is a good value to use.</p>"
								},
								{
									"name": "apply",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Applies the filter</p>"
								},
								{
									"name": "blendMode",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Sets the blendmode of the filter</p>"
								},
								{
									"name": "padding",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "resolution",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "enabled",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>If enabled is true the filter is applied, if false it will not.</p>"
								},
								{
									"name": "autoFit",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "legacy",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "state",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "uniforms",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "from",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>A short hand function to create a shader based of a vertex and fragment shader</p>"
								},
								{
									"name": "program",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Program that the shader uses</p>"
								}
							]
						}
					]
				},
				{
					"name": "accessibility",
					"type": "NSDoc",
					"access": "public",
					"scope": "static",
					"brief": "<p>This namespace contains an accessibility plugin for allowing interaction via the keyboard.</p>",
					"children": [
						{
							"name": "AccessibilityManager",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "isActive",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "isMobileAccessibility",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "createTouchHook",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Creates the touch hooks.</p>"
								},
								{
									"name": "destroyTouchHook",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Destroys the touch hooks.</p>"
								},
								{
									"name": "activate",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "deactivate",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "updateAccessibleObjects",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>This recursive function will run through the scene graph and add any new accessible objects to the DOM layer.</p>"
								},
								{
									"name": "update",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Before each render this function will ensure that all divs are mapped correctly to their DisplayObjects.</p>"
								},
								{
									"name": "updateDebugHTML",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "capHitArea",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Adjust the hit area based on the bounds of a display object</p>"
								},
								{
									"name": "addChild",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Adds a DisplayObject to the accessibility manager</p>"
								},
								{
									"name": "_onClick",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Maps the div button press to pixi's InteractionManager (click)</p>"
								},
								{
									"name": "_onFocus",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Maps the div focus events to pixi's InteractionManager (mouseover)</p>"
								},
								{
									"name": "_onFocusOut",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Maps the div focus events to pixi's InteractionManager (mouseout)</p>"
								},
								{
									"name": "_onKeyDown",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>pre-bind the functions</p>"
								},
								{
									"name": "_onMouseMove",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>pre-bind the functions</p>"
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Destroys the accessibility manager</p>"
								},
								{
									"name": "_hookDiv",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "div",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>This is the dom element that will sit over the PixiJS element. This is where the div overlays will go.</p>"
								},
								{
									"name": "pool",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>A simple pool for storing divs.</p>"
								},
								{
									"name": "renderId",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>This is a tick used to check if an object is no longer being rendered.</p>"
								},
								{
									"name": "debug",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Setting this to true will visually show the divs.</p>"
								},
								{
									"name": "renderer",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The renderer this accessibility manager works for.</p>"
								},
								{
									"name": "children",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>The array of currently active accessible items.</p>"
								},
								{
									"name": "androidUpdateCount",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "androidUpdateFrequency",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								}
							]
						}
					]
				},
				{
					"name": "Application",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>Convenience class to create a new PIXI application.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "registerPlugin",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "render",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Render the current stage.</p>"
						},
						{
							"name": "view",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "screen",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "renderer",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "stage",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_ticker",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Internal reference to the ticker.</p>"
						},
						{
							"name": "ticker",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Ticker for doing render updates.</p>"
						}
					]
				},
				{
					"name": "AbstractRenderer",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "initPlugins",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Initialize the plugins.</p>"
						},
						{
							"name": "width",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Same as view.width, actual number of pixels in the canvas by horizontal.</p>"
						},
						{
							"name": "height",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Same as view.height, actual number of pixels in the canvas by vertical.</p>"
						},
						{
							"name": "resize",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "generateTexture",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes everything from the renderer and optionally removes the Canvas DOM element.</p>"
						},
						{
							"name": "backgroundColor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The background color to fill if not transparent</p>"
						},
						{
							"name": "options",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The supplied constructor options.</p>"
						},
						{
							"name": "type",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The type of the renderer.</p>"
						},
						{
							"name": "screen",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Measurements of the screen. (0, 0, screenWidth, screenHeight).</p>"
						},
						{
							"name": "view",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The canvas element that everything is drawn to.</p>"
						},
						{
							"name": "resolution",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The resolution / device pixel ratio of the renderer.</p>"
						},
						{
							"name": "transparent",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Whether the render view is transparent.</p>"
						},
						{
							"name": "autoDensity",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Whether CSS dimensions of canvas view should be resized to screen dimensions automatically.</p>"
						},
						{
							"name": "preserveDrawingBuffer",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "clearBeforeRender",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_backgroundColor",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The background color as a number.</p>"
						},
						{
							"name": "_backgroundColorRgba",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The background color as an [R, G, B] array.</p>"
						},
						{
							"name": "_backgroundColorString",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The background color as a string.</p>"
						},
						{
							"name": "_tempDisplayObjectParent",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>This temporary display object used as the parent of the currently being rendered item.</p>"
						},
						{
							"name": "_lastObjectRendered",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The last root object that the renderer tried to render.</p>"
						},
						{
							"name": "plugins",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "Renderer",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>The Renderer draws the scene and all its content onto a WebGL enabled canvas.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "create",
							"type": "MethodDoc",
							"access": "private",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "addSystem",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "render",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Renders the object to its WebGL view</p>"
						},
						{
							"name": "resize",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired after view has been resized.</p>"
						},
						{
							"name": "reset",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Resets the WebGL state so you can render things however you fancy!</p>"
						},
						{
							"name": "clear",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Clear the frame buffer</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes everything from the renderer (event listeners, spritebatch, etc...)</p>"
						},
						{
							"name": "registerPlugin",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds a plugin to the renderer.</p>"
						},
						{
							"name": "gl",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>WebGL context, set by the contextSystem (this.context)</p>"
						},
						{
							"name": "runners",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "",
							"children": [
								{
									"name": "destroy",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "static",
									"brief": ""
								},
								{
									"name": "contextChange",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "static",
									"brief": ""
								},
								{
									"name": "reset",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "static",
									"brief": ""
								},
								{
									"name": "update",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "static",
									"brief": ""
								},
								{
									"name": "postrender",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "static",
									"brief": ""
								},
								{
									"name": "prerender",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "static",
									"brief": ""
								},
								{
									"name": "resize",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "static",
									"brief": ""
								}
							]
						},
						{
							"name": "globalUniforms",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "renderingToScreen",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "postrender",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired after rendering finishes.</p>"
						},
						{
							"name": "prerender",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired before rendering starts.</p>"
						},
						{
							"name": "context",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when the WebGL context is set.</p>"
						},
						{
							"name": "extract",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Collection of methods for extracting data (image, pixels, etc.) from a display object or render texture</p>"
						},
						{
							"name": "initPlugins",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Initialize the plugins.</p>"
						},
						{
							"name": "width",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Same as view.width, actual number of pixels in the canvas by horizontal.</p>"
						},
						{
							"name": "height",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Same as view.height, actual number of pixels in the canvas by vertical.</p>"
						},
						{
							"name": "generateTexture",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "backgroundColor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The background color to fill if not transparent</p>"
						},
						{
							"name": "options",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The supplied constructor options.</p>"
						},
						{
							"name": "type",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The type of the renderer.</p>"
						},
						{
							"name": "screen",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Measurements of the screen. (0, 0, screenWidth, screenHeight).</p>"
						},
						{
							"name": "view",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The canvas element that everything is drawn to.</p>"
						},
						{
							"name": "resolution",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The resolution / device pixel ratio of the renderer.</p>"
						},
						{
							"name": "transparent",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Whether the render view is transparent.</p>"
						},
						{
							"name": "autoDensity",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Whether CSS dimensions of canvas view should be resized to screen dimensions automatically.</p>"
						},
						{
							"name": "preserveDrawingBuffer",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "clearBeforeRender",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_backgroundColor",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The background color as a number.</p>"
						},
						{
							"name": "_backgroundColorRgba",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The background color as an [R, G, B] array.</p>"
						},
						{
							"name": "_backgroundColorString",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The background color as a string.</p>"
						},
						{
							"name": "_tempDisplayObjectParent",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>This temporary display object used as the parent of the currently being rendered item.</p>"
						},
						{
							"name": "_lastObjectRendered",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The last root object that the renderer tried to render.</p>"
						},
						{
							"name": "plugins",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "System",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>System is a base class used for extending systems used by the {@link PIXI.Renderer}</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Generic destroy methods to be overridden by the subclass</p>"
						},
						{
							"name": "renderer",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The renderer this manager works for.</p>"
						}
					]
				},
				{
					"name": "systems",
					"type": "NSDoc",
					"access": "public",
					"scope": "static",
					"brief": "",
					"children": [
						{
							"name": "BatchSystem",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "<p>System plugin to the renderer to manage batching.</p>",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "setObjectRenderer",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Changes the current renderer to the one given in parameter</p>"
								},
								{
									"name": "flush",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "reset",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Reset the system to an empty renderer</p>"
								},
								{
									"name": "copyBoundTextures",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "boundArray",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "emptyRenderer",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>An empty renderer.</p>"
								},
								{
									"name": "currentRenderer",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The currently active ObjectRenderer.</p>"
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Generic destroy methods to be overridden by the subclass</p>"
								},
								{
									"name": "renderer",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The renderer this manager works for.</p>"
								}
							]
						},
						{
							"name": "ContextSystem",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "<p>System plugin to the renderer to manage the context.</p>",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "isLost",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "contextChange",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "initFromContext",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": "<p>Initialize the context</p>"
								},
								{
									"name": "initFromOptions",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": "<p>Initialize from context options</p>"
								},
								{
									"name": "createContext",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Helper class to create a WebGL Context</p>"
								},
								{
									"name": "getExtensions",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": "<p>Auto-populate the extensions</p>"
								},
								{
									"name": "handleContextLost",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": "<p>Handles a lost webgl context</p>"
								},
								{
									"name": "handleContextRestored",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": "<p>Handles a restored webgl context</p>"
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "postrender",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": "<p>Handle the post-render runner event</p>"
								},
								{
									"name": "validateContext",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": "<p>Validate context</p>"
								},
								{
									"name": "webGLVersion",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "extensions",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "",
									"children": [
										{
											"name": "drawBuffers",
											"type": "PropertyDoc",
											"access": "public",
											"scope": "static",
											"brief": ""
										},
										{
											"name": "depthTexture",
											"type": "PropertyDoc",
											"access": "public",
											"scope": "static",
											"brief": ""
										},
										{
											"name": "floatTexture",
											"type": "PropertyDoc",
											"access": "public",
											"scope": "static",
											"brief": ""
										},
										{
											"name": "loseContext",
											"type": "PropertyDoc",
											"access": "public",
											"scope": "static",
											"brief": ""
										},
										{
											"name": "vertexArrayObject",
											"type": "PropertyDoc",
											"access": "public",
											"scope": "static",
											"brief": ""
										},
										{
											"name": "anisotropicFiltering",
											"type": "PropertyDoc",
											"access": "public",
											"scope": "static",
											"brief": ""
										}
									]
								},
								{
									"name": "supports",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": "",
									"children": [
										{
											"name": "uint32Indices",
											"type": "PropertyDoc",
											"access": "public",
											"scope": "static",
											"brief": ""
										}
									]
								},
								{
									"name": "renderer",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The renderer this manager works for.</p>"
								}
							]
						},
						{
							"name": "FilterSystem",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "<p>System plugin to the renderer to manage the filters.</p>",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "push",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Adds a new filter to the System.</p>"
								},
								{
									"name": "pop",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Pops off the filter and applies it.</p>"
								},
								{
									"name": "bindAndClear",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "applyFilter",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Draws a filter.</p>"
								},
								{
									"name": "calculateSpriteMatrix",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Multiply <em>input normalized coordinates</em> to this matrix to get <em>sprite texture normalized coordinates</em>.</p>"
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Destroys this Filter System.</p>"
								},
								{
									"name": "getOptimalFilterTexture",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": "<p>Gets a Power-of-Two render texture or fullScreen texture</p>"
								},
								{
									"name": "getFilterTexture",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "returnFilterTexture",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Frees a render texture back into the pool.</p>"
								},
								{
									"name": "emptyPool",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Empties the texture pool.</p>"
								},
								{
									"name": "resize",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>calls <code>texturePool.resize()</code>, affects fullScreen renderTextures</p>"
								},
								{
									"name": "defaultFilterStack",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "texturePool",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "statePool",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "quad",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "quadUv",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "tempRect",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "activeState",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "globalUniforms",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "",
									"children": [
										{
											"name": "outputFrame",
											"type": "PropertyDoc",
											"access": "public",
											"scope": "static",
											"brief": ""
										},
										{
											"name": "inputSize",
											"type": "PropertyDoc",
											"access": "public",
											"scope": "static",
											"brief": ""
										},
										{
											"name": "inputPixel",
											"type": "PropertyDoc",
											"access": "public",
											"scope": "static",
											"brief": ""
										},
										{
											"name": "inputClamp",
											"type": "PropertyDoc",
											"access": "public",
											"scope": "static",
											"brief": ""
										},
										{
											"name": "resolution",
											"type": "PropertyDoc",
											"access": "public",
											"scope": "static",
											"brief": ""
										},
										{
											"name": "filterArea",
											"type": "PropertyDoc",
											"access": "public",
											"scope": "static",
											"brief": ""
										},
										{
											"name": "filterClamp",
											"type": "PropertyDoc",
											"access": "public",
											"scope": "static",
											"brief": ""
										}
									]
								},
								{
									"name": "forceClear",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "useMaxPadding",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "renderer",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The renderer this manager works for.</p>"
								}
							]
						},
						{
							"name": "FramebufferSystem",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "<p>System plugin to the renderer to manage framebuffers.</p>",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "contextChange",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Sets up the renderer context and necessary buffers.</p>"
								},
								{
									"name": "bind",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Bind a framebuffer</p>"
								},
								{
									"name": "setViewport",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Set the WebGLRenderingContext's viewport.</p>"
								},
								{
									"name": "size",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Get the size of the current width and height. Returns object with <code>width</code> and <code>height</code> values.</p>"
								},
								{
									"name": "clear",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Clear the color of the context</p>"
								},
								{
									"name": "initFramebuffer",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": "<p>Initialize framebuffer for this context</p>"
								},
								{
									"name": "resizeFramebuffer",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": "<p>Resize the framebuffer</p>"
								},
								{
									"name": "updateFramebuffer",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": "<p>Update the framebuffer</p>"
								},
								{
									"name": "detectSamples",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Detects number of samples that is not more than a param but as close to it as possible</p>"
								},
								{
									"name": "blit",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Only works with WebGL2</p>"
								},
								{
									"name": "disposeFramebuffer",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "disposeAll",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "forceStencil",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "reset",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>resets framebuffer stored state, binds screen framebuffer</p>"
								},
								{
									"name": "managedFramebuffers",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "unknownFramebuffer",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Generic destroy methods to be overridden by the subclass</p>"
								},
								{
									"name": "renderer",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The renderer this manager works for.</p>"
								}
							]
						},
						{
							"name": "GeometrySystem",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "<p>System plugin to the renderer to manage geometry.</p>",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "contextChange",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Sets up the renderer context and necessary buffers.</p>"
								},
								{
									"name": "bind",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Binds geometry so that is can be drawn. Creating a Vao if required</p>"
								},
								{
									"name": "reset",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Reset and unbind any active VAO and geometry</p>"
								},
								{
									"name": "updateBuffers",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "checkCompatibility",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "getSignature",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": "<p>Takes a geometry and program and generates a unique signature for them.</p>"
								},
								{
									"name": "initGeometryVao",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "disposeBuffer",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "disposeGeometry",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "disposeAll",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "activateVao",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": "<p>Activate vertex array object</p>"
								},
								{
									"name": "draw",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Draw the geometry</p>"
								},
								{
									"name": "unbind",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "hasVao",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "hasInstance",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "canUseUInt32ElementIndex",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "managedGeometries",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "managedBuffers",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Generic destroy methods to be overridden by the subclass</p>"
								},
								{
									"name": "renderer",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The renderer this manager works for.</p>"
								}
							]
						},
						{
							"name": "AbstractMaskSystem",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "<p>System plugin to the renderer to manage masks of certain type</p>",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "getStackLength",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "setMaskStack",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Changes the mask stack that is used by this System.</p>"
								},
								{
									"name": "_useCurrent",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Destroys the mask stack.</p>"
								},
								{
									"name": "maskStack",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "glConst",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "renderer",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The renderer this manager works for.</p>"
								}
							]
						},
						{
							"name": "MaskSystem",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "<p>System plugin to the renderer to manage masks.</p>",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "setMaskStack",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Changes the mask stack that is used by this System.</p>"
								},
								{
									"name": "push",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "pop",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "detect",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "pushSpriteMask",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Applies the Mask and adds it to the current filter stack.</p>"
								},
								{
									"name": "popSpriteMask",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Removes the last filter from the filter stack and doesn't return it.</p>"
								},
								{
									"name": "enableScissor",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "alphaMaskPool",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "maskDataPool",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "alphaMaskIndex",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Generic destroy methods to be overridden by the subclass</p>"
								},
								{
									"name": "renderer",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The renderer this manager works for.</p>"
								}
							]
						},
						{
							"name": "ScissorSystem",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "<p>System plugin to the renderer to manage scissor rects (used for masks).</p>",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "getStackLength",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "push",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Applies the Mask and adds it to the current stencil stack. @alvin</p>"
								},
								{
									"name": "pop",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Pops scissor mask. MaskData is already removed from stack</p>"
								},
								{
									"name": "_useCurrent",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Generic destroy methods to be overridden by the subclass</p>"
								},
								{
									"name": "renderer",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The renderer this manager works for.</p>"
								}
							]
						},
						{
							"name": "StencilSystem",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "<p>System plugin to the renderer to manage stencils (used for masks).</p>",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "getStackLength",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "push",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Applies the Mask and adds it to the current stencil stack.</p>"
								},
								{
									"name": "pop",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Pops stencil mask. MaskData is already removed from stack</p>"
								},
								{
									"name": "_useCurrent",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_getBitwiseMask",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Generic destroy methods to be overridden by the subclass</p>"
								},
								{
									"name": "renderer",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The renderer this manager works for.</p>"
								}
							]
						},
						{
							"name": "ProjectionSystem",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "<p>System plugin to the renderer to manage the projection matrix.</p>",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "update",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Updates the projection matrix based on a projection frame (which is a rectangle)</p>"
								},
								{
									"name": "calculateProjection",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Updates the projection matrix based on a projection frame (which is a rectangle)</p>"
								},
								{
									"name": "setTransform",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Sets the transform of the active render target to the given matrix</p>"
								},
								{
									"name": "destinationFrame",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "sourceFrame",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "defaultFrame",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "projectionMatrix",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "transform",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Generic destroy methods to be overridden by the subclass</p>"
								},
								{
									"name": "renderer",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The renderer this manager works for.</p>"
								}
							]
						},
						{
							"name": "RenderTextureSystem",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "<p>System plugin to the renderer to manage render textures.</p>",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "bind",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "clear",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Erases the render texture and fills the drawing area with a colour</p>"
								},
								{
									"name": "resize",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "reset",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Resets renderTexture state</p>"
								},
								{
									"name": "clearColor",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "defaultMaskStack",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "current",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "sourceFrame",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "destinationFrame",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Generic destroy methods to be overridden by the subclass</p>"
								},
								{
									"name": "renderer",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The renderer this manager works for.</p>"
								}
							]
						},
						{
							"name": "ShaderSystem",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "<p>System plugin to the renderer to manage shaders.</p>",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "systemCheck",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "contextChange",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "bind",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Changes the current shader to the one given in parameter</p>"
								},
								{
									"name": "setUniforms",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Uploads the uniforms values to the currently bound shader.</p>"
								},
								{
									"name": "syncUniformGroup",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "syncUniforms",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "createSyncGroups",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "getSignature",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Takes a uniform group and data and generates a unique signature for them.</p>"
								},
								{
									"name": "getglProgram",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "generateShader",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Generates a glProgram version of the Shader provided.</p>"
								},
								{
									"name": "reset",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Resets ShaderSystem state, does not affect WebGL state</p>"
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Destroys this System and removes all its textures</p>"
								},
								{
									"name": "gl",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The current WebGL rendering context</p>"
								},
								{
									"name": "cache",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "renderer",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The renderer this manager works for.</p>"
								}
							]
						},
						{
							"name": "StateSystem",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "<p>System plugin to the renderer to manage WebGL state machines.</p>",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "contextChange",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "set",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Sets the current state</p>"
								},
								{
									"name": "forceState",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Sets the state, when previous state is unknown</p>"
								},
								{
									"name": "setBlend",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Enables or disabled blending.</p>"
								},
								{
									"name": "setOffset",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Enables or disable polygon offset fill</p>"
								},
								{
									"name": "setDepthTest",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Sets whether to enable or disable depth test.</p>"
								},
								{
									"name": "setCullFace",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Sets whether to enable or disable cull face.</p>"
								},
								{
									"name": "setFrontFace",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Sets the gl front face.</p>"
								},
								{
									"name": "setBlendMode",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Sets the blend mode.</p>"
								},
								{
									"name": "setPolygonOffset",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Sets the polygon offset.</p>"
								},
								{
									"name": "reset",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Resets all the logic and disables the vaos</p>"
								},
								{
									"name": "updateCheck",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "checkBlendMode",
									"type": "MethodDoc",
									"access": "private",
									"scope": "static",
									"brief": "<p>A private little wrapper function that we call to check the blend mode.</p>"
								},
								{
									"name": "checkPolygonOffset",
									"type": "MethodDoc",
									"access": "private",
									"scope": "static",
									"brief": "<p>A private little wrapper function that we call to check the polygon offset.</p>"
								},
								{
									"name": "gl",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "stateId",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "polygonOffset",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "blendMode",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_blendEq",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "map",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "checks",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "defaultState",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Generic destroy methods to be overridden by the subclass</p>"
								},
								{
									"name": "renderer",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The renderer this manager works for.</p>"
								}
							]
						},
						{
							"name": "TextureGCSystem",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "postrender",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "run",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "unload",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Removes all the textures within the specified displayObject and its children from the GPU</p>"
								},
								{
									"name": "count",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "checkCount",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "maxIdle",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "checkCountMax",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "mode",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Generic destroy methods to be overridden by the subclass</p>"
								},
								{
									"name": "renderer",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The renderer this manager works for.</p>"
								}
							]
						},
						{
							"name": "TextureSystem",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "<p>System plugin to the renderer to manage textures.</p>",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "contextChange",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Sets up the renderer context and necessary buffers.</p>"
								},
								{
									"name": "bind",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Bind a texture to a specific location</p>"
								},
								{
									"name": "reset",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Resets texture location and bound textures</p>"
								},
								{
									"name": "unbind",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "initTexture",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Initialize a texture</p>"
								},
								{
									"name": "initTextureType",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "updateTexture",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Update a texture</p>"
								},
								{
									"name": "destroyTexture",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Deletes the texture from WebGL</p>"
								},
								{
									"name": "updateTextureStyle",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Update texture style such as mipmap flag</p>"
								},
								{
									"name": "setStyle",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Set style for texture</p>"
								},
								{
									"name": "boundTextures",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "currentLocation",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "managedTextures",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_unknownBoundTextures",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "unknownTexture",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Generic destroy methods to be overridden by the subclass</p>"
								},
								{
									"name": "renderer",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The renderer this manager works for.</p>"
								}
							]
						}
					]
				},
				{
					"name": "Bounds",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>'Builder' pattern for bounds rectangles.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "isEmpty",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Checks if bounds are empty.</p>"
						},
						{
							"name": "clear",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Clears the bounds and resets.</p>"
						},
						{
							"name": "getRectangle",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "addPoint",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>This function should be inlined when its possible.</p>"
						},
						{
							"name": "addQuad",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds a quad, not transformed</p>"
						},
						{
							"name": "addFrame",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds sprite frame, transformed.</p>"
						},
						{
							"name": "addFrameMatrix",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds sprite frame, multiplied by matrix</p>"
						},
						{
							"name": "addVertexData",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds screen vertices from array</p>"
						},
						{
							"name": "addVertices",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Add an array of mesh vertices</p>"
						},
						{
							"name": "addVerticesMatrix",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Add an array of mesh vertices.</p>"
						},
						{
							"name": "addBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds other Bounds.</p>"
						},
						{
							"name": "addBoundsMask",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds other Bounds, masked with Bounds.</p>"
						},
						{
							"name": "addBoundsMatrix",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds other Bounds, multiplied by matrix. Bounds shouldn't be empty.</p>"
						},
						{
							"name": "addBoundsArea",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds other Bounds, masked with Rectangle.</p>"
						},
						{
							"name": "pad",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "addFramePad",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds padded frame. (x0, y0) should be strictly less than (x1, y1)</p>"
						},
						{
							"name": "minX",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "minY",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "maxX",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "maxY",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "updateID",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "Container",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>A Container represents a collection of display objects.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "onChildrenChange",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Overridable method that can be used by Container subclasses whenever the children array is modified</p>"
						},
						{
							"name": "addChild",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds one or more children to the container.</p>"
						},
						{
							"name": "addChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown</p>"
						},
						{
							"name": "swapChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Swaps the position of 2 Display Objects within this container.</p>"
						},
						{
							"name": "getChildIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the index position of a child DisplayObject instance</p>"
						},
						{
							"name": "setChildIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Changes the position of an existing child in the display object container</p>"
						},
						{
							"name": "getChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the child at the specified index</p>"
						},
						{
							"name": "removeChild",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes one or more children from the container.</p>"
						},
						{
							"name": "removeChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes a child from the specified index position.</p>"
						},
						{
							"name": "removeChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes all children from this container that are within the begin and end indexes.</p>"
						},
						{
							"name": "sortChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Sorts children by zIndex. Previous order is mantained for 2 children with the same zIndex.</p>"
						},
						{
							"name": "updateTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Updates the transform on all children of this container for rendering</p>"
						},
						{
							"name": "calculateBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Recalculates the bounds of the container.</p>"
						},
						{
							"name": "getLocalBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Retrieves the local bounds of the displayObject as a rectangle object.</p>"
						},
						{
							"name": "_calculateBounds",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "render",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Renders the object using the WebGL renderer</p>"
						},
						{
							"name": "renderAdvanced",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Render the object using the WebGL renderer and advanced features.</p>"
						},
						{
							"name": "_render",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>To be overridden by the subclasses.</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "width",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The width of the Container, setting this will actually modify the scale to achieve the value set</p>"
						},
						{
							"name": "height",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The height of the Container, setting this will actually modify the scale to achieve the value set</p>"
						},
						{
							"name": "children",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The array of children of this container.</p>"
						},
						{
							"name": "sortableChildren",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "sortDirty",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "childAdded",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when a DisplayObject is added to this Container.</p>"
						},
						{
							"name": "containerUpdateTransform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getChildByName",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the display object in the container.</p>"
						},
						{
							"name": "mixin",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Mixes all enumerable properties and methods from a source object to DisplayObject.</p>"
						},
						{
							"name": "_recursivePostUpdateTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Retrieves the bounds of the displayObject as a rectangle object.</p>"
						},
						{
							"name": "toGlobal",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Calculates the global position of the display object.</p>"
						},
						{
							"name": "toLocal",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Calculates the local position of the display object relative to another point.</p>"
						},
						{
							"name": "setParent",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Set the parent Container of this DisplayObject.</p>"
						},
						{
							"name": "setTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Convenience function to set the position, scale, skew and pivot at once.</p>"
						},
						{
							"name": "_tempDisplayObjectParent",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "x",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "y",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "worldTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Current transform of the object based on world (parent) factors.</p>"
						},
						{
							"name": "localTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Current transform of the object based on local factors: position, scale, other stuff.</p>"
						},
						{
							"name": "position",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "scale",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "pivot",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "skew",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "rotation",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "angle",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "zIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "worldVisible",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Indicates if the object is globally visible.</p>"
						},
						{
							"name": "mask",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "transform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "alpha",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The opacity of the object.</p>"
						},
						{
							"name": "visible",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "renderable",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "parent",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The display object container that contains this display object.</p>"
						},
						{
							"name": "worldAlpha",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The multiplied alpha of the displayObject.</p>"
						},
						{
							"name": "_lastSortedIndex",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_zIndex",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "filterArea",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "filters",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_enabledFilters",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_bounds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The bounds object, this is used to calculate and store the bounds of the displayObject.</p>"
						},
						{
							"name": "_localBounds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Local bounds object, swapped with <code>_bounds</code> when using <code>getLocalBounds()</code>.</p>"
						},
						{
							"name": "_boundsID",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Flags the cached bounds as dirty.</p>"
						},
						{
							"name": "_boundsRect",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Cache of this display-object's bounds-rectangle.</p>"
						},
						{
							"name": "_localBoundsRect",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Cache of this display-object's local-bounds rectangle.</p>"
						},
						{
							"name": "_mask",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The original, cached mask of the object.</p>"
						},
						{
							"name": "_destroyed",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>If the object has been destroyed via destroy(). If true, it should not be used.</p>"
						},
						{
							"name": "isSprite",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "isMask",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "added",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when this DisplayObject is added to a Container.</p>"
						},
						{
							"name": "removed",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when this DisplayObject is removed from a Container.</p>"
						},
						{
							"name": "displayObjectUpdateTransform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "mousedown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightdown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "click",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightclick",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mousemove",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseover",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseout",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerdown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointercancel",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointertap",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointermove",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerover",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerout",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchstart",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchend",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchcancel",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "tap",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchendoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "name",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The instance name of the object.</p>"
						},
						{
							"name": "getGlobalPosition",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.</p>"
						},
						{
							"name": "removedFrom",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when a DisplayObject is removed from this Container.</p>"
						}
					]
				},
				{
					"name": "DisplayObject",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>The base class for all objects that are rendered on the screen.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "mixin",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Mixes all enumerable properties and methods from a source object to DisplayObject.</p>"
						},
						{
							"name": "_recursivePostUpdateTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "updateTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Updates the object transform for rendering.</p>"
						},
						{
							"name": "getBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Retrieves the bounds of the displayObject as a rectangle object.</p>"
						},
						{
							"name": "getLocalBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Retrieves the local bounds of the displayObject as a rectangle object.</p>"
						},
						{
							"name": "toGlobal",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Calculates the global position of the display object.</p>"
						},
						{
							"name": "toLocal",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Calculates the local position of the display object relative to another point.</p>"
						},
						{
							"name": "setParent",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Set the parent Container of this DisplayObject.</p>"
						},
						{
							"name": "setTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Convenience function to set the position, scale, skew and pivot at once.</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_tempDisplayObjectParent",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "x",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "y",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "worldTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Current transform of the object based on world (parent) factors.</p>"
						},
						{
							"name": "localTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Current transform of the object based on local factors: position, scale, other stuff.</p>"
						},
						{
							"name": "position",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "scale",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "pivot",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "skew",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "rotation",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "angle",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "zIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "worldVisible",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Indicates if the object is globally visible.</p>"
						},
						{
							"name": "mask",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "transform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "alpha",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The opacity of the object.</p>"
						},
						{
							"name": "visible",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "renderable",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "parent",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The display object container that contains this display object.</p>"
						},
						{
							"name": "worldAlpha",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The multiplied alpha of the displayObject.</p>"
						},
						{
							"name": "_lastSortedIndex",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_zIndex",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "filterArea",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "filters",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_enabledFilters",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_bounds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The bounds object, this is used to calculate and store the bounds of the displayObject.</p>"
						},
						{
							"name": "_localBounds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Local bounds object, swapped with <code>_bounds</code> when using <code>getLocalBounds()</code>.</p>"
						},
						{
							"name": "_boundsID",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Flags the cached bounds as dirty.</p>"
						},
						{
							"name": "_boundsRect",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Cache of this display-object's bounds-rectangle.</p>"
						},
						{
							"name": "_localBoundsRect",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Cache of this display-object's local-bounds rectangle.</p>"
						},
						{
							"name": "_mask",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The original, cached mask of the object.</p>"
						},
						{
							"name": "_destroyed",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>If the object has been destroyed via destroy(). If true, it should not be used.</p>"
						},
						{
							"name": "isSprite",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "isMask",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "added",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when this DisplayObject is added to a Container.</p>"
						},
						{
							"name": "removed",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when this DisplayObject is removed from a Container.</p>"
						},
						{
							"name": "displayObjectUpdateTransform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "mousedown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightdown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "click",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightclick",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mousemove",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseover",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseout",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerdown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointercancel",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointertap",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointermove",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerover",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerout",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchstart",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchend",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchcancel",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "tap",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchendoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "name",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The instance name of the object.</p>"
						},
						{
							"name": "getGlobalPosition",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.</p>"
						},
						{
							"name": "removedFrom",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when a DisplayObject is removed from this Container.</p>"
						}
					]
				},
				{
					"name": "Extract",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "image",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Will return a HTML Image of the target</p>"
						},
						{
							"name": "base64",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "canvas",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Creates a Canvas element, renders this target to it and then returns it.</p>"
						},
						{
							"name": "pixels",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroys the extract</p>"
						},
						{
							"name": "arrayPostDivide",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Takes premultiplied pixel data and produces regular pixel data</p>"
						}
					]
				},
				{
					"name": "Graphics",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "geometry",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "clone",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "blendMode",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "tint",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "fill",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The current fill style.</p>"
						},
						{
							"name": "line",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The current line style.</p>"
						},
						{
							"name": "lineStyle",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "lineTextureStyle",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Like line style but support texture for line fill.</p>"
						},
						{
							"name": "startPoly",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "finishPoly",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "moveTo",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Moves the current drawing position to x, y.</p>"
						},
						{
							"name": "lineTo",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_initCurve",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Initialize the curve</p>"
						},
						{
							"name": "quadraticCurveTo",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "bezierCurveTo",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Calculate the points for a bezier curve and then draws it.</p>"
						},
						{
							"name": "arcTo",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The arcTo() method creates an arc/curve between two tangents on the canvas.</p>"
						},
						{
							"name": "arc",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The arc method creates an arc/curve (used to create circles, or parts of circles).</p>"
						},
						{
							"name": "beginFill",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "beginTextureFill",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Begin the texture fill</p>"
						},
						{
							"name": "endFill",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Applies a fill to the lines and shapes that were added since the last call to the beginFill() method.</p>"
						},
						{
							"name": "drawRect",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Draws a rectangle shape.</p>"
						},
						{
							"name": "drawRoundedRect",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Draw a rectangle shape with rounded/beveled corners.</p>"
						},
						{
							"name": "drawCircle",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Draws a circle.</p>"
						},
						{
							"name": "drawEllipse",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Draws an ellipse.</p>"
						},
						{
							"name": "drawPolygon",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Draws a polygon using the given path.</p>"
						},
						{
							"name": "drawShape",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Draw any shape.</p>"
						},
						{
							"name": "drawStar",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Draw a star shape with an arbitrary number of points.</p>"
						},
						{
							"name": "clear",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Clears the graphics that were drawn to this Graphics object, and resets fill and line style settings.</p>"
						},
						{
							"name": "isFastRect",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_render",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Renders the object using the WebGL renderer</p>"
						},
						{
							"name": "_populateBatches",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Populating batches for rendering</p>"
						},
						{
							"name": "_renderBatched",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Renders the batches using the BathedRenderer plugin</p>"
						},
						{
							"name": "_renderDirect",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Renders the graphics direct</p>"
						},
						{
							"name": "_renderDrawCallDirect",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Renders specific DrawCall</p>"
						},
						{
							"name": "_resolveDirectShader",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Resolves shader for direct rendering</p>"
						},
						{
							"name": "_calculateBounds",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Retrieves the bounds of the graphic shape as a rectangle object</p>"
						},
						{
							"name": "containsPoint",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Tests if a point is inside this graphics object</p>"
						},
						{
							"name": "calculateTints",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "calculateVertices",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "closePath",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Closes the current path.</p>"
						},
						{
							"name": "setMatrix",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Apply a matrix to the positional data.</p>"
						},
						{
							"name": "beginHole",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "endHole",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroys the Graphics object.</p>"
						},
						{
							"name": "shader",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "state",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_fillStyle",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Current fill style</p>"
						},
						{
							"name": "_lineStyle",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Current line style</p>"
						},
						{
							"name": "_matrix",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Current shape transform matrix.</p>"
						},
						{
							"name": "_holeMode",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Current hole mode is enabled.</p>"
						},
						{
							"name": "currentPath",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Current path</p>"
						},
						{
							"name": "batches",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>A collections of batches! These can be drawn by the renderer batch system.</p>"
						},
						{
							"name": "batchTint",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Update dirty for limiting calculating tints for batches.</p>"
						},
						{
							"name": "batchDirty",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Update dirty for limiting calculating batches.</p>"
						},
						{
							"name": "vertexData",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Copy of the object vertex data.</p>"
						},
						{
							"name": "pluginName",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Renderer plugin for batching</p>"
						},
						{
							"name": "_TEMP_POINT",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "static",
							"brief": "<p>Temporary point to use for containsPoint</p>"
						},
						{
							"name": "cacheAsBitmap",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "generateCanvasTexture",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "onChildrenChange",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Overridable method that can be used by Container subclasses whenever the children array is modified</p>"
						},
						{
							"name": "addChild",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds one or more children to the container.</p>"
						},
						{
							"name": "addChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown</p>"
						},
						{
							"name": "swapChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Swaps the position of 2 Display Objects within this container.</p>"
						},
						{
							"name": "getChildIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the index position of a child DisplayObject instance</p>"
						},
						{
							"name": "setChildIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Changes the position of an existing child in the display object container</p>"
						},
						{
							"name": "getChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the child at the specified index</p>"
						},
						{
							"name": "removeChild",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes one or more children from the container.</p>"
						},
						{
							"name": "removeChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes a child from the specified index position.</p>"
						},
						{
							"name": "removeChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes all children from this container that are within the begin and end indexes.</p>"
						},
						{
							"name": "sortChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Sorts children by zIndex. Previous order is mantained for 2 children with the same zIndex.</p>"
						},
						{
							"name": "updateTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Updates the transform on all children of this container for rendering</p>"
						},
						{
							"name": "calculateBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Recalculates the bounds of the container.</p>"
						},
						{
							"name": "getLocalBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Retrieves the local bounds of the displayObject as a rectangle object.</p>"
						},
						{
							"name": "render",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Renders the object using the WebGL renderer</p>"
						},
						{
							"name": "renderAdvanced",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Render the object using the WebGL renderer and advanced features.</p>"
						},
						{
							"name": "width",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The width of the Container, setting this will actually modify the scale to achieve the value set</p>"
						},
						{
							"name": "height",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The height of the Container, setting this will actually modify the scale to achieve the value set</p>"
						},
						{
							"name": "children",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The array of children of this container.</p>"
						},
						{
							"name": "sortableChildren",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "sortDirty",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "childAdded",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when a DisplayObject is added to this Container.</p>"
						},
						{
							"name": "containerUpdateTransform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getChildByName",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the display object in the container.</p>"
						},
						{
							"name": "mixin",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Mixes all enumerable properties and methods from a source object to DisplayObject.</p>"
						},
						{
							"name": "_recursivePostUpdateTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Retrieves the bounds of the displayObject as a rectangle object.</p>"
						},
						{
							"name": "toGlobal",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Calculates the global position of the display object.</p>"
						},
						{
							"name": "toLocal",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Calculates the local position of the display object relative to another point.</p>"
						},
						{
							"name": "setParent",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Set the parent Container of this DisplayObject.</p>"
						},
						{
							"name": "setTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Convenience function to set the position, scale, skew and pivot at once.</p>"
						},
						{
							"name": "_tempDisplayObjectParent",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "x",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "y",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "worldTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Current transform of the object based on world (parent) factors.</p>"
						},
						{
							"name": "localTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Current transform of the object based on local factors: position, scale, other stuff.</p>"
						},
						{
							"name": "position",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "scale",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "pivot",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "skew",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "rotation",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "angle",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "zIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "worldVisible",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Indicates if the object is globally visible.</p>"
						},
						{
							"name": "mask",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "transform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "alpha",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The opacity of the object.</p>"
						},
						{
							"name": "visible",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "renderable",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "parent",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The display object container that contains this display object.</p>"
						},
						{
							"name": "worldAlpha",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The multiplied alpha of the displayObject.</p>"
						},
						{
							"name": "_lastSortedIndex",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_zIndex",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "filterArea",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "filters",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_enabledFilters",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_bounds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The bounds object, this is used to calculate and store the bounds of the displayObject.</p>"
						},
						{
							"name": "_localBounds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Local bounds object, swapped with <code>_bounds</code> when using <code>getLocalBounds()</code>.</p>"
						},
						{
							"name": "_boundsID",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Flags the cached bounds as dirty.</p>"
						},
						{
							"name": "_boundsRect",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Cache of this display-object's bounds-rectangle.</p>"
						},
						{
							"name": "_localBoundsRect",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Cache of this display-object's local-bounds rectangle.</p>"
						},
						{
							"name": "_mask",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The original, cached mask of the object.</p>"
						},
						{
							"name": "_destroyed",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>If the object has been destroyed via destroy(). If true, it should not be used.</p>"
						},
						{
							"name": "isSprite",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "isMask",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "added",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when this DisplayObject is added to a Container.</p>"
						},
						{
							"name": "removed",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when this DisplayObject is removed from a Container.</p>"
						},
						{
							"name": "displayObjectUpdateTransform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "mousedown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightdown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "click",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightclick",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mousemove",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseover",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseout",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerdown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointercancel",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointertap",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointermove",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerover",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerout",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchstart",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchend",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchcancel",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "tap",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchendoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "name",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The instance name of the object.</p>"
						},
						{
							"name": "getGlobalPosition",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.</p>"
						},
						{
							"name": "removedFrom",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when a DisplayObject is removed from this Container.</p>"
						}
					]
				},
				{
					"name": "GraphicsData",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>A class to contain data useful for Graphics objects</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "clone",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Creates a new GraphicsData object with the same values as this one.</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroys the Graphics data.</p>"
						},
						{
							"name": "shape",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "lineStyle",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "fillStyle",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "matrix",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "type",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "points",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "holes",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "GraphicsGeometry",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "bounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Get the current bounds of the graphic geometry.</p>"
						},
						{
							"name": "invalidate",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "clear",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Clears the graphics that were drawn to this Graphics object, and resets fill and line style settings.</p>"
						},
						{
							"name": "drawShape",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Draws the given shape to this Graphics object. Can be any of Circle, Rectangle, Ellipse, Line or Polygon.</p>"
						},
						{
							"name": "drawHole",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Draws the given shape to this Graphics object. Can be any of Circle, Rectangle, Ellipse, Line or Polygon.</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroys the GraphicsGeometry object.</p>"
						},
						{
							"name": "containsPoint",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Check to see if a point is contained within this geometry.</p>"
						},
						{
							"name": "updateBatches",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_compareStyles",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Affinity check</p>"
						},
						{
							"name": "validateBatching",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Test geometry for batching process.</p>"
						},
						{
							"name": "packBatches",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Offset the indices so that it works with the batcher.</p>"
						},
						{
							"name": "isBatchable",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "buildDrawCalls",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Converts intermediate batches data to drawCalls.</p>"
						},
						{
							"name": "packAttributes",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Packs attributes to single buffer.</p>"
						},
						{
							"name": "processFill",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Process fill part of Graphics.</p>"
						},
						{
							"name": "processLine",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Process line part of Graphics.</p>"
						},
						{
							"name": "processHoles",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Process the holes data.</p>"
						},
						{
							"name": "calculateBounds",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Update the local bounds of the object. Expensive to use performance-wise.</p>"
						},
						{
							"name": "transformPoints",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Transform points using matrix.</p>"
						},
						{
							"name": "addColors",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Add colors.</p>"
						},
						{
							"name": "addTextureIds",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Add texture id that the shader/fragment wants to use.</p>"
						},
						{
							"name": "addUvs",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Generates the UVs for a shape.</p>"
						},
						{
							"name": "adjustUvs",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "points",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>An array of points to draw, 2 numbers per point</p>"
						},
						{
							"name": "colors",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The collection of colors</p>"
						},
						{
							"name": "uvs",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The UVs collection</p>"
						},
						{
							"name": "indices",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The indices of the vertices</p>"
						},
						{
							"name": "textureIds",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Reference to the texture IDs.</p>"
						},
						{
							"name": "graphicsData",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The collection of drawn shapes.</p>"
						},
						{
							"name": "dirty",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Used to detect if the graphics object has changed.</p>"
						},
						{
							"name": "batchDirty",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Batches need to regenerated if the geometry is updated.</p>"
						},
						{
							"name": "cacheDirty",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Used to check if the cache is dirty.</p>"
						},
						{
							"name": "clearDirty",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Used to detect if we cleared the graphicsData.</p>"
						},
						{
							"name": "drawCalls",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>List of current draw calls drived from the batches.</p>"
						},
						{
							"name": "batches",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "shapeIndex",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Index of the last batched shape in the stack of calls.</p>"
						},
						{
							"name": "_bounds",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Cached bounds.</p>"
						},
						{
							"name": "boundsDirty",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The bounds dirty flag.</p>"
						},
						{
							"name": "boundsPadding",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Padding to add to the bounds.</p>"
						},
						{
							"name": "closePointEps",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_buffer",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Buffer used for position, color, texture IDs</p>"
						},
						{
							"name": "_indexBuffer",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Index buffer data</p>"
						}
					]
				},
				{
					"name": "interaction",
					"type": "NSDoc",
					"access": "public",
					"scope": "static",
					"brief": "<p>This namespace contains a renderer plugin for handling mouse, pointer, and touch events.</p>",
					"children": [
						{
							"name": "InteractionData",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "<p>Holds all information related to an Interaction event</p>",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "pointerId",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "getLocalPosition",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>This will return the local coordinates of the specified displayObject for this InteractionData</p>"
								},
								{
									"name": "copyEvent",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Copies properties from normalized event data.</p>"
								},
								{
									"name": "reset",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Resets the data for pooling.</p>"
								},
								{
									"name": "global",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>This point stores the global coords of where the touch/mouse event happened</p>"
								},
								{
									"name": "target",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The target Sprite that was interacted with</p>"
								},
								{
									"name": "originalEvent",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>When passed to an event handler, this will be the original DOM Event that was captured</p>"
								},
								{
									"name": "identifier",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Unique identifier for this interaction</p>"
								},
								{
									"name": "isPrimary",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "button",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "buttons",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "width",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "height",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "tiltX",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "tiltY",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "pointerType",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "pressure",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "rotationAngle",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "twist",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "tangentialPressure",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								}
							]
						},
						{
							"name": "InteractionEvent",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "<p>Event class that mimics native DOM events.</p>",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "stopPropagation",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Prevents event from reaching any objects other than the current object.</p>"
								},
								{
									"name": "reset",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Resets the event.</p>"
								},
								{
									"name": "stopped",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Whether this event will continue propagating in the tree.</p>"
								},
								{
									"name": "stopsPropagatingAt",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>At which object this event stops propagating.</p>"
								},
								{
									"name": "stopPropagationHint",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "target",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "currentTarget",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The object whose event listener’s callback is currently being invoked.</p>"
								},
								{
									"name": "type",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Type of the event</p>"
								},
								{
									"name": "data",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>InteractionData related to this event</p>"
								}
							]
						},
						{
							"name": "InteractionManager",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "<p>The interaction manager deals with mouse, touch and pointer events.</p>",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "useSystemTicker",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Should the InteractionManager automatically add {@link tickerUpdate} to {@link PIXI.Ticker.system}.</p>"
								},
								{
									"name": "hitTest",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Hit tests a point against the display tree, returning the first interactive object that is hit.</p>"
								},
								{
									"name": "setTargetElement",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "addTickerListener",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Add the ticker listener</p>"
								},
								{
									"name": "removeTickerListener",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Remove the ticker listener</p>"
								},
								{
									"name": "addEvents",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Registers all the DOM events</p>"
								},
								{
									"name": "removeEvents",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Removes all the DOM events that were previously registered</p>"
								},
								{
									"name": "tickerUpdate",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "update",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Updates the state of interactive objects.</p>"
								},
								{
									"name": "setCursorMode",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Sets the current cursor mode, handling any callbacks or CSS style changes.</p>"
								},
								{
									"name": "dispatchEvent",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Dispatches an event on the display object that was interacted with</p>"
								},
								{
									"name": "delayDispatchEvent",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "mapPositionToPoint",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "processInteractive",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "onPointerDown",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "processPointerDown",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Processes the result of the pointer down check and dispatches the event if need be</p>"
								},
								{
									"name": "onPointerComplete",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Is called when the pointer button is released on the renderer element</p>"
								},
								{
									"name": "onPointerCancel",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "processPointerCancel",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Processes the result of the pointer cancel check and dispatches the event if need be</p>"
								},
								{
									"name": "onPointerUp",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "processPointerUp",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Processes the result of the pointer up check and dispatches the event if need be</p>"
								},
								{
									"name": "onPointerMove",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "processPointerMove",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Processes the result of the pointer move check and dispatches the event if need be</p>"
								},
								{
									"name": "onPointerOut",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "processPointerOverOut",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Processes the result of the pointer over/out check and dispatches the event if need be</p>"
								},
								{
									"name": "onPointerOver",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "getInteractionDataForPointerId",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Get InteractionData for a given pointerId. Store that data as well</p>"
								},
								{
									"name": "releaseInteractionDataForPointerId",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Return unused InteractionData to the pool, for a given pointerId</p>"
								},
								{
									"name": "configureInteractionEventForDOMEvent",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Configure an InteractionEvent to wrap a DOM PointerEvent and InteractionData</p>"
								},
								{
									"name": "normalizeToPointerData",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Ensures that the original event object contains all data that a regular pointer event would have</p>"
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Destroys the interaction manager</p>"
								},
								{
									"name": "renderer",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The renderer this interaction manager works for.</p>"
								},
								{
									"name": "autoPreventDefault",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "interactionFrequency",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Maximum requency in milliseconds at which pointer over/out states will be checked by {@link tickerUpdate}.</p>"
								},
								{
									"name": "mouse",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The mouse data</p>"
								},
								{
									"name": "activeInteractionData",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Actively tracked InteractionData</p>"
								},
								{
									"name": "interactionDataPool",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Pool of unused InteractionData</p>"
								},
								{
									"name": "eventData",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>An event data object to handle all the event tracking/dispatching</p>"
								},
								{
									"name": "interactionDOMElement",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": "<p>The DOM element to bind to.</p>"
								},
								{
									"name": "moveWhenInside",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "eventsAdded",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": "<p>Have events been attached to the dom element?</p>"
								},
								{
									"name": "tickerAdded",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": "<p>Has the system ticker been added?</p>"
								},
								{
									"name": "mouseOverRenderer",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": "<p>Is the mouse hovering over the renderer?</p>"
								},
								{
									"name": "supportsTouchEvents",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "supportsPointerEvents",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "cursorStyles",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "currentCursorMode",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "cursor",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Internal cached let.</p>"
								},
								{
									"name": "resolution",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The current resolution / device pixel ratio.</p>"
								},
								{
									"name": "delayedEvents",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Delayed pointer events. Used to guarantee correct ordering of over/out events.</p>"
								},
								{
									"name": "search",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>TreeSearch component that is used to hitTest stage tree</p>"
								},
								{
									"name": "_useSystemTicker",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "touchmove",
									"type": "EventDoc",
									"access": "public",
									"scope": "static",
									"brief": "<p>Fired when a touch point is moved along the display object.</p>"
								}
							]
						},
						{
							"name": "InteractionTrackingData",
							"type": "ClassDoc",
							"access": "private",
							"scope": "inner",
							"brief": "<p>DisplayObjects with the {@link PIXI.interaction.interactiveTarget} mixin use this class to track interactions</p>",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_doSet",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "pointerId",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Unique pointer id of the event</p>"
								},
								{
									"name": "flags",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>State of the tracking data, expressed as bit flags</p>"
								},
								{
									"name": "none",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Is the tracked event inactive (not over or down)?</p>"
								},
								{
									"name": "over",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Is the tracked event over the DisplayObject?</p>"
								},
								{
									"name": "rightDown",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Did the right mouse button come down in the DisplayObject?</p>"
								},
								{
									"name": "leftDown",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Did the left mouse button come down in the DisplayObject?</p>"
								}
							]
						},
						{
							"name": "TreeSearch",
							"type": "ClassDoc",
							"access": "private",
							"scope": "inner",
							"brief": "<p>Strategy how to search through stage tree for interactive objects</p>",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "recursiveFindHit",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Recursive implementation for findHit</p>"
								},
								{
									"name": "findHit",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								}
							]
						}
					]
				},
				{
					"name": "IHitArea",
					"type": "InterfaceDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>Interface for classes that represent a hit area.</p>",
					"children": [
						{
							"name": "contains",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Checks whether the x and y coordinates given are contained within this area</p>"
						}
					]
				},
				{
					"name": "AppLoaderPlugin",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "init",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "loader",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "Loader",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>The new loader, extends Resource Loader by Chad Engler: https://github.com/englercj/resource-loader</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_protected",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "shared",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "registerPlugin",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "_plugins",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "static",
							"brief": "<p>Collection of all installed <code>use</code> middleware for Loader.</p>"
						},
						{
							"name": "onStart",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "onProgress",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "onError",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "onLoad",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "onComplete",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "LoaderResource",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": ""
				},
				{
					"name": "TextureLoader",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "use",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "Matrix",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>The PixiJS Matrix as a class makes it a lot faster.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "fromArray",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Creates a Matrix object based on the given array. The Element to Matrix mapping order is as follows:</p>"
						},
						{
							"name": "set",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>sets the matrix properties</p>"
						},
						{
							"name": "toArray",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Creates an array from the current Matrix object.</p>"
						},
						{
							"name": "apply",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "applyInverse",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "translate",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Translates the matrix on the x and y.</p>"
						},
						{
							"name": "scale",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Applies a scale transformation to the matrix.</p>"
						},
						{
							"name": "rotate",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Applies a rotation transformation to the matrix.</p>"
						},
						{
							"name": "append",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Appends the given Matrix to this Matrix.</p>"
						},
						{
							"name": "setTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Sets the matrix based on all the available properties</p>"
						},
						{
							"name": "prepend",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Prepends the given Matrix to this Matrix.</p>"
						},
						{
							"name": "decompose",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Decomposes the matrix (x, y, scaleX, scaleY, and rotation) and sets the properties on to a transform.</p>"
						},
						{
							"name": "invert",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Inverts this matrix</p>"
						},
						{
							"name": "identity",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Resets this Matrix to an identity (default) matrix.</p>"
						},
						{
							"name": "clone",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Creates a new Matrix object with the same values as this one.</p>"
						},
						{
							"name": "copyTo",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Changes the values of the given matrix to be the same as the ones in this matrix</p>"
						},
						{
							"name": "copyFrom",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Changes the values of the matrix to be the same as the ones in given matrix</p>"
						},
						{
							"name": "IDENTITY",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>A default (identity) matrix</p>"
						},
						{
							"name": "TEMP_MATRIX",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>A temp matrix</p>"
						},
						{
							"name": "a",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "b",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "c",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "d",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "tx",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "ty",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "ObservablePoint",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "clone",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "set",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "copyFrom",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Copies x and y from the given point</p>"
						},
						{
							"name": "copyTo",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Copies x and y into the given point</p>"
						},
						{
							"name": "equals",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns true if the given point is equal to this point</p>"
						},
						{
							"name": "x",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The position of the displayObject on the x axis relative to the local coordinates of the parent.</p>"
						},
						{
							"name": "y",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The position of the displayObject on the x axis relative to the local coordinates of the parent.</p>"
						}
					]
				},
				{
					"name": "Point",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "clone",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Creates a clone of this point</p>"
						},
						{
							"name": "copyFrom",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Copies x and y from the given point</p>"
						},
						{
							"name": "copyTo",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Copies x and y into the given point</p>"
						},
						{
							"name": "equals",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns true if the given point is equal to this point</p>"
						},
						{
							"name": "set",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "x",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "y",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "Transform",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>Transform that takes care about its versions</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "onChange",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Called when a value changes.</p>"
						},
						{
							"name": "updateSkew",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Called when the skew or the rotation changes.</p>"
						},
						{
							"name": "updateLocalTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Updates the local transformation matrix.</p>"
						},
						{
							"name": "updateTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Updates the local and the world transformation matrices.</p>"
						},
						{
							"name": "setFromMatrix",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Decomposes a matrix and sets the transforms properties based on it.</p>"
						},
						{
							"name": "rotation",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The rotation of the object in radians.</p>"
						},
						{
							"name": "worldTransform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The world transformation matrix.</p>"
						},
						{
							"name": "localTransform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The local transformation matrix.</p>"
						},
						{
							"name": "position",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The coordinate of the object relative to the local coordinates of the parent.</p>"
						},
						{
							"name": "scale",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The scale factor of the object.</p>"
						},
						{
							"name": "pivot",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The pivot point of the displayObject that it rotates around.</p>"
						},
						{
							"name": "skew",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The skew amount, on the x and y axis.</p>"
						},
						{
							"name": "_rotation",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The rotation amount.</p>"
						},
						{
							"name": "_cx",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_sx",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_cy",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_sy",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_localID",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The locally unique ID of the local transform.</p>"
						},
						{
							"name": "_currentLocalID",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_worldID",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The locally unique ID of the world transform.</p>"
						},
						{
							"name": "_parentID",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "IDENTITY",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>A default (identity) transform</p>"
						}
					]
				},
				{
					"name": "groupD8",
					"type": "NSDoc",
					"access": "public",
					"scope": "static",
					"brief": ""
				},
				{
					"name": "Mesh",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>Base mesh class.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uvBuffer",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "verticesBuffer",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "material",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "blendMode",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "roundPixels",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "tint",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "texture",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The texture that the Mesh uses.</p>"
						},
						{
							"name": "_render",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_renderDefault",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_renderToBatch",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "calculateVertices",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Updates vertexData field based on transform and vertices</p>"
						},
						{
							"name": "calculateUvs",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Updates uv field based on from geometry uv's or batchUvs</p>"
						},
						{
							"name": "_calculateBounds",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "containsPoint",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Tests if a point is inside this mesh. Works only for PIXI.DRAW_MODES.TRIANGLES.</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroys the Mesh object.</p>"
						},
						{
							"name": "geometry",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "shader",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "state",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "drawMode",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The way the Mesh should be drawn, can be any of the {@link PIXI.DRAW_MODES} constants.</p>"
						},
						{
							"name": "start",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "size",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uvs",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "indices",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "vertexData",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "vertexDirty",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_roundPixels",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Internal roundPixels field</p>"
						},
						{
							"name": "batchUvs",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "BATCHABLE_SIZE",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "_canvasPadding",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "static",
							"brief": "<p>Internal variable for <code>canvasPadding</code>.</p>"
						},
						{
							"name": "onChildrenChange",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Overridable method that can be used by Container subclasses whenever the children array is modified</p>"
						},
						{
							"name": "addChild",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds one or more children to the container.</p>"
						},
						{
							"name": "addChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown</p>"
						},
						{
							"name": "swapChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Swaps the position of 2 Display Objects within this container.</p>"
						},
						{
							"name": "getChildIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the index position of a child DisplayObject instance</p>"
						},
						{
							"name": "setChildIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Changes the position of an existing child in the display object container</p>"
						},
						{
							"name": "getChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the child at the specified index</p>"
						},
						{
							"name": "removeChild",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes one or more children from the container.</p>"
						},
						{
							"name": "removeChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes a child from the specified index position.</p>"
						},
						{
							"name": "removeChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes all children from this container that are within the begin and end indexes.</p>"
						},
						{
							"name": "sortChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Sorts children by zIndex. Previous order is mantained for 2 children with the same zIndex.</p>"
						},
						{
							"name": "updateTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Updates the transform on all children of this container for rendering</p>"
						},
						{
							"name": "calculateBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Recalculates the bounds of the container.</p>"
						},
						{
							"name": "getLocalBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Retrieves the local bounds of the displayObject as a rectangle object.</p>"
						},
						{
							"name": "render",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Renders the object using the WebGL renderer</p>"
						},
						{
							"name": "renderAdvanced",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Render the object using the WebGL renderer and advanced features.</p>"
						},
						{
							"name": "width",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The width of the Container, setting this will actually modify the scale to achieve the value set</p>"
						},
						{
							"name": "height",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The height of the Container, setting this will actually modify the scale to achieve the value set</p>"
						},
						{
							"name": "children",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The array of children of this container.</p>"
						},
						{
							"name": "sortableChildren",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "sortDirty",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "childAdded",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when a DisplayObject is added to this Container.</p>"
						},
						{
							"name": "containerUpdateTransform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getChildByName",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the display object in the container.</p>"
						},
						{
							"name": "mixin",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Mixes all enumerable properties and methods from a source object to DisplayObject.</p>"
						},
						{
							"name": "_recursivePostUpdateTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Retrieves the bounds of the displayObject as a rectangle object.</p>"
						},
						{
							"name": "toGlobal",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Calculates the global position of the display object.</p>"
						},
						{
							"name": "toLocal",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Calculates the local position of the display object relative to another point.</p>"
						},
						{
							"name": "setParent",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Set the parent Container of this DisplayObject.</p>"
						},
						{
							"name": "setTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Convenience function to set the position, scale, skew and pivot at once.</p>"
						},
						{
							"name": "_tempDisplayObjectParent",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "x",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "y",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "worldTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Current transform of the object based on world (parent) factors.</p>"
						},
						{
							"name": "localTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Current transform of the object based on local factors: position, scale, other stuff.</p>"
						},
						{
							"name": "position",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "scale",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "pivot",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "skew",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "rotation",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "angle",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "zIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "worldVisible",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Indicates if the object is globally visible.</p>"
						},
						{
							"name": "mask",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "transform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "alpha",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The opacity of the object.</p>"
						},
						{
							"name": "visible",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "renderable",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "parent",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The display object container that contains this display object.</p>"
						},
						{
							"name": "worldAlpha",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The multiplied alpha of the displayObject.</p>"
						},
						{
							"name": "_lastSortedIndex",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_zIndex",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "filterArea",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "filters",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_enabledFilters",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_bounds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The bounds object, this is used to calculate and store the bounds of the displayObject.</p>"
						},
						{
							"name": "_localBounds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Local bounds object, swapped with <code>_bounds</code> when using <code>getLocalBounds()</code>.</p>"
						},
						{
							"name": "_boundsID",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Flags the cached bounds as dirty.</p>"
						},
						{
							"name": "_boundsRect",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Cache of this display-object's bounds-rectangle.</p>"
						},
						{
							"name": "_localBoundsRect",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Cache of this display-object's local-bounds rectangle.</p>"
						},
						{
							"name": "_mask",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The original, cached mask of the object.</p>"
						},
						{
							"name": "_destroyed",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>If the object has been destroyed via destroy(). If true, it should not be used.</p>"
						},
						{
							"name": "isSprite",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "isMask",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "added",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when this DisplayObject is added to a Container.</p>"
						},
						{
							"name": "removed",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when this DisplayObject is removed from a Container.</p>"
						},
						{
							"name": "displayObjectUpdateTransform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "mousedown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightdown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "click",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightclick",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mousemove",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseover",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseout",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerdown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointercancel",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointertap",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointermove",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerover",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerout",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchstart",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchend",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchcancel",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "tap",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchendoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "name",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The instance name of the object.</p>"
						},
						{
							"name": "getGlobalPosition",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.</p>"
						},
						{
							"name": "removedFrom",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when a DisplayObject is removed from this Container.</p>"
						}
					]
				},
				{
					"name": "MeshBatchUvs",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>Class controls cache for UV mapping from Texture normal space to BaseTexture normal space.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "update",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>updates</p>"
						},
						{
							"name": "uvBuffer",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uvMatrix",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "data",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "MeshGeometry",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>Standard 2D geometry used in PixiJS.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "vertexDirtyId",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_updateId",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "addAttribute",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getAttribute",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>returns the requested attribute</p>"
						},
						{
							"name": "getBuffer",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>returns the requested buffer</p>"
						},
						{
							"name": "addIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>returns the index buffer</p>"
						},
						{
							"name": "interleave",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getSize",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "dispose",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>disposes WebGL resources that are connected to this geometry</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroys the geometry.</p>"
						},
						{
							"name": "clone",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>returns a clone of the geometry</p>"
						},
						{
							"name": "merge",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "glVertexArrayObjects",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>A map of renderer IDs to webgl VAOs</p>"
						},
						{
							"name": "instanceCount",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "refCount",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "MeshMaterial",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "texture",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "alpha",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>This gets automatically set by the object using this.</p>"
						},
						{
							"name": "tint",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "update",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_colorDirty",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uvMatrix",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>TextureMatrix instance for this Mesh, used to track Texture changes</p>"
						},
						{
							"name": "batchable",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "pluginName",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Renderer plugin for batching</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uniforms",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "from",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>A short hand function to create a shader based of a vertex and fragment shader</p>"
						},
						{
							"name": "program",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Program that the shader uses</p>"
						}
					]
				},
				{
					"name": "NineSlicePlane",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "textureUpdated",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "vertices",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "updateHorizontalVertices",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Updates the horizontal vertices.</p>"
						},
						{
							"name": "updateVerticalVertices",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Updates the vertical vertices.</p>"
						},
						{
							"name": "_getMinScale",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Returns the smaller of a set of vertical and horizontal scale of nine slice corners.</p>"
						},
						{
							"name": "width",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The width of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane</p>"
						},
						{
							"name": "height",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The height of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane</p>"
						},
						{
							"name": "leftWidth",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The width of the left column</p>"
						},
						{
							"name": "rightWidth",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The width of the right column</p>"
						},
						{
							"name": "topHeight",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The height of the top row</p>"
						},
						{
							"name": "bottomHeight",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The height of the bottom row</p>"
						},
						{
							"name": "_refresh",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Refreshes NineSlicePlane coords. All of them.</p>"
						},
						{
							"name": "_width",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The width of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane</p>"
						},
						{
							"name": "_height",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The height of the NineSlicePlane, setting this will actually modify the vertices and UV's of this plane</p>"
						},
						{
							"name": "_leftWidth",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>The width of the left column (a)</p>"
						},
						{
							"name": "_rightWidth",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>The width of the right column (b)</p>"
						},
						{
							"name": "_topHeight",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>The height of the top row (c)</p>"
						},
						{
							"name": "_bottomHeight",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>The height of the bottom row (d)</p>"
						},
						{
							"name": "_cachedTint",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_canvasUvs",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "texture",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_render",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uvBuffer",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "verticesBuffer",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "material",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "blendMode",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "roundPixels",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "tint",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_renderDefault",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_renderToBatch",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "calculateVertices",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Updates vertexData field based on transform and vertices</p>"
						},
						{
							"name": "calculateUvs",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Updates uv field based on from geometry uv's or batchUvs</p>"
						},
						{
							"name": "_calculateBounds",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "containsPoint",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Tests if a point is inside this mesh. Works only for PIXI.DRAW_MODES.TRIANGLES.</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroys the Mesh object.</p>"
						},
						{
							"name": "geometry",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "shader",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "state",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "drawMode",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The way the Mesh should be drawn, can be any of the {@link PIXI.DRAW_MODES} constants.</p>"
						},
						{
							"name": "start",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "size",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uvs",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "indices",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "vertexData",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "vertexDirty",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_roundPixels",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Internal roundPixels field</p>"
						},
						{
							"name": "batchUvs",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "onChildrenChange",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Overridable method that can be used by Container subclasses whenever the children array is modified</p>"
						},
						{
							"name": "addChild",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds one or more children to the container.</p>"
						},
						{
							"name": "addChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown</p>"
						},
						{
							"name": "swapChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Swaps the position of 2 Display Objects within this container.</p>"
						},
						{
							"name": "getChildIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the index position of a child DisplayObject instance</p>"
						},
						{
							"name": "setChildIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Changes the position of an existing child in the display object container</p>"
						},
						{
							"name": "getChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the child at the specified index</p>"
						},
						{
							"name": "removeChild",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes one or more children from the container.</p>"
						},
						{
							"name": "removeChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes a child from the specified index position.</p>"
						},
						{
							"name": "removeChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes all children from this container that are within the begin and end indexes.</p>"
						},
						{
							"name": "sortChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Sorts children by zIndex. Previous order is mantained for 2 children with the same zIndex.</p>"
						},
						{
							"name": "updateTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Updates the transform on all children of this container for rendering</p>"
						},
						{
							"name": "calculateBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Recalculates the bounds of the container.</p>"
						},
						{
							"name": "getLocalBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Retrieves the local bounds of the displayObject as a rectangle object.</p>"
						},
						{
							"name": "render",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Renders the object using the WebGL renderer</p>"
						},
						{
							"name": "renderAdvanced",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Render the object using the WebGL renderer and advanced features.</p>"
						},
						{
							"name": "children",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The array of children of this container.</p>"
						},
						{
							"name": "sortableChildren",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "sortDirty",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "childAdded",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when a DisplayObject is added to this Container.</p>"
						},
						{
							"name": "containerUpdateTransform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getChildByName",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the display object in the container.</p>"
						},
						{
							"name": "mixin",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Mixes all enumerable properties and methods from a source object to DisplayObject.</p>"
						},
						{
							"name": "_recursivePostUpdateTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Retrieves the bounds of the displayObject as a rectangle object.</p>"
						},
						{
							"name": "toGlobal",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Calculates the global position of the display object.</p>"
						},
						{
							"name": "toLocal",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Calculates the local position of the display object relative to another point.</p>"
						},
						{
							"name": "setParent",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Set the parent Container of this DisplayObject.</p>"
						},
						{
							"name": "setTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Convenience function to set the position, scale, skew and pivot at once.</p>"
						},
						{
							"name": "_tempDisplayObjectParent",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "x",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "y",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "worldTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Current transform of the object based on world (parent) factors.</p>"
						},
						{
							"name": "localTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Current transform of the object based on local factors: position, scale, other stuff.</p>"
						},
						{
							"name": "position",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "scale",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "pivot",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "skew",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "rotation",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "angle",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "zIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "worldVisible",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Indicates if the object is globally visible.</p>"
						},
						{
							"name": "mask",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "transform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "alpha",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The opacity of the object.</p>"
						},
						{
							"name": "visible",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "renderable",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "parent",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The display object container that contains this display object.</p>"
						},
						{
							"name": "worldAlpha",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The multiplied alpha of the displayObject.</p>"
						},
						{
							"name": "_lastSortedIndex",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_zIndex",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "filterArea",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "filters",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_enabledFilters",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_bounds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The bounds object, this is used to calculate and store the bounds of the displayObject.</p>"
						},
						{
							"name": "_localBounds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Local bounds object, swapped with <code>_bounds</code> when using <code>getLocalBounds()</code>.</p>"
						},
						{
							"name": "_boundsID",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Flags the cached bounds as dirty.</p>"
						},
						{
							"name": "_boundsRect",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Cache of this display-object's bounds-rectangle.</p>"
						},
						{
							"name": "_localBoundsRect",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Cache of this display-object's local-bounds rectangle.</p>"
						},
						{
							"name": "_mask",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The original, cached mask of the object.</p>"
						},
						{
							"name": "_destroyed",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>If the object has been destroyed via destroy(). If true, it should not be used.</p>"
						},
						{
							"name": "isSprite",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "isMask",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "added",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when this DisplayObject is added to a Container.</p>"
						},
						{
							"name": "removed",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when this DisplayObject is removed from a Container.</p>"
						},
						{
							"name": "displayObjectUpdateTransform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "mousedown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightdown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "click",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightclick",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mousemove",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseover",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseout",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerdown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointercancel",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointertap",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointermove",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerover",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerout",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchstart",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchend",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchcancel",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "tap",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchendoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "name",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The instance name of the object.</p>"
						},
						{
							"name": "getGlobalPosition",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.</p>"
						},
						{
							"name": "removedFrom",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when a DisplayObject is removed from this Container.</p>"
						}
					]
				},
				{
					"name": "SimpleMesh",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "vertices",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_render",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "autoUpdate",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uvBuffer",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "verticesBuffer",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "material",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "blendMode",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "roundPixels",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "tint",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "texture",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The texture that the Mesh uses.</p>"
						},
						{
							"name": "_renderDefault",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_renderToBatch",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "calculateVertices",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Updates vertexData field based on transform and vertices</p>"
						},
						{
							"name": "calculateUvs",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Updates uv field based on from geometry uv's or batchUvs</p>"
						},
						{
							"name": "_calculateBounds",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "containsPoint",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Tests if a point is inside this mesh. Works only for PIXI.DRAW_MODES.TRIANGLES.</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroys the Mesh object.</p>"
						},
						{
							"name": "geometry",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "shader",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "state",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "drawMode",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The way the Mesh should be drawn, can be any of the {@link PIXI.DRAW_MODES} constants.</p>"
						},
						{
							"name": "start",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "size",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uvs",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "indices",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "vertexData",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "vertexDirty",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_roundPixels",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Internal roundPixels field</p>"
						},
						{
							"name": "batchUvs",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "onChildrenChange",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Overridable method that can be used by Container subclasses whenever the children array is modified</p>"
						},
						{
							"name": "addChild",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds one or more children to the container.</p>"
						},
						{
							"name": "addChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown</p>"
						},
						{
							"name": "swapChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Swaps the position of 2 Display Objects within this container.</p>"
						},
						{
							"name": "getChildIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the index position of a child DisplayObject instance</p>"
						},
						{
							"name": "setChildIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Changes the position of an existing child in the display object container</p>"
						},
						{
							"name": "getChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the child at the specified index</p>"
						},
						{
							"name": "removeChild",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes one or more children from the container.</p>"
						},
						{
							"name": "removeChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes a child from the specified index position.</p>"
						},
						{
							"name": "removeChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes all children from this container that are within the begin and end indexes.</p>"
						},
						{
							"name": "sortChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Sorts children by zIndex. Previous order is mantained for 2 children with the same zIndex.</p>"
						},
						{
							"name": "updateTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Updates the transform on all children of this container for rendering</p>"
						},
						{
							"name": "calculateBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Recalculates the bounds of the container.</p>"
						},
						{
							"name": "getLocalBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Retrieves the local bounds of the displayObject as a rectangle object.</p>"
						},
						{
							"name": "render",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Renders the object using the WebGL renderer</p>"
						},
						{
							"name": "renderAdvanced",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Render the object using the WebGL renderer and advanced features.</p>"
						},
						{
							"name": "width",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The width of the Container, setting this will actually modify the scale to achieve the value set</p>"
						},
						{
							"name": "height",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The height of the Container, setting this will actually modify the scale to achieve the value set</p>"
						},
						{
							"name": "children",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The array of children of this container.</p>"
						},
						{
							"name": "sortableChildren",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "sortDirty",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "childAdded",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when a DisplayObject is added to this Container.</p>"
						},
						{
							"name": "containerUpdateTransform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getChildByName",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the display object in the container.</p>"
						},
						{
							"name": "mixin",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Mixes all enumerable properties and methods from a source object to DisplayObject.</p>"
						},
						{
							"name": "_recursivePostUpdateTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Retrieves the bounds of the displayObject as a rectangle object.</p>"
						},
						{
							"name": "toGlobal",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Calculates the global position of the display object.</p>"
						},
						{
							"name": "toLocal",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Calculates the local position of the display object relative to another point.</p>"
						},
						{
							"name": "setParent",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Set the parent Container of this DisplayObject.</p>"
						},
						{
							"name": "setTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Convenience function to set the position, scale, skew and pivot at once.</p>"
						},
						{
							"name": "_tempDisplayObjectParent",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "x",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "y",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "worldTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Current transform of the object based on world (parent) factors.</p>"
						},
						{
							"name": "localTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Current transform of the object based on local factors: position, scale, other stuff.</p>"
						},
						{
							"name": "position",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "scale",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "pivot",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "skew",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "rotation",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "angle",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "zIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "worldVisible",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Indicates if the object is globally visible.</p>"
						},
						{
							"name": "mask",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "transform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "alpha",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The opacity of the object.</p>"
						},
						{
							"name": "visible",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "renderable",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "parent",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The display object container that contains this display object.</p>"
						},
						{
							"name": "worldAlpha",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The multiplied alpha of the displayObject.</p>"
						},
						{
							"name": "_lastSortedIndex",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_zIndex",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "filterArea",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "filters",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_enabledFilters",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_bounds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The bounds object, this is used to calculate and store the bounds of the displayObject.</p>"
						},
						{
							"name": "_localBounds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Local bounds object, swapped with <code>_bounds</code> when using <code>getLocalBounds()</code>.</p>"
						},
						{
							"name": "_boundsID",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Flags the cached bounds as dirty.</p>"
						},
						{
							"name": "_boundsRect",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Cache of this display-object's bounds-rectangle.</p>"
						},
						{
							"name": "_localBoundsRect",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Cache of this display-object's local-bounds rectangle.</p>"
						},
						{
							"name": "_mask",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The original, cached mask of the object.</p>"
						},
						{
							"name": "_destroyed",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>If the object has been destroyed via destroy(). If true, it should not be used.</p>"
						},
						{
							"name": "isSprite",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "isMask",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "added",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when this DisplayObject is added to a Container.</p>"
						},
						{
							"name": "removed",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when this DisplayObject is removed from a Container.</p>"
						},
						{
							"name": "displayObjectUpdateTransform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "mousedown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightdown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "click",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightclick",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mousemove",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseover",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseout",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerdown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointercancel",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointertap",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointermove",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerover",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerout",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchstart",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchend",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchcancel",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "tap",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchendoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "name",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The instance name of the object.</p>"
						},
						{
							"name": "getGlobalPosition",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.</p>"
						},
						{
							"name": "removedFrom",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when a DisplayObject is removed from this Container.</p>"
						}
					]
				},
				{
					"name": "SimplePlane",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>The SimplePlane allows you to draw a texture across several points and then manipulate these points</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "textureUpdated",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "texture",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_render",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uvBuffer",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "verticesBuffer",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "material",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "blendMode",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "roundPixels",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "tint",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_renderDefault",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_renderToBatch",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "calculateVertices",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Updates vertexData field based on transform and vertices</p>"
						},
						{
							"name": "calculateUvs",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Updates uv field based on from geometry uv's or batchUvs</p>"
						},
						{
							"name": "_calculateBounds",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "containsPoint",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Tests if a point is inside this mesh. Works only for PIXI.DRAW_MODES.TRIANGLES.</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroys the Mesh object.</p>"
						},
						{
							"name": "geometry",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "shader",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "state",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "drawMode",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The way the Mesh should be drawn, can be any of the {@link PIXI.DRAW_MODES} constants.</p>"
						},
						{
							"name": "start",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "size",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uvs",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "indices",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "vertexData",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "vertexDirty",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_roundPixels",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Internal roundPixels field</p>"
						},
						{
							"name": "batchUvs",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "onChildrenChange",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Overridable method that can be used by Container subclasses whenever the children array is modified</p>"
						},
						{
							"name": "addChild",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds one or more children to the container.</p>"
						},
						{
							"name": "addChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown</p>"
						},
						{
							"name": "swapChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Swaps the position of 2 Display Objects within this container.</p>"
						},
						{
							"name": "getChildIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the index position of a child DisplayObject instance</p>"
						},
						{
							"name": "setChildIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Changes the position of an existing child in the display object container</p>"
						},
						{
							"name": "getChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the child at the specified index</p>"
						},
						{
							"name": "removeChild",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes one or more children from the container.</p>"
						},
						{
							"name": "removeChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes a child from the specified index position.</p>"
						},
						{
							"name": "removeChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes all children from this container that are within the begin and end indexes.</p>"
						},
						{
							"name": "sortChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Sorts children by zIndex. Previous order is mantained for 2 children with the same zIndex.</p>"
						},
						{
							"name": "updateTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Updates the transform on all children of this container for rendering</p>"
						},
						{
							"name": "calculateBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Recalculates the bounds of the container.</p>"
						},
						{
							"name": "getLocalBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Retrieves the local bounds of the displayObject as a rectangle object.</p>"
						},
						{
							"name": "render",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Renders the object using the WebGL renderer</p>"
						},
						{
							"name": "renderAdvanced",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Render the object using the WebGL renderer and advanced features.</p>"
						},
						{
							"name": "width",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The width of the Container, setting this will actually modify the scale to achieve the value set</p>"
						},
						{
							"name": "height",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The height of the Container, setting this will actually modify the scale to achieve the value set</p>"
						},
						{
							"name": "children",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The array of children of this container.</p>"
						},
						{
							"name": "sortableChildren",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "sortDirty",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "childAdded",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when a DisplayObject is added to this Container.</p>"
						},
						{
							"name": "containerUpdateTransform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getChildByName",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the display object in the container.</p>"
						},
						{
							"name": "mixin",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Mixes all enumerable properties and methods from a source object to DisplayObject.</p>"
						},
						{
							"name": "_recursivePostUpdateTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Retrieves the bounds of the displayObject as a rectangle object.</p>"
						},
						{
							"name": "toGlobal",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Calculates the global position of the display object.</p>"
						},
						{
							"name": "toLocal",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Calculates the local position of the display object relative to another point.</p>"
						},
						{
							"name": "setParent",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Set the parent Container of this DisplayObject.</p>"
						},
						{
							"name": "setTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Convenience function to set the position, scale, skew and pivot at once.</p>"
						},
						{
							"name": "_tempDisplayObjectParent",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "x",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "y",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "worldTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Current transform of the object based on world (parent) factors.</p>"
						},
						{
							"name": "localTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Current transform of the object based on local factors: position, scale, other stuff.</p>"
						},
						{
							"name": "position",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "scale",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "pivot",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "skew",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "rotation",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "angle",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "zIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "worldVisible",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Indicates if the object is globally visible.</p>"
						},
						{
							"name": "mask",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "transform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "alpha",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The opacity of the object.</p>"
						},
						{
							"name": "visible",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "renderable",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "parent",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The display object container that contains this display object.</p>"
						},
						{
							"name": "worldAlpha",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The multiplied alpha of the displayObject.</p>"
						},
						{
							"name": "_lastSortedIndex",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_zIndex",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "filterArea",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "filters",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_enabledFilters",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_bounds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The bounds object, this is used to calculate and store the bounds of the displayObject.</p>"
						},
						{
							"name": "_localBounds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Local bounds object, swapped with <code>_bounds</code> when using <code>getLocalBounds()</code>.</p>"
						},
						{
							"name": "_boundsID",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Flags the cached bounds as dirty.</p>"
						},
						{
							"name": "_boundsRect",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Cache of this display-object's bounds-rectangle.</p>"
						},
						{
							"name": "_localBoundsRect",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Cache of this display-object's local-bounds rectangle.</p>"
						},
						{
							"name": "_mask",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The original, cached mask of the object.</p>"
						},
						{
							"name": "_destroyed",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>If the object has been destroyed via destroy(). If true, it should not be used.</p>"
						},
						{
							"name": "isSprite",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "isMask",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "added",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when this DisplayObject is added to a Container.</p>"
						},
						{
							"name": "removed",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when this DisplayObject is removed from a Container.</p>"
						},
						{
							"name": "displayObjectUpdateTransform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "mousedown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightdown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "click",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightclick",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mousemove",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseover",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseout",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerdown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointercancel",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointertap",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointermove",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerover",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerout",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchstart",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchend",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchcancel",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "tap",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchendoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "name",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The instance name of the object.</p>"
						},
						{
							"name": "getGlobalPosition",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.</p>"
						},
						{
							"name": "removedFrom",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when a DisplayObject is removed from this Container.</p>"
						}
					]
				},
				{
					"name": "SimpleRope",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>The rope allows you to draw a texture across several points and then manipulate these points</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_render",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "autoUpdate",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>re-calculate vertices by rope points each frame</p>"
						},
						{
							"name": "uvBuffer",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "verticesBuffer",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "material",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "blendMode",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "roundPixels",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "tint",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "texture",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The texture that the Mesh uses.</p>"
						},
						{
							"name": "_renderDefault",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_renderToBatch",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "calculateVertices",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Updates vertexData field based on transform and vertices</p>"
						},
						{
							"name": "calculateUvs",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Updates uv field based on from geometry uv's or batchUvs</p>"
						},
						{
							"name": "_calculateBounds",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "containsPoint",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Tests if a point is inside this mesh. Works only for PIXI.DRAW_MODES.TRIANGLES.</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroys the Mesh object.</p>"
						},
						{
							"name": "geometry",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "shader",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "state",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "drawMode",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The way the Mesh should be drawn, can be any of the {@link PIXI.DRAW_MODES} constants.</p>"
						},
						{
							"name": "start",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "size",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uvs",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "indices",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "vertexData",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "vertexDirty",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_roundPixels",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Internal roundPixels field</p>"
						},
						{
							"name": "batchUvs",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "onChildrenChange",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Overridable method that can be used by Container subclasses whenever the children array is modified</p>"
						},
						{
							"name": "addChild",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds one or more children to the container.</p>"
						},
						{
							"name": "addChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown</p>"
						},
						{
							"name": "swapChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Swaps the position of 2 Display Objects within this container.</p>"
						},
						{
							"name": "getChildIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the index position of a child DisplayObject instance</p>"
						},
						{
							"name": "setChildIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Changes the position of an existing child in the display object container</p>"
						},
						{
							"name": "getChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the child at the specified index</p>"
						},
						{
							"name": "removeChild",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes one or more children from the container.</p>"
						},
						{
							"name": "removeChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes a child from the specified index position.</p>"
						},
						{
							"name": "removeChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes all children from this container that are within the begin and end indexes.</p>"
						},
						{
							"name": "sortChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Sorts children by zIndex. Previous order is mantained for 2 children with the same zIndex.</p>"
						},
						{
							"name": "updateTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Updates the transform on all children of this container for rendering</p>"
						},
						{
							"name": "calculateBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Recalculates the bounds of the container.</p>"
						},
						{
							"name": "getLocalBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Retrieves the local bounds of the displayObject as a rectangle object.</p>"
						},
						{
							"name": "render",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Renders the object using the WebGL renderer</p>"
						},
						{
							"name": "renderAdvanced",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Render the object using the WebGL renderer and advanced features.</p>"
						},
						{
							"name": "width",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The width of the Container, setting this will actually modify the scale to achieve the value set</p>"
						},
						{
							"name": "height",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The height of the Container, setting this will actually modify the scale to achieve the value set</p>"
						},
						{
							"name": "children",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The array of children of this container.</p>"
						},
						{
							"name": "sortableChildren",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "sortDirty",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "childAdded",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when a DisplayObject is added to this Container.</p>"
						},
						{
							"name": "containerUpdateTransform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getChildByName",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the display object in the container.</p>"
						},
						{
							"name": "mixin",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Mixes all enumerable properties and methods from a source object to DisplayObject.</p>"
						},
						{
							"name": "_recursivePostUpdateTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Retrieves the bounds of the displayObject as a rectangle object.</p>"
						},
						{
							"name": "toGlobal",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Calculates the global position of the display object.</p>"
						},
						{
							"name": "toLocal",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Calculates the local position of the display object relative to another point.</p>"
						},
						{
							"name": "setParent",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Set the parent Container of this DisplayObject.</p>"
						},
						{
							"name": "setTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Convenience function to set the position, scale, skew and pivot at once.</p>"
						},
						{
							"name": "_tempDisplayObjectParent",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "x",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "y",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "worldTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Current transform of the object based on world (parent) factors.</p>"
						},
						{
							"name": "localTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Current transform of the object based on local factors: position, scale, other stuff.</p>"
						},
						{
							"name": "position",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "scale",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "pivot",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "skew",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "rotation",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "angle",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "zIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "worldVisible",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Indicates if the object is globally visible.</p>"
						},
						{
							"name": "mask",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "transform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "alpha",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The opacity of the object.</p>"
						},
						{
							"name": "visible",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "renderable",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "parent",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The display object container that contains this display object.</p>"
						},
						{
							"name": "worldAlpha",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The multiplied alpha of the displayObject.</p>"
						},
						{
							"name": "_lastSortedIndex",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_zIndex",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "filterArea",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "filters",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_enabledFilters",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_bounds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The bounds object, this is used to calculate and store the bounds of the displayObject.</p>"
						},
						{
							"name": "_localBounds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Local bounds object, swapped with <code>_bounds</code> when using <code>getLocalBounds()</code>.</p>"
						},
						{
							"name": "_boundsID",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Flags the cached bounds as dirty.</p>"
						},
						{
							"name": "_boundsRect",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Cache of this display-object's bounds-rectangle.</p>"
						},
						{
							"name": "_localBoundsRect",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Cache of this display-object's local-bounds rectangle.</p>"
						},
						{
							"name": "_mask",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The original, cached mask of the object.</p>"
						},
						{
							"name": "_destroyed",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>If the object has been destroyed via destroy(). If true, it should not be used.</p>"
						},
						{
							"name": "isSprite",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "isMask",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "added",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when this DisplayObject is added to a Container.</p>"
						},
						{
							"name": "removed",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when this DisplayObject is removed from a Container.</p>"
						},
						{
							"name": "displayObjectUpdateTransform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "mousedown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightdown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "click",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightclick",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mousemove",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseover",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseout",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerdown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointercancel",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointertap",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointermove",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerover",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerout",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchstart",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchend",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchcancel",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "tap",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchendoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "name",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The instance name of the object.</p>"
						},
						{
							"name": "getGlobalPosition",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.</p>"
						},
						{
							"name": "removedFrom",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when a DisplayObject is removed from this Container.</p>"
						}
					]
				},
				{
					"name": "ParticleBuffer",
					"type": "ClassDoc",
					"access": "private",
					"scope": "inner",
					"brief": "<p>The particle buffer manages the static and dynamic buffers for a particle container.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "initBuffers",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Sets up the renderer context and necessary buffers.</p>"
						},
						{
							"name": "uploadDynamic",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Uploads the dynamic properties.</p>"
						},
						{
							"name": "uploadStatic",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Uploads the static properties.</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Destroys the ParticleBuffer.</p>"
						},
						{
							"name": "size",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>The number of particles the buffer can hold</p>"
						},
						{
							"name": "dynamicProperties",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>A list of the properties that are dynamic.</p>"
						},
						{
							"name": "staticProperties",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>A list of the properties that are static.</p>"
						},
						{
							"name": "indexBuffer",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Holds the indices of the geometry (quads) to draw</p>"
						}
					]
				},
				{
					"name": "ParticleContainer",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "setProperties",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Sets the private properties array to dynamic / static based on the passed properties object</p>"
						},
						{
							"name": "updateTransform",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Updates the object transform for rendering</p>"
						},
						{
							"name": "tint",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "render",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Renders the container using the WebGL renderer</p>"
						},
						{
							"name": "onChildrenChange",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Set the flag that static data should be updated to true</p>"
						},
						{
							"name": "dispose",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroys the container</p>"
						},
						{
							"name": "_properties",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Set properties to be dynamic (true) / static (false)</p>"
						},
						{
							"name": "_maxSize",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_batchSize",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_buffers",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_bufferUpdateIDs",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_updateID",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "interactiveChildren",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "blendMode",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "autoResize",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "roundPixels",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "baseTexture",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The texture used to render the children.</p>"
						},
						{
							"name": "_tint",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "renderCanvas",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "addChild",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds one or more children to the container.</p>"
						},
						{
							"name": "addChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown</p>"
						},
						{
							"name": "swapChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Swaps the position of 2 Display Objects within this container.</p>"
						},
						{
							"name": "getChildIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the index position of a child DisplayObject instance</p>"
						},
						{
							"name": "setChildIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Changes the position of an existing child in the display object container</p>"
						},
						{
							"name": "getChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the child at the specified index</p>"
						},
						{
							"name": "removeChild",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes one or more children from the container.</p>"
						},
						{
							"name": "removeChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes a child from the specified index position.</p>"
						},
						{
							"name": "removeChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes all children from this container that are within the begin and end indexes.</p>"
						},
						{
							"name": "sortChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Sorts children by zIndex. Previous order is mantained for 2 children with the same zIndex.</p>"
						},
						{
							"name": "calculateBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Recalculates the bounds of the container.</p>"
						},
						{
							"name": "getLocalBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Retrieves the local bounds of the displayObject as a rectangle object.</p>"
						},
						{
							"name": "_calculateBounds",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "renderAdvanced",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Render the object using the WebGL renderer and advanced features.</p>"
						},
						{
							"name": "_render",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>To be overridden by the subclasses.</p>"
						},
						{
							"name": "width",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The width of the Container, setting this will actually modify the scale to achieve the value set</p>"
						},
						{
							"name": "height",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The height of the Container, setting this will actually modify the scale to achieve the value set</p>"
						},
						{
							"name": "children",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The array of children of this container.</p>"
						},
						{
							"name": "sortableChildren",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "sortDirty",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "childAdded",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when a DisplayObject is added to this Container.</p>"
						},
						{
							"name": "containerUpdateTransform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getChildByName",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the display object in the container.</p>"
						},
						{
							"name": "mixin",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Mixes all enumerable properties and methods from a source object to DisplayObject.</p>"
						},
						{
							"name": "_recursivePostUpdateTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Retrieves the bounds of the displayObject as a rectangle object.</p>"
						},
						{
							"name": "toGlobal",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Calculates the global position of the display object.</p>"
						},
						{
							"name": "toLocal",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Calculates the local position of the display object relative to another point.</p>"
						},
						{
							"name": "setParent",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Set the parent Container of this DisplayObject.</p>"
						},
						{
							"name": "setTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Convenience function to set the position, scale, skew and pivot at once.</p>"
						},
						{
							"name": "_tempDisplayObjectParent",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "x",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "y",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "worldTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Current transform of the object based on world (parent) factors.</p>"
						},
						{
							"name": "localTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Current transform of the object based on local factors: position, scale, other stuff.</p>"
						},
						{
							"name": "position",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "scale",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "pivot",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "skew",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "rotation",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "angle",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "zIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "worldVisible",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Indicates if the object is globally visible.</p>"
						},
						{
							"name": "mask",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "transform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "alpha",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The opacity of the object.</p>"
						},
						{
							"name": "visible",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "renderable",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "parent",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The display object container that contains this display object.</p>"
						},
						{
							"name": "worldAlpha",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The multiplied alpha of the displayObject.</p>"
						},
						{
							"name": "_lastSortedIndex",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_zIndex",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "filterArea",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "filters",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_enabledFilters",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_bounds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The bounds object, this is used to calculate and store the bounds of the displayObject.</p>"
						},
						{
							"name": "_localBounds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Local bounds object, swapped with <code>_bounds</code> when using <code>getLocalBounds()</code>.</p>"
						},
						{
							"name": "_boundsID",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Flags the cached bounds as dirty.</p>"
						},
						{
							"name": "_boundsRect",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Cache of this display-object's bounds-rectangle.</p>"
						},
						{
							"name": "_localBoundsRect",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Cache of this display-object's local-bounds rectangle.</p>"
						},
						{
							"name": "_mask",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The original, cached mask of the object.</p>"
						},
						{
							"name": "_destroyed",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>If the object has been destroyed via destroy(). If true, it should not be used.</p>"
						},
						{
							"name": "isSprite",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "isMask",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "added",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when this DisplayObject is added to a Container.</p>"
						},
						{
							"name": "removed",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when this DisplayObject is removed from a Container.</p>"
						},
						{
							"name": "displayObjectUpdateTransform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "mousedown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightdown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "click",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightclick",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mousemove",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseover",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseout",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerdown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointercancel",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointertap",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointermove",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerover",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerout",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchstart",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchend",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchcancel",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "tap",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchendoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "name",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The instance name of the object.</p>"
						},
						{
							"name": "getGlobalPosition",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.</p>"
						},
						{
							"name": "removedFrom",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when a DisplayObject is removed from this Container.</p>"
						}
					]
				},
				{
					"name": "ParticleRenderer",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>Renderer for Particles that is designer for speed over feature set.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "render",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Renders the particle container object.</p>"
						},
						{
							"name": "generateBuffers",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Creates one particle buffer for each child in the container we want to render and updates internal properties</p>"
						},
						{
							"name": "_generateOneMoreBuffer",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Creates one more particle buffer, because container has autoResize feature</p>"
						},
						{
							"name": "uploadVertices",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Uploads the vertices.</p>"
						},
						{
							"name": "uploadPosition",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Uploads the position.</p>"
						},
						{
							"name": "uploadRotation",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Uploads the rotation.</p>"
						},
						{
							"name": "uploadUvs",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Uploads the Uvs</p>"
						},
						{
							"name": "uploadTint",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Uploads the tint.</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroys the ParticleRenderer.</p>"
						},
						{
							"name": "shader",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The default shader that is used if a sprite doesn't have a more specific one.</p>"
						},
						{
							"name": "state",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The WebGL state in which this renderer will work.</p>"
						}
					]
				},
				{
					"name": "BasePrepare",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>The prepare manager provides functionality to upload content to the GPU.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "upload",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Upload all the textures and graphics to the GPU.</p>"
						},
						{
							"name": "tick",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Handle tick update</p>"
						},
						{
							"name": "prepareItems",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "registerFindHook",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds hooks for finding items.</p>"
						},
						{
							"name": "registerUploadHook",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds hooks for uploading items.</p>"
						},
						{
							"name": "add",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Manually add an item to the uploading queue.</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroys the plugin, don't use after this.</p>"
						},
						{
							"name": "limiter",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "renderer",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uploadHookHelper",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "queue",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "addHooks",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uploadHooks",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "completes",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "ticking",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "delayedTick",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "CountLimiter",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "beginFrame",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Resets any counting properties to start fresh on a new frame.</p>"
						},
						{
							"name": "allowedToUpload",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "maxItemsPerFrame",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "itemsLeft",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "Prepare",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "upload",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Upload all the textures and graphics to the GPU.</p>"
						},
						{
							"name": "tick",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Handle tick update</p>"
						},
						{
							"name": "prepareItems",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "registerFindHook",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds hooks for finding items.</p>"
						},
						{
							"name": "registerUploadHook",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds hooks for uploading items.</p>"
						},
						{
							"name": "add",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Manually add an item to the uploading queue.</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroys the plugin, don't use after this.</p>"
						},
						{
							"name": "limiter",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "renderer",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uploadHookHelper",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "queue",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "addHooks",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uploadHooks",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "completes",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "ticking",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "delayedTick",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "TimeLimiter",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "beginFrame",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Resets any counting properties to start fresh on a new frame.</p>"
						},
						{
							"name": "allowedToUpload",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "maxMilliseconds",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "frameStart",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "Runner",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "emit",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "ensureNonAliasedItems",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "add",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Add a listener to the Runner</p>"
						},
						{
							"name": "remove",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "contains",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "removeAll",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Remove all references, don't use after this.</p>"
						},
						{
							"name": "empty",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p><code>true</code> if there are no this Runner contains no listeners</p>"
						},
						{
							"name": "name",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The name of the runner.</p>"
						},
						{
							"name": "dispatch",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "run",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "settings",
					"type": "NSDoc",
					"access": "public",
					"scope": "static",
					"brief": "",
					"children": [
						{
							"name": "PREFER_ENV",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "STRICT_TEXTURE_CACHE",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "SORTABLE_CHILDREN",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "UPLOADS_PER_FRAME",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Default number of uploads per frame using prepare plugin.</p>"
						},
						{
							"name": "TARGET_FPMS",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Target frames per millisecond.</p>"
						},
						{
							"name": "RETINA_PREFIX",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>The prefix that denotes a URL is for a retina asset.</p>"
						},
						{
							"name": "FAIL_IF_MAJOR_PERFORMANCE_CAVEAT",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "MESH_CANVAS_PADDING",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Default <code>canvasPadding</code> for canvas-based Mesh rendering.</p>"
						}
					]
				},
				{
					"name": "Sprite",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>The Sprite object is the base for all textured objects that are rendered to the screen</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_onTextureUpdate",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>When the texture is updated, this event will fire to update the scale and frame</p>"
						},
						{
							"name": "_onAnchorUpdate",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Called when the anchor position updates.</p>"
						},
						{
							"name": "calculateVertices",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>calculates worldTransform * vertices, store it in vertexData</p>"
						},
						{
							"name": "calculateTrimmedVertices",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_render",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Renders the object using the WebGL renderer</p>"
						},
						{
							"name": "_calculateBounds",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Updates the bounds of the sprite.</p>"
						},
						{
							"name": "getLocalBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Gets the local bounds of the sprite object.</p>"
						},
						{
							"name": "containsPoint",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Tests if a point is inside this sprite</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroys this sprite and optionally its texture and children</p>"
						},
						{
							"name": "from",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "roundPixels",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "width",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The width of the sprite, setting this will actually modify the scale to achieve the value set</p>"
						},
						{
							"name": "height",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The height of the sprite, setting this will actually modify the scale to achieve the value set</p>"
						},
						{
							"name": "anchor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "tint",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "texture",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The texture that the sprite is using</p>"
						},
						{
							"name": "_anchor",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_texture",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>The texture that the sprite is using</p>"
						},
						{
							"name": "_width",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The width of the sprite (this is initially set by the texture)</p>"
						},
						{
							"name": "_height",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The height of the sprite (this is initially set by the texture)</p>"
						},
						{
							"name": "_tint",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect.</p>"
						},
						{
							"name": "_tintRGB",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>The tint applied to the sprite. This is a RGB value. A value of 0xFFFFFF will remove any tint effect.</p>"
						},
						{
							"name": "blendMode",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The blend mode to be applied to the sprite. Apply a value of <code>PIXI.BLEND_MODES.NORMAL</code> to reset the blend mode.</p>"
						},
						{
							"name": "_cachedTint",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uvs",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "vertexData",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>this is used to store the vertex data of the sprite (basically a quad)</p>"
						},
						{
							"name": "vertexTrimmedData",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>This is used to calculate the bounds of the object IF it is a trimmed sprite</p>"
						},
						{
							"name": "pluginName",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "isSprite",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_roundPixels",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Internal roundPixels field</p>"
						},
						{
							"name": "_tintedCanvas",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "onChildrenChange",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Overridable method that can be used by Container subclasses whenever the children array is modified</p>"
						},
						{
							"name": "addChild",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds one or more children to the container.</p>"
						},
						{
							"name": "addChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown</p>"
						},
						{
							"name": "swapChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Swaps the position of 2 Display Objects within this container.</p>"
						},
						{
							"name": "getChildIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the index position of a child DisplayObject instance</p>"
						},
						{
							"name": "setChildIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Changes the position of an existing child in the display object container</p>"
						},
						{
							"name": "getChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the child at the specified index</p>"
						},
						{
							"name": "removeChild",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes one or more children from the container.</p>"
						},
						{
							"name": "removeChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes a child from the specified index position.</p>"
						},
						{
							"name": "removeChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes all children from this container that are within the begin and end indexes.</p>"
						},
						{
							"name": "sortChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Sorts children by zIndex. Previous order is mantained for 2 children with the same zIndex.</p>"
						},
						{
							"name": "updateTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Updates the transform on all children of this container for rendering</p>"
						},
						{
							"name": "calculateBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Recalculates the bounds of the container.</p>"
						},
						{
							"name": "render",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Renders the object using the WebGL renderer</p>"
						},
						{
							"name": "renderAdvanced",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Render the object using the WebGL renderer and advanced features.</p>"
						},
						{
							"name": "children",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The array of children of this container.</p>"
						},
						{
							"name": "sortableChildren",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "sortDirty",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "childAdded",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when a DisplayObject is added to this Container.</p>"
						},
						{
							"name": "containerUpdateTransform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getChildByName",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the display object in the container.</p>"
						},
						{
							"name": "mixin",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Mixes all enumerable properties and methods from a source object to DisplayObject.</p>"
						},
						{
							"name": "_recursivePostUpdateTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Retrieves the bounds of the displayObject as a rectangle object.</p>"
						},
						{
							"name": "toGlobal",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Calculates the global position of the display object.</p>"
						},
						{
							"name": "toLocal",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Calculates the local position of the display object relative to another point.</p>"
						},
						{
							"name": "setParent",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Set the parent Container of this DisplayObject.</p>"
						},
						{
							"name": "setTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Convenience function to set the position, scale, skew and pivot at once.</p>"
						},
						{
							"name": "_tempDisplayObjectParent",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "x",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "y",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "worldTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Current transform of the object based on world (parent) factors.</p>"
						},
						{
							"name": "localTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Current transform of the object based on local factors: position, scale, other stuff.</p>"
						},
						{
							"name": "position",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "scale",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "pivot",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "skew",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "rotation",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "angle",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "zIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "worldVisible",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Indicates if the object is globally visible.</p>"
						},
						{
							"name": "mask",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "transform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "alpha",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The opacity of the object.</p>"
						},
						{
							"name": "visible",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "renderable",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "parent",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The display object container that contains this display object.</p>"
						},
						{
							"name": "worldAlpha",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The multiplied alpha of the displayObject.</p>"
						},
						{
							"name": "_lastSortedIndex",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_zIndex",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "filterArea",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "filters",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_enabledFilters",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_bounds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The bounds object, this is used to calculate and store the bounds of the displayObject.</p>"
						},
						{
							"name": "_localBounds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Local bounds object, swapped with <code>_bounds</code> when using <code>getLocalBounds()</code>.</p>"
						},
						{
							"name": "_boundsID",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Flags the cached bounds as dirty.</p>"
						},
						{
							"name": "_boundsRect",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Cache of this display-object's bounds-rectangle.</p>"
						},
						{
							"name": "_localBoundsRect",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Cache of this display-object's local-bounds rectangle.</p>"
						},
						{
							"name": "_mask",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The original, cached mask of the object.</p>"
						},
						{
							"name": "_destroyed",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>If the object has been destroyed via destroy(). If true, it should not be used.</p>"
						},
						{
							"name": "isMask",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "added",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when this DisplayObject is added to a Container.</p>"
						},
						{
							"name": "removed",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when this DisplayObject is removed from a Container.</p>"
						},
						{
							"name": "displayObjectUpdateTransform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "mousedown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightdown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "click",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightclick",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mousemove",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseover",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseout",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerdown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointercancel",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointertap",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointermove",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerover",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerout",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchstart",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchend",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchcancel",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "tap",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchendoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "name",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The instance name of the object.</p>"
						},
						{
							"name": "getGlobalPosition",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.</p>"
						},
						{
							"name": "removedFrom",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when a DisplayObject is removed from this Container.</p>"
						}
					]
				},
				{
					"name": "AnimatedSprite",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>An AnimatedSprite is a simple way to display an animation depicted by a list of textures.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "stop",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Stops the AnimatedSprite.</p>"
						},
						{
							"name": "play",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Plays the AnimatedSprite.</p>"
						},
						{
							"name": "gotoAndStop",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Stops the AnimatedSprite and goes to a specific frame.</p>"
						},
						{
							"name": "gotoAndPlay",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Goes to a specific frame and begins playing the AnimatedSprite.</p>"
						},
						{
							"name": "update",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Updates the object transform for rendering.</p>"
						},
						{
							"name": "updateTexture",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Updates the displayed texture to match the current frame index.</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Stops the AnimatedSprite and destroys it.</p>"
						},
						{
							"name": "fromFrames",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>A short hand way of creating an AnimatedSprite from an array of frame ids.</p>"
						},
						{
							"name": "fromImages",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>A short hand way of creating an AnimatedSprite from an array of image ids.</p>"
						},
						{
							"name": "totalFrames",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "textures",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The array of textures used for this AnimatedSprite.</p>"
						},
						{
							"name": "currentFrame",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The AnimatedSprites current frame index.</p>"
						},
						{
							"name": "playing",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Indicates if the AnimatedSprite is currently playing.</p>"
						},
						{
							"name": "autoUpdate",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Whether to use PIXI.Ticker.shared to auto update animation time</p>"
						},
						{
							"name": "_textures",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_durations",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_autoUpdate",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p><code>true</code> uses PIXI.Ticker.shared to auto update animation time.</p>"
						},
						{
							"name": "_isConnectedToTicker",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p><code>true</code> if the instance is currently connected to PIXI.Ticker.shared to auto update animation time.</p>"
						},
						{
							"name": "animationSpeed",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The speed that the AnimatedSprite will play at. Higher is faster, lower is slower.</p>"
						},
						{
							"name": "loop",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Whether or not the animate sprite repeats after playing.</p>"
						},
						{
							"name": "updateAnchor",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Update anchor to [Texture's defaultAnchor]{@link PIXI.Texture#defaultAnchor} when frame changes.</p>"
						},
						{
							"name": "onComplete",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Function to call when an AnimatedSprite finishes playing.</p>"
						},
						{
							"name": "onFrameChange",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Function to call when an AnimatedSprite changes which texture is being rendered.</p>"
						},
						{
							"name": "onLoop",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Function to call when <code>loop</code> is true, and an AnimatedSprite is played and loops around to start again.</p>"
						},
						{
							"name": "_currentTime",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Elapsed time since animation has been started, used internally to display current texture.</p>"
						},
						{
							"name": "_previousFrame",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>The texture index that was displayed last time</p>"
						},
						{
							"name": "_onTextureUpdate",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>When the texture is updated, this event will fire to update the scale and frame</p>"
						},
						{
							"name": "_onAnchorUpdate",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Called when the anchor position updates.</p>"
						},
						{
							"name": "calculateVertices",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>calculates worldTransform * vertices, store it in vertexData</p>"
						},
						{
							"name": "calculateTrimmedVertices",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_render",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Renders the object using the WebGL renderer</p>"
						},
						{
							"name": "_calculateBounds",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Updates the bounds of the sprite.</p>"
						},
						{
							"name": "getLocalBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Gets the local bounds of the sprite object.</p>"
						},
						{
							"name": "containsPoint",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Tests if a point is inside this sprite</p>"
						},
						{
							"name": "roundPixels",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "width",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The width of the sprite, setting this will actually modify the scale to achieve the value set</p>"
						},
						{
							"name": "height",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The height of the sprite, setting this will actually modify the scale to achieve the value set</p>"
						},
						{
							"name": "anchor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "tint",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "texture",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The texture that the sprite is using</p>"
						},
						{
							"name": "_anchor",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_texture",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>The texture that the sprite is using</p>"
						},
						{
							"name": "_width",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The width of the sprite (this is initially set by the texture)</p>"
						},
						{
							"name": "_height",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The height of the sprite (this is initially set by the texture)</p>"
						},
						{
							"name": "_tint",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect.</p>"
						},
						{
							"name": "_tintRGB",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>The tint applied to the sprite. This is a RGB value. A value of 0xFFFFFF will remove any tint effect.</p>"
						},
						{
							"name": "blendMode",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The blend mode to be applied to the sprite. Apply a value of <code>PIXI.BLEND_MODES.NORMAL</code> to reset the blend mode.</p>"
						},
						{
							"name": "_cachedTint",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uvs",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "vertexData",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>this is used to store the vertex data of the sprite (basically a quad)</p>"
						},
						{
							"name": "vertexTrimmedData",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>This is used to calculate the bounds of the object IF it is a trimmed sprite</p>"
						},
						{
							"name": "pluginName",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "isSprite",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_roundPixels",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Internal roundPixels field</p>"
						},
						{
							"name": "_tintedCanvas",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "onChildrenChange",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Overridable method that can be used by Container subclasses whenever the children array is modified</p>"
						},
						{
							"name": "addChild",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds one or more children to the container.</p>"
						},
						{
							"name": "addChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown</p>"
						},
						{
							"name": "swapChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Swaps the position of 2 Display Objects within this container.</p>"
						},
						{
							"name": "getChildIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the index position of a child DisplayObject instance</p>"
						},
						{
							"name": "setChildIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Changes the position of an existing child in the display object container</p>"
						},
						{
							"name": "getChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the child at the specified index</p>"
						},
						{
							"name": "removeChild",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes one or more children from the container.</p>"
						},
						{
							"name": "removeChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes a child from the specified index position.</p>"
						},
						{
							"name": "removeChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes all children from this container that are within the begin and end indexes.</p>"
						},
						{
							"name": "sortChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Sorts children by zIndex. Previous order is mantained for 2 children with the same zIndex.</p>"
						},
						{
							"name": "updateTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Updates the transform on all children of this container for rendering</p>"
						},
						{
							"name": "calculateBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Recalculates the bounds of the container.</p>"
						},
						{
							"name": "render",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Renders the object using the WebGL renderer</p>"
						},
						{
							"name": "renderAdvanced",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Render the object using the WebGL renderer and advanced features.</p>"
						},
						{
							"name": "children",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The array of children of this container.</p>"
						},
						{
							"name": "sortableChildren",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "sortDirty",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "childAdded",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when a DisplayObject is added to this Container.</p>"
						},
						{
							"name": "containerUpdateTransform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getChildByName",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the display object in the container.</p>"
						},
						{
							"name": "mixin",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Mixes all enumerable properties and methods from a source object to DisplayObject.</p>"
						},
						{
							"name": "_recursivePostUpdateTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Retrieves the bounds of the displayObject as a rectangle object.</p>"
						},
						{
							"name": "toGlobal",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Calculates the global position of the display object.</p>"
						},
						{
							"name": "toLocal",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Calculates the local position of the display object relative to another point.</p>"
						},
						{
							"name": "setParent",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Set the parent Container of this DisplayObject.</p>"
						},
						{
							"name": "setTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Convenience function to set the position, scale, skew and pivot at once.</p>"
						},
						{
							"name": "_tempDisplayObjectParent",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "x",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "y",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "worldTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Current transform of the object based on world (parent) factors.</p>"
						},
						{
							"name": "localTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Current transform of the object based on local factors: position, scale, other stuff.</p>"
						},
						{
							"name": "position",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "scale",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "pivot",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "skew",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "rotation",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "angle",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "zIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "worldVisible",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Indicates if the object is globally visible.</p>"
						},
						{
							"name": "mask",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "transform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "alpha",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The opacity of the object.</p>"
						},
						{
							"name": "visible",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "renderable",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "parent",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The display object container that contains this display object.</p>"
						},
						{
							"name": "worldAlpha",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The multiplied alpha of the displayObject.</p>"
						},
						{
							"name": "_lastSortedIndex",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_zIndex",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "filterArea",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "filters",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_enabledFilters",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_bounds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The bounds object, this is used to calculate and store the bounds of the displayObject.</p>"
						},
						{
							"name": "_localBounds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Local bounds object, swapped with <code>_bounds</code> when using <code>getLocalBounds()</code>.</p>"
						},
						{
							"name": "_boundsID",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Flags the cached bounds as dirty.</p>"
						},
						{
							"name": "_boundsRect",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Cache of this display-object's bounds-rectangle.</p>"
						},
						{
							"name": "_localBoundsRect",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Cache of this display-object's local-bounds rectangle.</p>"
						},
						{
							"name": "_mask",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The original, cached mask of the object.</p>"
						},
						{
							"name": "_destroyed",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>If the object has been destroyed via destroy(). If true, it should not be used.</p>"
						},
						{
							"name": "isMask",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "added",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when this DisplayObject is added to a Container.</p>"
						},
						{
							"name": "removed",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when this DisplayObject is removed from a Container.</p>"
						},
						{
							"name": "displayObjectUpdateTransform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "mousedown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightdown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "click",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightclick",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mousemove",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseover",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseout",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerdown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointercancel",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointertap",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointermove",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerover",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerout",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchstart",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchend",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchcancel",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "tap",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchendoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "name",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The instance name of the object.</p>"
						},
						{
							"name": "getGlobalPosition",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.</p>"
						},
						{
							"name": "removedFrom",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when a DisplayObject is removed from this Container.</p>"
						}
					]
				},
				{
					"name": "TilingSprite",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>A tiling sprite is a fast way of rendering a tiling image</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "clampMargin",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "tileScale",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The scaling of the image that is being tiled</p>"
						},
						{
							"name": "tilePosition",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The offset of the image that is being tiled</p>"
						},
						{
							"name": "_onTextureUpdate",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_render",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Renders the object using the WebGL renderer</p>"
						},
						{
							"name": "_calculateBounds",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Updates the bounds of the tiling sprite.</p>"
						},
						{
							"name": "getLocalBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Gets the local bounds of the sprite object.</p>"
						},
						{
							"name": "containsPoint",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Checks if a point is inside this tiling sprite.</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroys this sprite and optionally its texture and children</p>"
						},
						{
							"name": "from",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "width",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The width of the sprite, setting this will actually modify the scale to achieve the value set</p>"
						},
						{
							"name": "height",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The height of the TilingSprite, setting this will actually modify the scale to achieve the value set</p>"
						},
						{
							"name": "tileTransform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Tile transform</p>"
						},
						{
							"name": "_width",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>The with of the tiling sprite</p>"
						},
						{
							"name": "_height",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>The height of the tiling sprite</p>"
						},
						{
							"name": "uvMatrix",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>matrix that is applied to UV to get the coords in Texture normalized space to coords in BaseTexture space</p>"
						},
						{
							"name": "pluginName",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uvRespectAnchor",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Whether or not anchor affects uvs</p>"
						},
						{
							"name": "_onAnchorUpdate",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Called when the anchor position updates.</p>"
						},
						{
							"name": "calculateVertices",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>calculates worldTransform * vertices, store it in vertexData</p>"
						},
						{
							"name": "calculateTrimmedVertices",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "roundPixels",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "anchor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "tint",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "texture",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The texture that the sprite is using</p>"
						},
						{
							"name": "_anchor",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_texture",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>The texture that the sprite is using</p>"
						},
						{
							"name": "_tint",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect.</p>"
						},
						{
							"name": "_tintRGB",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>The tint applied to the sprite. This is a RGB value. A value of 0xFFFFFF will remove any tint effect.</p>"
						},
						{
							"name": "blendMode",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The blend mode to be applied to the sprite. Apply a value of <code>PIXI.BLEND_MODES.NORMAL</code> to reset the blend mode.</p>"
						},
						{
							"name": "_cachedTint",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uvs",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "vertexData",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>this is used to store the vertex data of the sprite (basically a quad)</p>"
						},
						{
							"name": "vertexTrimmedData",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>This is used to calculate the bounds of the object IF it is a trimmed sprite</p>"
						},
						{
							"name": "isSprite",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_roundPixels",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Internal roundPixels field</p>"
						},
						{
							"name": "_tintedCanvas",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "onChildrenChange",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Overridable method that can be used by Container subclasses whenever the children array is modified</p>"
						},
						{
							"name": "addChild",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds one or more children to the container.</p>"
						},
						{
							"name": "addChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown</p>"
						},
						{
							"name": "swapChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Swaps the position of 2 Display Objects within this container.</p>"
						},
						{
							"name": "getChildIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the index position of a child DisplayObject instance</p>"
						},
						{
							"name": "setChildIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Changes the position of an existing child in the display object container</p>"
						},
						{
							"name": "getChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the child at the specified index</p>"
						},
						{
							"name": "removeChild",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes one or more children from the container.</p>"
						},
						{
							"name": "removeChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes a child from the specified index position.</p>"
						},
						{
							"name": "removeChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes all children from this container that are within the begin and end indexes.</p>"
						},
						{
							"name": "sortChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Sorts children by zIndex. Previous order is mantained for 2 children with the same zIndex.</p>"
						},
						{
							"name": "updateTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Updates the transform on all children of this container for rendering</p>"
						},
						{
							"name": "calculateBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Recalculates the bounds of the container.</p>"
						},
						{
							"name": "render",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Renders the object using the WebGL renderer</p>"
						},
						{
							"name": "renderAdvanced",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Render the object using the WebGL renderer and advanced features.</p>"
						},
						{
							"name": "children",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The array of children of this container.</p>"
						},
						{
							"name": "sortableChildren",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "sortDirty",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "childAdded",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when a DisplayObject is added to this Container.</p>"
						},
						{
							"name": "containerUpdateTransform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getChildByName",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the display object in the container.</p>"
						},
						{
							"name": "mixin",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Mixes all enumerable properties and methods from a source object to DisplayObject.</p>"
						},
						{
							"name": "_recursivePostUpdateTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Retrieves the bounds of the displayObject as a rectangle object.</p>"
						},
						{
							"name": "toGlobal",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Calculates the global position of the display object.</p>"
						},
						{
							"name": "toLocal",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Calculates the local position of the display object relative to another point.</p>"
						},
						{
							"name": "setParent",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Set the parent Container of this DisplayObject.</p>"
						},
						{
							"name": "setTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Convenience function to set the position, scale, skew and pivot at once.</p>"
						},
						{
							"name": "_tempDisplayObjectParent",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "x",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "y",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "worldTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Current transform of the object based on world (parent) factors.</p>"
						},
						{
							"name": "localTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Current transform of the object based on local factors: position, scale, other stuff.</p>"
						},
						{
							"name": "position",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "scale",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "pivot",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "skew",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "rotation",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "angle",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "zIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "worldVisible",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Indicates if the object is globally visible.</p>"
						},
						{
							"name": "mask",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "transform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "alpha",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The opacity of the object.</p>"
						},
						{
							"name": "visible",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "renderable",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "parent",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The display object container that contains this display object.</p>"
						},
						{
							"name": "worldAlpha",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The multiplied alpha of the displayObject.</p>"
						},
						{
							"name": "_lastSortedIndex",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_zIndex",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "filterArea",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "filters",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_enabledFilters",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_bounds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The bounds object, this is used to calculate and store the bounds of the displayObject.</p>"
						},
						{
							"name": "_localBounds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Local bounds object, swapped with <code>_bounds</code> when using <code>getLocalBounds()</code>.</p>"
						},
						{
							"name": "_boundsID",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Flags the cached bounds as dirty.</p>"
						},
						{
							"name": "_boundsRect",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Cache of this display-object's bounds-rectangle.</p>"
						},
						{
							"name": "_localBoundsRect",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Cache of this display-object's local-bounds rectangle.</p>"
						},
						{
							"name": "_mask",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The original, cached mask of the object.</p>"
						},
						{
							"name": "_destroyed",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>If the object has been destroyed via destroy(). If true, it should not be used.</p>"
						},
						{
							"name": "isMask",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "added",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when this DisplayObject is added to a Container.</p>"
						},
						{
							"name": "removed",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when this DisplayObject is removed from a Container.</p>"
						},
						{
							"name": "displayObjectUpdateTransform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "mousedown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightdown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "click",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightclick",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mousemove",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseover",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseout",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerdown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointercancel",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointertap",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointermove",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerover",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerout",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchstart",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchend",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchcancel",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "tap",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchendoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "name",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The instance name of the object.</p>"
						},
						{
							"name": "getGlobalPosition",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.</p>"
						},
						{
							"name": "removedFrom",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when a DisplayObject is removed from this Container.</p>"
						}
					]
				},
				{
					"name": "TilingSpriteRenderer",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>WebGL renderer plugin for tiling sprites</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>constructor for renderer</p>"
						},
						{
							"name": "render",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "state",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The WebGL state in which this renderer will work.</p>"
						},
						{
							"name": "flush",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "start",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "stop",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "renderer",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The renderer this manager works for.</p>"
						}
					]
				},
				{
					"name": "Spritesheet",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_updateResolution",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "parse",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_processFrames",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Process a batch of frames</p>"
						},
						{
							"name": "_processAnimations",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Parse animations config</p>"
						},
						{
							"name": "_parseComplete",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>The parse has completed.</p>"
						},
						{
							"name": "_nextBatch",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Begin the next batch of textures.</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroy Spritesheet and don't use after this.</p>"
						},
						{
							"name": "_texture",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "baseTexture",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "textures",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "animations",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "data",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "resolution",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_frames",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_frameKeys",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_batchIndex",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_callback",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "BATCH_SIZE",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>The maximum number of Textures to build per process.</p>"
						}
					]
				},
				{
					"name": "SpritesheetLoader",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "use",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getResourcePath",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "Text",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>A Text Object will create a line or multiple lines of text.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "updateText",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "drawLetterSpacing",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "updateTexture",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Updates texture size based on canvas size</p>"
						},
						{
							"name": "_render",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Renders the object using the WebGL renderer</p>"
						},
						{
							"name": "getLocalBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Gets the local bounds of the text object.</p>"
						},
						{
							"name": "_calculateBounds",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_generateFillStyle",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Generates the fill style. Can automatically generate a gradient based on the fill style being an array</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "width",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The width of the Text, setting this will actually modify the scale to achieve the value set</p>"
						},
						{
							"name": "height",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The height of the Text, setting this will actually modify the scale to achieve the value set</p>"
						},
						{
							"name": "style",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "text",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Set the copy for the text object. To split a line you can use '\\n'.</p>"
						},
						{
							"name": "resolution",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_ownCanvas",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "canvas",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The canvas element that everything is drawn to</p>"
						},
						{
							"name": "context",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_resolution",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_text",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Private tracker for the current text.</p>"
						},
						{
							"name": "_style",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Private tracker for the current style.</p>"
						},
						{
							"name": "_styleListener",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Private listener to track style changes.</p>"
						},
						{
							"name": "_font",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Private tracker for the current font.</p>"
						},
						{
							"name": "_renderCanvas",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Renders the object using the Canvas renderer</p>"
						},
						{
							"name": "_onTextureUpdate",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>When the texture is updated, this event will fire to update the scale and frame</p>"
						},
						{
							"name": "_onAnchorUpdate",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Called when the anchor position updates.</p>"
						},
						{
							"name": "calculateVertices",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>calculates worldTransform * vertices, store it in vertexData</p>"
						},
						{
							"name": "calculateTrimmedVertices",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "containsPoint",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Tests if a point is inside this sprite</p>"
						},
						{
							"name": "roundPixels",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "anchor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "tint",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "texture",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The texture that the sprite is using</p>"
						},
						{
							"name": "_anchor",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_texture",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>The texture that the sprite is using</p>"
						},
						{
							"name": "_width",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The width of the sprite (this is initially set by the texture)</p>"
						},
						{
							"name": "_height",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The height of the sprite (this is initially set by the texture)</p>"
						},
						{
							"name": "_tint",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>The tint applied to the sprite. This is a hex value. A value of 0xFFFFFF will remove any tint effect.</p>"
						},
						{
							"name": "_tintRGB",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>The tint applied to the sprite. This is a RGB value. A value of 0xFFFFFF will remove any tint effect.</p>"
						},
						{
							"name": "blendMode",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The blend mode to be applied to the sprite. Apply a value of <code>PIXI.BLEND_MODES.NORMAL</code> to reset the blend mode.</p>"
						},
						{
							"name": "_cachedTint",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uvs",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "vertexData",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>this is used to store the vertex data of the sprite (basically a quad)</p>"
						},
						{
							"name": "vertexTrimmedData",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>This is used to calculate the bounds of the object IF it is a trimmed sprite</p>"
						},
						{
							"name": "pluginName",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "isSprite",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_roundPixels",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Internal roundPixels field</p>"
						},
						{
							"name": "_tintedCanvas",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "onChildrenChange",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Overridable method that can be used by Container subclasses whenever the children array is modified</p>"
						},
						{
							"name": "addChild",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds one or more children to the container.</p>"
						},
						{
							"name": "addChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown</p>"
						},
						{
							"name": "swapChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Swaps the position of 2 Display Objects within this container.</p>"
						},
						{
							"name": "getChildIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the index position of a child DisplayObject instance</p>"
						},
						{
							"name": "setChildIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Changes the position of an existing child in the display object container</p>"
						},
						{
							"name": "getChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the child at the specified index</p>"
						},
						{
							"name": "removeChild",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes one or more children from the container.</p>"
						},
						{
							"name": "removeChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes a child from the specified index position.</p>"
						},
						{
							"name": "removeChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes all children from this container that are within the begin and end indexes.</p>"
						},
						{
							"name": "sortChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Sorts children by zIndex. Previous order is mantained for 2 children with the same zIndex.</p>"
						},
						{
							"name": "updateTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Updates the transform on all children of this container for rendering</p>"
						},
						{
							"name": "calculateBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Recalculates the bounds of the container.</p>"
						},
						{
							"name": "render",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Renders the object using the WebGL renderer</p>"
						},
						{
							"name": "renderAdvanced",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Render the object using the WebGL renderer and advanced features.</p>"
						},
						{
							"name": "children",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The array of children of this container.</p>"
						},
						{
							"name": "sortableChildren",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "sortDirty",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "childAdded",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when a DisplayObject is added to this Container.</p>"
						},
						{
							"name": "containerUpdateTransform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getChildByName",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the display object in the container.</p>"
						},
						{
							"name": "mixin",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Mixes all enumerable properties and methods from a source object to DisplayObject.</p>"
						},
						{
							"name": "_recursivePostUpdateTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Retrieves the bounds of the displayObject as a rectangle object.</p>"
						},
						{
							"name": "toGlobal",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Calculates the global position of the display object.</p>"
						},
						{
							"name": "toLocal",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Calculates the local position of the display object relative to another point.</p>"
						},
						{
							"name": "setParent",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Set the parent Container of this DisplayObject.</p>"
						},
						{
							"name": "setTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Convenience function to set the position, scale, skew and pivot at once.</p>"
						},
						{
							"name": "_tempDisplayObjectParent",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "x",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "y",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "worldTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Current transform of the object based on world (parent) factors.</p>"
						},
						{
							"name": "localTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Current transform of the object based on local factors: position, scale, other stuff.</p>"
						},
						{
							"name": "position",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "scale",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "pivot",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "skew",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "rotation",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "angle",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "zIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "worldVisible",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Indicates if the object is globally visible.</p>"
						},
						{
							"name": "mask",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "transform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "alpha",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The opacity of the object.</p>"
						},
						{
							"name": "visible",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "renderable",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "parent",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The display object container that contains this display object.</p>"
						},
						{
							"name": "worldAlpha",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The multiplied alpha of the displayObject.</p>"
						},
						{
							"name": "_lastSortedIndex",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_zIndex",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "filterArea",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "filters",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_enabledFilters",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_bounds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The bounds object, this is used to calculate and store the bounds of the displayObject.</p>"
						},
						{
							"name": "_localBounds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Local bounds object, swapped with <code>_bounds</code> when using <code>getLocalBounds()</code>.</p>"
						},
						{
							"name": "_boundsID",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Flags the cached bounds as dirty.</p>"
						},
						{
							"name": "_boundsRect",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Cache of this display-object's bounds-rectangle.</p>"
						},
						{
							"name": "_localBoundsRect",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Cache of this display-object's local-bounds rectangle.</p>"
						},
						{
							"name": "_mask",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The original, cached mask of the object.</p>"
						},
						{
							"name": "_destroyed",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>If the object has been destroyed via destroy(). If true, it should not be used.</p>"
						},
						{
							"name": "isMask",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "added",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when this DisplayObject is added to a Container.</p>"
						},
						{
							"name": "removed",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when this DisplayObject is removed from a Container.</p>"
						},
						{
							"name": "displayObjectUpdateTransform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "mousedown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightdown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "click",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightclick",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mousemove",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseover",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseout",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerdown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointercancel",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointertap",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointermove",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerover",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerout",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchstart",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchend",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchcancel",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "tap",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchendoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "name",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The instance name of the object.</p>"
						},
						{
							"name": "getGlobalPosition",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.</p>"
						},
						{
							"name": "removedFrom",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when a DisplayObject is removed from this Container.</p>"
						}
					]
				},
				{
					"name": "TextMetrics",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>The TextMetrics object represents the measurement of a block of text with a specified style.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "measureText",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Measures the supplied string of text and returns a Rectangle.</p>"
						},
						{
							"name": "wordWrap",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "addLine",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getFromCache",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Gets &amp; sets the widths of calculated characters in a cache object</p>"
						},
						{
							"name": "collapseSpaces",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Determines whether we should collapse breaking spaces</p>"
						},
						{
							"name": "collapseNewlines",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Determines whether we should collapse newLine chars</p>"
						},
						{
							"name": "trimRight",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>trims breaking whitespaces from string</p>"
						},
						{
							"name": "isNewline",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Determines if char is a newline.</p>"
						},
						{
							"name": "isBreakingSpace",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Determines if char is a breaking whitespace.</p>"
						},
						{
							"name": "tokenize",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Splits a string into words, breaking-spaces and newLine characters</p>"
						},
						{
							"name": "canBreakWords",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Overridable helper method used internally by TextMetrics, exposed to allow customizing the class's behavior.</p>"
						},
						{
							"name": "canBreakChars",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Overridable helper method used internally by TextMetrics, exposed to allow customizing the class's behavior.</p>"
						},
						{
							"name": "wordWrapSplit",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Overridable helper method used internally by TextMetrics, exposed to allow customizing the class's behavior.</p>"
						},
						{
							"name": "measureFont",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Calculates the ascent, descent and fontSize of a given font-style</p>"
						},
						{
							"name": "clearMetrics",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Clear font metrics in metrics cache.</p>"
						},
						{
							"name": "text",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The text that was measured</p>"
						},
						{
							"name": "style",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The style that was measured</p>"
						},
						{
							"name": "width",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The measured width of the text</p>"
						},
						{
							"name": "height",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The measured height of the text</p>"
						},
						{
							"name": "lines",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>An array of lines of the text broken by new lines and wrapping is specified in style</p>"
						},
						{
							"name": "lineWidths",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>An array of the line widths for each line matched to <code>lines</code></p>"
						},
						{
							"name": "lineHeight",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The measured line height for this style</p>"
						},
						{
							"name": "maxLineWidth",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The maximum line width for all measured lines</p>"
						},
						{
							"name": "fontProperties",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The font properties object from TextMetrics.measureFont</p>"
						},
						{
							"name": "_canvas",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "static",
							"brief": "<p>Cached canvas element for measuring text</p>"
						},
						{
							"name": "_context",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "static",
							"brief": "<p>Cache for context to use.</p>"
						},
						{
							"name": "_fonts",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "static",
							"brief": "<p>Cache of {@see PIXI.TextMetrics.FontMetrics} objects.</p>"
						},
						{
							"name": "METRICS_STRING",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "BASELINE_SYMBOL",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Baseline symbol for calculate font metrics.</p>"
						},
						{
							"name": "BASELINE_MULTIPLIER",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Baseline multiplier for calculate font metrics.</p>"
						},
						{
							"name": "_newlines",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "static",
							"brief": "<p>Cache of new line chars.</p>"
						},
						{
							"name": "_breakingSpaces",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "static",
							"brief": "<p>Cache of breaking spaces.</p>"
						},
						{
							"name": "canvas",
							"type": "TypedefDoc",
							"access": "private",
							"scope": "inner",
							"brief": "<p>Internal return object for {@link PIXI.TextMetrics.measureFont <code>TextMetrics.measureFont</code>}.</p>",
							"children": [
								{
									"name": "ascent",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "static",
									"brief": ""
								},
								{
									"name": "descent",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "static",
									"brief": ""
								},
								{
									"name": "fontSize",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "static",
									"brief": ""
								}
							]
						}
					]
				},
				{
					"name": "TextStyle",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>A TextStyle Object contains information to decorate a Text objects.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "clone",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "reset",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Resets all properties to the defaults specified in TextStyle.prototype._default</p>"
						},
						{
							"name": "align",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Alignment for multiline text ('left', 'center' or 'right'), does not affect single line text</p>"
						},
						{
							"name": "breakWords",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Indicates if lines can be wrapped within words, it needs wordWrap to be set to true</p>"
						},
						{
							"name": "dropShadow",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Set a drop shadow for the text</p>"
						},
						{
							"name": "dropShadowAlpha",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Set alpha for the drop shadow</p>"
						},
						{
							"name": "dropShadowAngle",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Set a angle of the drop shadow</p>"
						},
						{
							"name": "dropShadowBlur",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Set a shadow blur radius</p>"
						},
						{
							"name": "dropShadowColor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>A fill style to be used on the dropshadow e.g 'red', '#00FF00'</p>"
						},
						{
							"name": "dropShadowDistance",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Set a distance of the drop shadow</p>"
						},
						{
							"name": "fill",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "fillGradientType",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "fillGradientStops",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "fontFamily",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The font family</p>"
						},
						{
							"name": "fontSize",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "fontStyle",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "fontVariant",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "fontWeight",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "letterSpacing",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The amount of spacing between letters, default is 0</p>"
						},
						{
							"name": "lineHeight",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The line height, a number that represents the vertical space that a letter uses</p>"
						},
						{
							"name": "leading",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The space between lines</p>"
						},
						{
							"name": "lineJoin",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "miterLimit",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "padding",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "stroke",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "strokeThickness",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "textBaseline",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The baseline of the text that is rendered.</p>"
						},
						{
							"name": "trim",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Trim transparent borders</p>"
						},
						{
							"name": "whiteSpace",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "wordWrap",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Indicates if word wrap should be used</p>"
						},
						{
							"name": "wordWrapWidth",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The width at which text will wrap, it needs wordWrap to be set to true</p>"
						},
						{
							"name": "toFontString",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Generates a font style string to use for <code>TextMetrics.measureFont()</code>.</p>"
						}
					]
				},
				{
					"name": "BitmapFont",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Remove references to created glyph textures.</p>"
						},
						{
							"name": "install",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Register a new bitmap font.</p>"
						},
						{
							"name": "uninstall",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Remove bitmap font by name.</p>"
						},
						{
							"name": "available",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Collection of available fonts.</p>"
						},
						{
							"name": "font",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The name of the font face.</p>"
						},
						{
							"name": "size",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The size of the font face in pixels.</p>"
						},
						{
							"name": "lineHeight",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The line-height of the font face in pixels.</p>"
						},
						{
							"name": "chars",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The map of characters by character code.</p>"
						}
					]
				},
				{
					"name": "BitmapFontData",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>Normalized parsed data from .fnt files.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "info",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "common",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "page",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "char",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "kerning",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "BitmapFontLoader",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "add",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Called when the plugin is installed.</p>"
						},
						{
							"name": "use",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getBaseUrl",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "dirname",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "BitmapText",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>A BitmapText object will create a line or multiple lines of text using bitmap font.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "updateText",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Renders text and updates it when needed</p>"
						},
						{
							"name": "updateTransform",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Updates the transform of this object</p>"
						},
						{
							"name": "getLocalBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Validates text before calling parent's getLocalBounds</p>"
						},
						{
							"name": "validate",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Updates text when needed</p>"
						},
						{
							"name": "tint",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The tint of the BitmapText object.</p>"
						},
						{
							"name": "align",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The alignment of the BitmapText object.</p>"
						},
						{
							"name": "anchor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The anchor sets the origin point of the text.</p>"
						},
						{
							"name": "font",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Private tracker for the current font.</p>"
						},
						{
							"name": "text",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The text of the BitmapText object.</p>"
						},
						{
							"name": "maxWidth",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "maxLineHeight",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "textWidth",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "letterSpacing",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Additional space between characters.</p>"
						},
						{
							"name": "textHeight",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "registerFont",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Register a bitmap font with data and a texture.</p>"
						},
						{
							"name": "fonts",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Get the list of installed fonts.</p>"
						},
						{
							"name": "_textWidth",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Private tracker for the width of the overall text</p>"
						},
						{
							"name": "_textHeight",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Private tracker for the height of the overall text</p>"
						},
						{
							"name": "_glyphs",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Private tracker for the letter sprite pool.</p>"
						},
						{
							"name": "_font",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Private tracker for the current style.</p>"
						},
						{
							"name": "_text",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Private tracker for the current text.</p>"
						},
						{
							"name": "_maxWidth",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_maxLineHeight",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_letterSpacing",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_anchor",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Text anchor. read-only</p>"
						},
						{
							"name": "dirty",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The dirty state of this object.</p>"
						},
						{
							"name": "roundPixels",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "onChildrenChange",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Overridable method that can be used by Container subclasses whenever the children array is modified</p>"
						},
						{
							"name": "addChild",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds one or more children to the container.</p>"
						},
						{
							"name": "addChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds a child to the container at a specified index. If the index is out of bounds an error will be thrown</p>"
						},
						{
							"name": "swapChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Swaps the position of 2 Display Objects within this container.</p>"
						},
						{
							"name": "getChildIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the index position of a child DisplayObject instance</p>"
						},
						{
							"name": "setChildIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Changes the position of an existing child in the display object container</p>"
						},
						{
							"name": "getChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the child at the specified index</p>"
						},
						{
							"name": "removeChild",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes one or more children from the container.</p>"
						},
						{
							"name": "removeChildAt",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes a child from the specified index position.</p>"
						},
						{
							"name": "removeChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes all children from this container that are within the begin and end indexes.</p>"
						},
						{
							"name": "sortChildren",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Sorts children by zIndex. Previous order is mantained for 2 children with the same zIndex.</p>"
						},
						{
							"name": "calculateBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Recalculates the bounds of the container.</p>"
						},
						{
							"name": "_calculateBounds",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "render",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Renders the object using the WebGL renderer</p>"
						},
						{
							"name": "renderAdvanced",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Render the object using the WebGL renderer and advanced features.</p>"
						},
						{
							"name": "_render",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>To be overridden by the subclasses.</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "width",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The width of the Container, setting this will actually modify the scale to achieve the value set</p>"
						},
						{
							"name": "height",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The height of the Container, setting this will actually modify the scale to achieve the value set</p>"
						},
						{
							"name": "children",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The array of children of this container.</p>"
						},
						{
							"name": "sortableChildren",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "sortDirty",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "childAdded",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when a DisplayObject is added to this Container.</p>"
						},
						{
							"name": "containerUpdateTransform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getChildByName",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the display object in the container.</p>"
						},
						{
							"name": "mixin",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Mixes all enumerable properties and methods from a source object to DisplayObject.</p>"
						},
						{
							"name": "_recursivePostUpdateTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Retrieves the bounds of the displayObject as a rectangle object.</p>"
						},
						{
							"name": "toGlobal",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Calculates the global position of the display object.</p>"
						},
						{
							"name": "toLocal",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Calculates the local position of the display object relative to another point.</p>"
						},
						{
							"name": "setParent",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Set the parent Container of this DisplayObject.</p>"
						},
						{
							"name": "setTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Convenience function to set the position, scale, skew and pivot at once.</p>"
						},
						{
							"name": "_tempDisplayObjectParent",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "x",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "y",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "worldTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Current transform of the object based on world (parent) factors.</p>"
						},
						{
							"name": "localTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Current transform of the object based on local factors: position, scale, other stuff.</p>"
						},
						{
							"name": "position",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "scale",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "pivot",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "skew",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "rotation",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "angle",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "zIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "worldVisible",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Indicates if the object is globally visible.</p>"
						},
						{
							"name": "mask",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "transform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "alpha",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The opacity of the object.</p>"
						},
						{
							"name": "visible",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "renderable",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "parent",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The display object container that contains this display object.</p>"
						},
						{
							"name": "worldAlpha",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The multiplied alpha of the displayObject.</p>"
						},
						{
							"name": "_lastSortedIndex",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_zIndex",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "filterArea",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "filters",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_enabledFilters",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_bounds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The bounds object, this is used to calculate and store the bounds of the displayObject.</p>"
						},
						{
							"name": "_localBounds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Local bounds object, swapped with <code>_bounds</code> when using <code>getLocalBounds()</code>.</p>"
						},
						{
							"name": "_boundsID",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Flags the cached bounds as dirty.</p>"
						},
						{
							"name": "_boundsRect",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Cache of this display-object's bounds-rectangle.</p>"
						},
						{
							"name": "_localBoundsRect",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Cache of this display-object's local-bounds rectangle.</p>"
						},
						{
							"name": "_mask",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The original, cached mask of the object.</p>"
						},
						{
							"name": "_destroyed",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>If the object has been destroyed via destroy(). If true, it should not be used.</p>"
						},
						{
							"name": "isSprite",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "isMask",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "added",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when this DisplayObject is added to a Container.</p>"
						},
						{
							"name": "removed",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when this DisplayObject is removed from a Container.</p>"
						},
						{
							"name": "displayObjectUpdateTransform",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "mousedown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightdown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "click",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightclick",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "rightupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mousemove",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseover",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "mouseout",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerdown",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerup",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointercancel",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointertap",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerupoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointermove",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerover",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "pointerout",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchstart",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchend",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchcancel",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "tap",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "touchendoutside",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "name",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The instance name of the object.</p>"
						},
						{
							"name": "getGlobalPosition",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the global position of the displayObject. Does not depend on object scale, rotation and pivot.</p>"
						},
						{
							"name": "removedFrom",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired when a DisplayObject is removed from this Container.</p>"
						}
					]
				},
				{
					"name": "Ticker",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>A Ticker class that runs an update loop that other objects listen to.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_requestIfNeeded",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_cancelIfNeeded",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Conditionally cancels a pending animation frame.</p>"
						},
						{
							"name": "_startIfPossible",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "add",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "addOnce",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Add a handler for the tick event which is only execute once.</p>"
						},
						{
							"name": "_addListener",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "remove",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "count",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The number of listeners on this ticker, calculated by walking through linked list</p>"
						},
						{
							"name": "start",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "stop",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "update",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "FPS",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "minFPS",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "maxFPS",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "shared",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "system",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "_head",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_requestId",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_maxElapsedMS",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_minElapsedMS",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "autoStart",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "deltaTime",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "deltaMS",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "elapsedMS",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "lastTime",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "speed",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "started",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_protected",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_lastFrame",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_tick",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "TickerListener",
					"type": "ClassDoc",
					"access": "private",
					"scope": "inner",
					"brief": "<p>Internal class for handling the priority sorting of ticker handlers.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "match",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "emit",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "connect",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "fn",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "context",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "priority",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "once",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "next",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "previous",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_destroyed",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "TickerPlugin",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>Middleware for for Application Ticker.</p>",
					"children": [
						{
							"name": "init",
							"type": "MethodDoc",
							"access": "private",
							"scope": "static",
							"brief": "<p>Initialize the plugin with scope of application instance</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "private",
							"scope": "static",
							"brief": "<p>Clean up the ticker, scoped to application.</p>"
						},
						{
							"name": "stop",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Convenience method for stopping the render.</p>"
						},
						{
							"name": "start",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Convenience method for starting the render.</p>"
						}
					]
				},
				{
					"name": "utils",
					"type": "NSDoc",
					"access": "public",
					"scope": "static",
					"brief": "",
					"children": [
						{
							"name": "EventEmitter",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "<p>A high performance event emitter</p>"
						},
						{
							"name": "CanvasRenderTarget",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "<p>Creates a Canvas element of the given size to be used as a target for rendering to.</p>",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "clear",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Clears the canvas that was created by the CanvasRenderTarget class.</p>"
								},
								{
									"name": "resize",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Resizes the canvas to the specified width and height.</p>"
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Destroys this canvas.</p>"
								},
								{
									"name": "width",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The width of the canvas buffer in pixels.</p>"
								},
								{
									"name": "height",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The height of the canvas buffer in pixels.</p>"
								},
								{
									"name": "canvas",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The Canvas object that belongs to this CanvasRenderTarget.</p>"
								},
								{
									"name": "context",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>A CanvasRenderingContext2D object representing a two-dimensional rendering context.</p>"
								}
							]
						},
						{
							"name": "DecomposedDataUri",
							"type": "InterfaceDoc",
							"access": "public",
							"scope": "inner",
							"brief": "",
							"children": [
								{
									"name": "mediaType",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "subType",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "charset",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "encoding",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "data",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								}
							]
						}
					]
				},
				{
					"name": "CanvasExtract",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>The extract manager provides functionality to export content from the renderers.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "image",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Will return a HTML Image of the target</p>"
						},
						{
							"name": "base64",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "canvas",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Creates a Canvas element, renders this target to it and then returns it.</p>"
						},
						{
							"name": "pixels",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroys the extract</p>"
						}
					]
				},
				{
					"name": "CanvasGraphicsRenderer",
					"type": "ClassDoc",
					"access": "protected",
					"scope": "inner",
					"brief": "<p>Renderer dedicated to drawing and batching graphics objects.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_calcCanvasStyle",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>calculates fill/stroke style for canvas</p>"
						},
						{
							"name": "render",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Renders a Graphics object to a canvas.</p>"
						},
						{
							"name": "setPatternTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>destroy graphics object</p>"
						}
					]
				},
				{
					"name": "CanvasMeshRenderer",
					"type": "ClassDoc",
					"access": "protected",
					"scope": "inner",
					"brief": "<p>Renderer dedicated to meshes.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "render",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Renders the Mesh</p>"
						},
						{
							"name": "_renderTriangleMesh",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Draws the object in Triangle Mesh mode</p>"
						},
						{
							"name": "_renderTriangles",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Draws the object in triangle mode using canvas</p>"
						},
						{
							"name": "_renderDrawTriangle",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Draws one of the triangles that from the Mesh</p>"
						},
						{
							"name": "renderMeshFlat",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Renders a flat Mesh</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>destroy the the renderer.</p>"
						}
					]
				},
				{
					"name": "CanvasPrepare",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>The prepare manager provides functionality to upload content to the GPU.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroys the plugin, don't use after this.</p>"
						},
						{
							"name": "canvas",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "ctx",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "upload",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Upload all the textures and graphics to the GPU.</p>"
						},
						{
							"name": "tick",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Handle tick update</p>"
						},
						{
							"name": "prepareItems",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "registerFindHook",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds hooks for finding items.</p>"
						},
						{
							"name": "registerUploadHook",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds hooks for uploading items.</p>"
						},
						{
							"name": "add",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Manually add an item to the uploading queue.</p>"
						},
						{
							"name": "limiter",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "renderer",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uploadHookHelper",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "queue",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "addHooks",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uploadHooks",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "completes",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "ticking",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "delayedTick",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "CanvasRenderer",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>The CanvasRenderer draws the scene and all its content onto a 2d canvas.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "render",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Renders the object to this canvas view</p>"
						},
						{
							"name": "setContextTransform",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "clear",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Clear the canvas of renderer.</p>"
						},
						{
							"name": "setBlendMode",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Sets the blend mode of the renderer.</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Removes everything from the renderer and optionally removes the Canvas DOM element.</p>"
						},
						{
							"name": "resize",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Resizes the canvas view to the specified width and height.</p>"
						},
						{
							"name": "invalidateBlendMode",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Checks if blend mode has changed.</p>"
						},
						{
							"name": "registerPlugin",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Adds a plugin to the renderer.</p>"
						},
						{
							"name": "rootContext",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The root canvas 2d context that everything is drawn with.</p>"
						},
						{
							"name": "context",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The currently active canvas 2d context (could change with renderTextures)</p>"
						},
						{
							"name": "refresh",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Boolean flag controlling canvas refresh.</p>"
						},
						{
							"name": "maskManager",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Instance of a CanvasMaskManager, handles masking when using the canvas renderer.</p>"
						},
						{
							"name": "smoothProperty",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The canvas property used to set the canvas smoothing property.</p>"
						},
						{
							"name": "blendModes",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Tracks the blend modes useful for this renderer.</p>"
						},
						{
							"name": "_projTransform",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "postrender",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired after rendering finishes.</p>"
						},
						{
							"name": "prerender",
							"type": "EventDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Fired before rendering starts.</p>"
						},
						{
							"name": "extract",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Collection of methods for extracting data (image, pixels, etc.) from a display object or render texture</p>"
						},
						{
							"name": "initPlugins",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Initialize the plugins.</p>"
						},
						{
							"name": "width",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Same as view.width, actual number of pixels in the canvas by horizontal.</p>"
						},
						{
							"name": "height",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Same as view.height, actual number of pixels in the canvas by vertical.</p>"
						},
						{
							"name": "generateTexture",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "backgroundColor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The background color to fill if not transparent</p>"
						},
						{
							"name": "options",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The supplied constructor options.</p>"
						},
						{
							"name": "type",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The type of the renderer.</p>"
						},
						{
							"name": "screen",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Measurements of the screen. (0, 0, screenWidth, screenHeight).</p>"
						},
						{
							"name": "view",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The canvas element that everything is drawn to.</p>"
						},
						{
							"name": "resolution",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The resolution / device pixel ratio of the renderer.</p>"
						},
						{
							"name": "transparent",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Whether the render view is transparent.</p>"
						},
						{
							"name": "autoDensity",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Whether CSS dimensions of canvas view should be resized to screen dimensions automatically.</p>"
						},
						{
							"name": "preserveDrawingBuffer",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "clearBeforeRender",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_backgroundColor",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The background color as a number.</p>"
						},
						{
							"name": "_backgroundColorRgba",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The background color as an [R, G, B] array.</p>"
						},
						{
							"name": "_backgroundColorString",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The background color as a string.</p>"
						},
						{
							"name": "_tempDisplayObjectParent",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>This temporary display object used as the parent of the currently being rendered item.</p>"
						},
						{
							"name": "_lastObjectRendered",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The last root object that the renderer tried to render.</p>"
						},
						{
							"name": "plugins",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "canvasUtils",
					"type": "NSDoc",
					"access": "public",
					"scope": "static",
					"brief": "<p>Utility methods for Sprite/Texture tinting.</p>"
				},
				{
					"name": "CanvasSpriteRenderer",
					"type": "ClassDoc",
					"access": "protected",
					"scope": "inner",
					"brief": "<p>Renderer dedicated to drawing and batching sprites.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "render",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Renders the sprite object.</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>destroy the sprite object.</p>"
						}
					]
				},
				{
					"name": "AbstractBatchRenderer",
					"type": "ClassDoc",
					"access": "protected",
					"scope": "inner",
					"brief": "<p>Renderer dedicated to drawing and batching sprites.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "contextChange",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Handles the <code>contextChange</code> signal.</p>"
						},
						{
							"name": "initFlushBuffers",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Makes sure that static and dynamic flush pooled objects have correct dimensions</p>"
						},
						{
							"name": "onPrerender",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Handles the <code>prerender</code> signal.</p>"
						},
						{
							"name": "render",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "buildTexturesAndDrawCalls",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "buildDrawCalls",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Populating drawcalls for rendering</p>"
						},
						{
							"name": "bindAndClearTexArray",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Bind textures for current rendering</p>"
						},
						{
							"name": "updateGeometry",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "drawBatches",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "flush",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Renders the content <em>now</em> and empties the current batch.</p>"
						},
						{
							"name": "start",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Starts a new sprite batch.</p>"
						},
						{
							"name": "stop",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Stops and flushes the current batch.</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroys this <code>AbstractBatchRenderer</code>. It cannot be used again.</p>"
						},
						{
							"name": "getAttributeBuffer",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getIndexBuffer",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "packInterleavedGeometry",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "shaderGenerator",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "geometryClass",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "vertexSize",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "state",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The WebGL state in which this renderer will work.</p>"
						},
						{
							"name": "size",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_vertexCount",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_indexCount",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_bufferedElements",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Buffer of objects that are yet to be rendered.</p>"
						},
						{
							"name": "_bufferedTextures",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_bufferSize",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_shader",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>This shader is generated by <code>this.shaderGenerator</code>.</p>"
						},
						{
							"name": "_packedGeometries",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_packedGeometryPoolSize",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_flushId",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_aBuffers",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_iBuffers",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "MAX_TEXTURES",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_drawCallPool",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "_textureArrayPool",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "renderer",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The renderer this manager works for.</p>"
						}
					]
				},
				{
					"name": "BatchDrawCall",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "data",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "BatchGeometry",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>Geometry used to batch standard PIXI content (e.g. Mesh, Sprite, Graphics objects).</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_buffer",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Buffer used for position, color, texture IDs</p>"
						},
						{
							"name": "_indexBuffer",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Index buffer data</p>"
						}
					]
				},
				{
					"name": "BatchPluginFactory",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "create",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": "",
							"children": [
								{
									"name": "BatchPlugin",
									"type": "ClassDoc",
									"access": "public",
									"scope": "inner",
									"brief": "",
									"children": [
										{
											"name": "constructor",
											"type": "MethodDoc",
											"access": "public",
											"scope": "instance",
											"brief": ""
										}
									]
								}
							]
						},
						{
							"name": "defaultVertexSrc",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>The default vertex shader source</p>"
						},
						{
							"name": "defaultFragmentTemplate",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>The default fragment shader source</p>"
						}
					]
				},
				{
					"name": "BatchShaderGenerator",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>Helper that generates batching multi-texture shader. Use it with your new BatchRenderer</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "generateShader",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "generateSampleSrc",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "vertexSrc",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Reference to the vertex shader source.</p>"
						},
						{
							"name": "fragTemplate",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Reference to the fragement shader template. Must contain &quot;%count%&quot; and &quot;%forloop%&quot;.</p>"
						}
					]
				},
				{
					"name": "BatchTextureArray",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "clear",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "elements",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "ids",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "count",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "ObjectRenderer",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "flush",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "start",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "stop",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "render",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "renderer",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The renderer this manager works for.</p>"
						}
					]
				},
				{
					"name": "Filter",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>Filter is a special type of WebGL shader that is applied to the screen.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "apply",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Applies the filter</p>"
						},
						{
							"name": "blendMode",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Sets the blendmode of the filter</p>"
						},
						{
							"name": "defaultVertexSrc",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>The default vertex shader source</p>"
						},
						{
							"name": "defaultFragmentSrc",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>The default fragment shader source</p>"
						},
						{
							"name": "padding",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "resolution",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "enabled",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>If enabled is true the filter is applied, if false it will not.</p>"
						},
						{
							"name": "autoFit",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "legacy",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "state",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uniforms",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "from",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>A short hand function to create a shader based of a vertex and fragment shader</p>"
						},
						{
							"name": "program",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Program that the shader uses</p>"
						}
					]
				},
				{
					"name": "defaultVertex",
					"type": "PropertyDoc",
					"access": "public",
					"scope": "inner",
					"brief": ""
				},
				{
					"name": "Framebuffer",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>Frame buffer used by the BaseRenderTexture</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "colorTexture",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Reference to the colorTexture.</p>"
						},
						{
							"name": "addColorTexture",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Add texture to the colorTexture array</p>"
						},
						{
							"name": "addDepthTexture",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Add a depth texture to the frame buffer</p>"
						},
						{
							"name": "enableDepth",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Enable depth on the frame buffer</p>"
						},
						{
							"name": "enableStencil",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Enable stencil on the frame buffer</p>"
						},
						{
							"name": "resize",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Resize the frame buffer</p>"
						},
						{
							"name": "dispose",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Disposes WebGL resources that are connected to this geometry</p>"
						},
						{
							"name": "destroyDepthTexture",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroys and removes the depth texture added to this framebuffer.</p>"
						},
						{
							"name": "width",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "height",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "multisample",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Desired number of samples for antialiasing. 0 means AA should not be used.</p>"
						}
					]
				},
				{
					"name": "GLFramebuffer",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "framebuffer",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "stencil",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "dirtyId",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "dirtyFormat",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "dirtySize",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "multisample",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "msaaBuffer",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "blitFramebuffer",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "Attribute",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>Holds the information for a single attribute structure required to render geometry.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroys the Attribute.</p>"
						},
						{
							"name": "from",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Helper function that creates an Attribute based on the information provided</p>"
						}
					]
				},
				{
					"name": "Buffer",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>A wrapper for data so that it can be used and uploaded by WebGL</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "update",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "dispose",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>disposes WebGL resources that are connected to this geometry</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroys the buffer</p>"
						},
						{
							"name": "from",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Helper function that creates a buffer based on an array or TypedArray</p>"
						},
						{
							"name": "data",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The data in the buffer, as a typed array</p>"
						},
						{
							"name": "_glBuffers",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>A map of renderer IDs to webgl buffer</p>"
						}
					]
				},
				{
					"name": "Geometry",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "addAttribute",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getAttribute",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>returns the requested attribute</p>"
						},
						{
							"name": "getBuffer",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>returns the requested buffer</p>"
						},
						{
							"name": "addIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>returns the index buffer</p>"
						},
						{
							"name": "interleave",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getSize",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "dispose",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>disposes WebGL resources that are connected to this geometry</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroys the geometry.</p>"
						},
						{
							"name": "clone",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>returns a clone of the geometry</p>"
						},
						{
							"name": "merge",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "glVertexArrayObjects",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>A map of renderer IDs to webgl VAOs</p>"
						},
						{
							"name": "instanceCount",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "refCount",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "ViewableBuffer",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "int8View",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>View on the raw binary data as a <code>Int8Array</code>.</p>"
						},
						{
							"name": "uint8View",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>View on the raw binary data as a <code>Uint8Array</code>.</p>"
						},
						{
							"name": "int16View",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>View on the raw binary data as a <code>Int16Array</code>.</p>"
						},
						{
							"name": "uint16View",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>View on the raw binary data as a <code>Uint16Array</code>.</p>"
						},
						{
							"name": "int32View",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>View on the raw binary data as a <code>Int32Array</code>.</p>"
						},
						{
							"name": "view",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the view of the given type.</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "sizeOf",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "rawBinaryData",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uint32View",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>View on the raw binary data as a <code>Uint32Array</code>.</p>"
						},
						{
							"name": "float32View",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>View on the raw binary data as a <code>Float32Array</code>.</p>"
						}
					]
				},
				{
					"name": "MaskData",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>Component for masked elements</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Create MaskData</p>"
						},
						{
							"name": "reset",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>resets the mask data after popMask()</p>"
						},
						{
							"name": "copyCountersOrReset",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "type",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "autoDetect",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "maskObject",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "pooled",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "isMaskData",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_stencilCounter",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_scissorCounter",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_scissorRect",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_target",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "BaseRenderTexture",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>A BaseRenderTexture is a special texture that allows any PixiJS display object to be rendered to it.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "resize",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Resizes the BaseRenderTexture.</p>"
						},
						{
							"name": "dispose",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroys this texture.</p>"
						},
						{
							"name": "maskStack",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The data structure for the stencil masks.</p>"
						},
						{
							"name": "filterStack",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The data structure for the filters.</p>"
						},
						{
							"name": "_canvasRenderTarget",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>A reference to the canvas render target (we only need one as this can be shared across renderers)</p>"
						},
						{
							"name": "realWidth",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Pixel width of the source of this texture</p>"
						},
						{
							"name": "realHeight",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Pixel height of the source of this texture</p>"
						},
						{
							"name": "setStyle",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Changes style options of BaseTexture</p>"
						},
						{
							"name": "setSize",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Changes w/h/resolution. Texture becomes valid if width and height are greater than zero.</p>"
						},
						{
							"name": "setRealSize",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Sets real size of baseTexture, preserves current resolution.</p>"
						},
						{
							"name": "_refreshPOT",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Refresh check for isPowerOfTwo texture based on size</p>"
						},
						{
							"name": "setResolution",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Changes resolution</p>"
						},
						{
							"name": "setResource",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Sets the resource if it wasn't set. Throws error if resource already present</p>"
						},
						{
							"name": "update",
							"type": "EventDoc",
							"access": "protected",
							"scope": "static",
							"brief": "<p>Fired when BaseTexture is updated.</p>"
						},
						{
							"name": "onError",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "castToBaseTexture",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Utility function for BaseTexture|Texture cast</p>"
						},
						{
							"name": "width",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The width of the base texture set when the image has loaded</p>"
						},
						{
							"name": "height",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The height of the base texture set when the image has loaded</p>"
						},
						{
							"name": "resolution",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The resolution / device pixel ratio of the texture</p>"
						},
						{
							"name": "mipmap",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Mipmap mode of the texture, affects downscaled images</p>"
						},
						{
							"name": "anisotropicLevel",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Anisotropic filtering level of texture</p>"
						},
						{
							"name": "wrapMode",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "scaleMode",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The scale mode to apply when scaling this texture</p>"
						},
						{
							"name": "format",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The pixel format of the texture</p>"
						},
						{
							"name": "type",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The type of resource data</p>"
						},
						{
							"name": "target",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The target type</p>"
						},
						{
							"name": "alphaMode",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>How to treat premultiplied alpha, see {@link PIXI.ALPHA_MODES}.</p>"
						},
						{
							"name": "uid",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Global unique identifier for this BaseTexture</p>"
						},
						{
							"name": "touched",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Used by automatic texture Garbage Collection, stores last GC tick when it was bound</p>"
						},
						{
							"name": "isPowerOfTwo",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_glTextures",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>The map of render context textures where this is bound</p>"
						},
						{
							"name": "dirtyId",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "dirtyStyleId",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Used by TextureSystem to only update texture style when needed.</p>"
						},
						{
							"name": "cacheId",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Currently default cache ID.</p>"
						},
						{
							"name": "valid",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "textureCacheIds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "destroyed",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Flag if BaseTexture has been destroyed.</p>"
						},
						{
							"name": "resource",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_batchEnabled",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Number of the texture batch, used by multi-texture renderers</p>"
						},
						{
							"name": "_batchLocation",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Location inside texture batch, used by multi-texture renderers</p>"
						},
						{
							"name": "loaded",
							"type": "EventDoc",
							"access": "protected",
							"scope": "static",
							"brief": "<p>Fired when BaseTexture is updated.</p>"
						},
						{
							"name": "error",
							"type": "EventDoc",
							"access": "protected",
							"scope": "static",
							"brief": "<p>Fired when a not-immediately-available source fails to load.</p>"
						},
						{
							"name": "getDrawableSource",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "RenderTexture",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>A RenderTexture is a special texture that allows any PixiJS display object to be rendered to it.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "framebuffer",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "resize",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Resizes the RenderTexture.</p>"
						},
						{
							"name": "setResolution",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Changes the resolution of baseTexture, but does not change framebuffer size.</p>"
						},
						{
							"name": "create",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>A short hand way of creating a render texture.</p>"
						},
						{
							"name": "valid",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>This will let the renderer know if the texture is valid. If it's not then it cannot be rendered.</p>"
						},
						{
							"name": "filterFrame",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "filterPoolKey",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "update",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Updates this texture on the gpu.</p>"
						},
						{
							"name": "onBaseTextureUpdated",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Called when the base texture is updated</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroys this texture</p>"
						},
						{
							"name": "clone",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Creates a new texture object that acts the same as this one.</p>"
						},
						{
							"name": "updateUvs",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "resolution",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns resolution of baseTexture</p>"
						},
						{
							"name": "frame",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "rotate",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "width",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The width of the Texture in pixels.</p>"
						},
						{
							"name": "height",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The height of the Texture in pixels.</p>"
						},
						{
							"name": "castToBaseTexture",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Utility function for BaseTexture|Texture cast</p>"
						},
						{
							"name": "noFrame",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Does this Texture have any frame data assigned to it?</p>"
						},
						{
							"name": "baseTexture",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The base texture that this texture uses.</p>"
						},
						{
							"name": "_frame",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "trim",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_uvs",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The WebGL UV data cache. Can be used as quad UV</p>"
						},
						{
							"name": "uvMatrix",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "orig",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>This is the area of original texture, before it was put in atlas</p>"
						},
						{
							"name": "defaultAnchor",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_updateID",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "textureCacheIds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "RenderTexturePool",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>Experimental!</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "createTexture",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>creates of texture with params that were specified in pool constructor</p>"
						},
						{
							"name": "getOptimalTexture",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Gets a Power-of-Two render texture or fullScreen texture</p>"
						},
						{
							"name": "getFilterTexture",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Gets extra texture of the same size as input renderTexture</p>"
						},
						{
							"name": "returnTexture",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "returnFilterTexture",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "clear",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Clears the pool</p>"
						},
						{
							"name": "setScreenSize",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "enableFullScreen",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Allow renderTextures of the same size as screen, not just pow2</p>"
						},
						{
							"name": "SCREEN_KEY",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Key that is used to store fullscreen renderTextures in a pool</p>"
						}
					]
				},
				{
					"name": "GLProgram",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>Helper class to create a WebGL Program</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Makes a new Pixi program</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroys this program</p>"
						},
						{
							"name": "program",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The shader program</p>"
						},
						{
							"name": "uniformData",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uniformGroups",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "Program",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>Helper class to create a shader program.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "extractData",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getAttributeData",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getUniformData",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "defaultVertexSrc",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>The default vertex shader source</p>"
						},
						{
							"name": "defaultFragmentSrc",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>The default fragment shader source</p>"
						},
						{
							"name": "from",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "vertexSrc",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The vertex shader.</p>"
						},
						{
							"name": "fragmentSrc",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The fragment shader.</p>"
						}
					]
				},
				{
					"name": "Shader",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>A helper class for shaders</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uniforms",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "from",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>A short hand function to create a shader based of a vertex and fragment shader</p>"
						},
						{
							"name": "program",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Program that the shader uses</p>"
						}
					]
				},
				{
					"name": "UniformGroup",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>Uniform group holds uniform map and some ID's for work</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "update",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "add",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "from",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uniforms",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "group",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "dirtyId",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "id",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "static",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "State",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>This is a WebGL state, and is is passed The WebGL StateManager.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "blend",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Activates blending of the computed fragment color values</p>"
						},
						{
							"name": "offsets",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Activates adding an offset to depth values of polygon's fragments</p>"
						},
						{
							"name": "culling",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Activates culling of polygons.</p>"
						},
						{
							"name": "depthTest",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Activates depth comparisons and updates to the depth buffer.</p>"
						},
						{
							"name": "clockwiseFrontFace",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "blendMode",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "polygonOffset",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The polygon offset. Setting this property to anything other than 0 will automatically enable polygon offset fill.</p>"
						},
						{
							"name": "for2d",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "BaseTexture",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "realWidth",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Pixel width of the source of this texture</p>"
						},
						{
							"name": "realHeight",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Pixel height of the source of this texture</p>"
						},
						{
							"name": "setStyle",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Changes style options of BaseTexture</p>"
						},
						{
							"name": "setSize",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Changes w/h/resolution. Texture becomes valid if width and height are greater than zero.</p>"
						},
						{
							"name": "setRealSize",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Sets real size of baseTexture, preserves current resolution.</p>"
						},
						{
							"name": "_refreshPOT",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>Refresh check for isPowerOfTwo texture based on size</p>"
						},
						{
							"name": "setResolution",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Changes resolution</p>"
						},
						{
							"name": "setResource",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Sets the resource if it wasn't set. Throws error if resource already present</p>"
						},
						{
							"name": "update",
							"type": "EventDoc",
							"access": "protected",
							"scope": "static",
							"brief": "<p>Fired when BaseTexture is updated.</p>"
						},
						{
							"name": "onError",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "dispose",
							"type": "EventDoc",
							"access": "protected",
							"scope": "static",
							"brief": "<p>Fired when BaseTexture is destroyed.</p>"
						},
						{
							"name": "castToBaseTexture",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Utility function for BaseTexture|Texture cast</p>"
						},
						{
							"name": "from",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "fromBuffer",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "addToCache",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Adds a BaseTexture to the global BaseTextureCache. This cache is shared across the whole PIXI object.</p>"
						},
						{
							"name": "removeFromCache",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Remove a BaseTexture from the global BaseTextureCache.</p>"
						},
						{
							"name": "width",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The width of the base texture set when the image has loaded</p>"
						},
						{
							"name": "height",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The height of the base texture set when the image has loaded</p>"
						},
						{
							"name": "resolution",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The resolution / device pixel ratio of the texture</p>"
						},
						{
							"name": "mipmap",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Mipmap mode of the texture, affects downscaled images</p>"
						},
						{
							"name": "anisotropicLevel",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Anisotropic filtering level of texture</p>"
						},
						{
							"name": "wrapMode",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "scaleMode",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The scale mode to apply when scaling this texture</p>"
						},
						{
							"name": "format",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The pixel format of the texture</p>"
						},
						{
							"name": "type",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The type of resource data</p>"
						},
						{
							"name": "target",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The target type</p>"
						},
						{
							"name": "alphaMode",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>How to treat premultiplied alpha, see {@link PIXI.ALPHA_MODES}.</p>"
						},
						{
							"name": "uid",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Global unique identifier for this BaseTexture</p>"
						},
						{
							"name": "touched",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Used by automatic texture Garbage Collection, stores last GC tick when it was bound</p>"
						},
						{
							"name": "isPowerOfTwo",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_glTextures",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": "<p>The map of render context textures where this is bound</p>"
						},
						{
							"name": "dirtyId",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "dirtyStyleId",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Used by TextureSystem to only update texture style when needed.</p>"
						},
						{
							"name": "cacheId",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Currently default cache ID.</p>"
						},
						{
							"name": "valid",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "textureCacheIds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "destroyed",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Flag if BaseTexture has been destroyed.</p>"
						},
						{
							"name": "resource",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_batchEnabled",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Number of the texture batch, used by multi-texture renderers</p>"
						},
						{
							"name": "_batchLocation",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Location inside texture batch, used by multi-texture renderers</p>"
						},
						{
							"name": "_globalBatch",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Global number of the texture batch, used by multi-texture renderers</p>"
						},
						{
							"name": "loaded",
							"type": "EventDoc",
							"access": "protected",
							"scope": "static",
							"brief": "<p>Fired when BaseTexture is updated.</p>"
						},
						{
							"name": "error",
							"type": "EventDoc",
							"access": "protected",
							"scope": "static",
							"brief": "<p>Fired when a not-immediately-available source fails to load.</p>"
						},
						{
							"name": "getDrawableSource",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "GLTexture",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "texture",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "width",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "height",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "dirtyId",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "dirtyStyleId",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "mipmap",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "wrapMode",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "type",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "internalFormat",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "Texture",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>A texture stores the information that represents an image or part of an image.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "update",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Updates this texture on the gpu.</p>"
						},
						{
							"name": "onBaseTextureUpdated",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Called when the base texture is updated</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroys this texture</p>"
						},
						{
							"name": "clone",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Creates a new texture object that acts the same as this one.</p>"
						},
						{
							"name": "updateUvs",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "from",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "fromBuffer",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "fromLoader",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Create a texture from a source and add to the cache.</p>"
						},
						{
							"name": "addToCache",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Adds a Texture to the global TextureCache. This cache is shared across the whole PIXI object.</p>"
						},
						{
							"name": "removeFromCache",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>Remove a Texture from the global TextureCache.</p>"
						},
						{
							"name": "resolution",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns resolution of baseTexture</p>"
						},
						{
							"name": "frame",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "rotate",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "width",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The width of the Texture in pixels.</p>"
						},
						{
							"name": "height",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The height of the Texture in pixels.</p>"
						},
						{
							"name": "castToBaseTexture",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Utility function for BaseTexture|Texture cast</p>"
						},
						{
							"name": "noFrame",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Does this Texture have any frame data assigned to it?</p>"
						},
						{
							"name": "baseTexture",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The base texture that this texture uses.</p>"
						},
						{
							"name": "_frame",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "trim",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "valid",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>This will let the renderer know if the texture is valid. If it's not then it cannot be rendered.</p>"
						},
						{
							"name": "_uvs",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>The WebGL UV data cache. Can be used as quad UV</p>"
						},
						{
							"name": "uvMatrix",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "orig",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>This is the area of original texture, before it was put in atlas</p>"
						},
						{
							"name": "defaultAnchor",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_updateID",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "textureCacheIds",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "EMPTY",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						},
						{
							"name": "WHITE",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "static",
							"brief": ""
						}
					]
				},
				{
					"name": "TextureMatrix",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>Class controls uv mapping from Texture normal space to BaseTexture normal space.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "texture",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "multiplyUvs",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "update",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "mapCoord",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uClampFrame",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uClampOffset",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_updateID",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "clampOffset",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "clampMargin",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "isSimple",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "TextureUvs",
					"type": "ClassDoc",
					"access": "protected",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "set",
							"type": "MethodDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>Sets the texture Uvs based on the given frame information.</p>"
						},
						{
							"name": "x0",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>X-component of top-left corner <code>(x0,y0)</code>.</p>"
						},
						{
							"name": "y0",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Y-component of top-left corner <code>(x0,y0)</code>.</p>"
						},
						{
							"name": "x1",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>X-component of top-right corner <code>(x1,y1)</code>.</p>"
						},
						{
							"name": "y1",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Y-component of top-right corner <code>(x1,y1)</code>.</p>"
						},
						{
							"name": "x2",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>X-component of bottom-right corner <code>(x2,y2)</code>.</p>"
						},
						{
							"name": "y2",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Y-component of bottom-right corner <code>(x2,y2)</code>.</p>"
						},
						{
							"name": "x3",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>X-component of bottom-left corner <code>(x3,y3)</code>.</p>"
						},
						{
							"name": "y3",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Y-component of bottom-right corner <code>(x3,y3)</code>.</p>"
						}
					]
				},
				{
					"name": "Quad",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>Helper class to create a quad</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "QuadUv",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>Helper class to create a quad with uvs like in v4</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "map",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Maps two Rectangle to the quad.</p>"
						},
						{
							"name": "invalidate",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "vertices",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>An array of vertices</p>"
						},
						{
							"name": "uvs",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The Uvs of the quad</p>"
						},
						{
							"name": "addAttribute",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getAttribute",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>returns the requested attribute</p>"
						},
						{
							"name": "getBuffer",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>returns the requested buffer</p>"
						},
						{
							"name": "addIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>returns the index buffer</p>"
						},
						{
							"name": "interleave",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getSize",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "dispose",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>disposes WebGL resources that are connected to this geometry</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroys the geometry.</p>"
						},
						{
							"name": "clone",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>returns a clone of the geometry</p>"
						},
						{
							"name": "merge",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "glVertexArrayObjects",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>A map of renderer IDs to webgl VAOs</p>"
						},
						{
							"name": "instanceCount",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "refCount",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "FillStyle",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>Fill style object for Graphics.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "clone",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Clones the object</p>"
						},
						{
							"name": "reset",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Reset</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroy and don't use after this</p>"
						},
						{
							"name": "color",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The hex color value used when coloring the Graphics object.</p>"
						},
						{
							"name": "alpha",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The alpha value used when filling the Graphics object.</p>"
						},
						{
							"name": "texture",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The texture to be used for the fill.</p>"
						},
						{
							"name": "matrix",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The transform aplpied to the texture.</p>"
						},
						{
							"name": "visible",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>If the current fill is visible.</p>"
						}
					]
				},
				{
					"name": "LineStyle",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "clone",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Clones the object</p>"
						},
						{
							"name": "reset",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Reset the line style to default.</p>"
						},
						{
							"name": "width",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The width (thickness) of any lines drawn.</p>"
						},
						{
							"name": "alignment",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The alignment of any lines drawn (0.5 = middle, 1 = outer, 0 = inner).</p>"
						},
						{
							"name": "native",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>If true the lines will be draw using LINES instead of TRIANGLE_STRIP</p>"
						},
						{
							"name": "cap",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Line cap style.</p>"
						},
						{
							"name": "join",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Line join style.</p>"
						},
						{
							"name": "miterLimit",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Miter limit.</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroy and don't use after this</p>"
						},
						{
							"name": "color",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The hex color value used when coloring the Graphics object.</p>"
						},
						{
							"name": "alpha",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The alpha value used when filling the Graphics object.</p>"
						},
						{
							"name": "texture",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The texture to be used for the fill.</p>"
						},
						{
							"name": "matrix",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The transform aplpied to the texture.</p>"
						},
						{
							"name": "visible",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>If the current fill is visible.</p>"
						}
					]
				},
				{
					"name": "Star",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>Draw a star shape with an arbitrary number of points.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "clone",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Creates a clone of this polygon</p>"
						},
						{
							"name": "contains",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Checks whether the x and y coordinates passed to this function are contained within this polygon</p>"
						},
						{
							"name": "points",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>An array of the points of this polygon</p>"
						},
						{
							"name": "type",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The type of the object, mainly used to avoid <code>instanceof</code> checks</p>"
						},
						{
							"name": "closeStroke",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "graphicsUtils",
					"type": "NSDoc",
					"access": "public",
					"scope": "static",
					"brief": "<p>Generalized convenience utilities for Graphics.</p>",
					"children": [
						{
							"name": "BatchPart",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "begin",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Begin batch part</p>"
								},
								{
									"name": "end",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>End batch part</p>"
								},
								{
									"name": "reset",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								}
							]
						}
					]
				},
				{
					"name": "Circle",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>The Circle object is used to help draw graphics and can also be used to specify a hit area for displayObjects.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "clone",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Creates a clone of this Circle instance</p>"
						},
						{
							"name": "contains",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Checks whether the x and y coordinates given are contained within this circle</p>"
						},
						{
							"name": "getBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the framing rectangle of the circle as a Rectangle object</p>"
						},
						{
							"name": "x",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "y",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "radius",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "type",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The type of the object, mainly used to avoid <code>instanceof</code> checks</p>"
						}
					]
				},
				{
					"name": "Ellipse",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>The Ellipse object is used to help draw graphics and can also be used to specify a hit area for displayObjects.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "clone",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Creates a clone of this Ellipse instance</p>"
						},
						{
							"name": "contains",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Checks whether the x and y coordinates given are contained within this ellipse</p>"
						},
						{
							"name": "getBounds",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Returns the framing rectangle of the ellipse as a Rectangle object</p>"
						},
						{
							"name": "x",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "y",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "width",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "height",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "type",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The type of the object, mainly used to avoid <code>instanceof</code> checks</p>"
						}
					]
				},
				{
					"name": "Polygon",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>A class to define a shape via user defined co-orinates.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "clone",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Creates a clone of this polygon</p>"
						},
						{
							"name": "contains",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Checks whether the x and y coordinates passed to this function are contained within this polygon</p>"
						},
						{
							"name": "points",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>An array of the points of this polygon</p>"
						},
						{
							"name": "type",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The type of the object, mainly used to avoid <code>instanceof</code> checks</p>"
						},
						{
							"name": "closeStroke",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "Rectangle",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "left",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>returns the left edge of the rectangle</p>"
						},
						{
							"name": "right",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>returns the right edge of the rectangle</p>"
						},
						{
							"name": "top",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>returns the top edge of the rectangle</p>"
						},
						{
							"name": "bottom",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>returns the bottom edge of the rectangle</p>"
						},
						{
							"name": "EMPTY",
							"type": "MethodDoc",
							"access": "public",
							"scope": "static",
							"brief": "<p>A constant empty rectangle.</p>"
						},
						{
							"name": "clone",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Creates a clone of this Rectangle</p>"
						},
						{
							"name": "copyFrom",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Copies another rectangle to this one.</p>"
						},
						{
							"name": "copyTo",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Copies this rectangle to another one.</p>"
						},
						{
							"name": "contains",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Checks whether the x and y coordinates given are contained within this Rectangle</p>"
						},
						{
							"name": "pad",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "fit",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Fits this rectangle around the passed one.</p>"
						},
						{
							"name": "ceil",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Enlarges rectangle that way its corners lie on grid</p>"
						},
						{
							"name": "enlarge",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Enlarges this rectangle to include the passed rectangle.</p>"
						},
						{
							"name": "x",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "y",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "width",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "height",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "type",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The type of the object, mainly used to avoid <code>instanceof</code> checks</p>"
						}
					]
				},
				{
					"name": "RoundedRectangle",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "clone",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Creates a clone of this Rounded Rectangle</p>"
						},
						{
							"name": "contains",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Checks whether the x and y coordinates given are contained within this Rounded Rectangle</p>"
						},
						{
							"name": "x",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "y",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "width",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "height",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "radius",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "type",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>The type of the object, mainly used to avoid <code>instanceof</code> checks</p>"
						}
					]
				},
				{
					"name": "RopeGeometry",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>RopeGeometry allows you to draw a geometry across several points and then manipulate these points.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "width",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "build",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "updateVertices",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>refreshes vertices of Rope mesh</p>"
						},
						{
							"name": "update",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "points",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_width",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "textureScale",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "vertexDirtyId",
							"type": "MethodDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "_updateId",
							"type": "PropertyDoc",
							"access": "private",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "addAttribute",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getAttribute",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>returns the requested attribute</p>"
						},
						{
							"name": "getBuffer",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>returns the requested buffer</p>"
						},
						{
							"name": "addIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getIndex",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>returns the index buffer</p>"
						},
						{
							"name": "interleave",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "getSize",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "dispose",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>disposes WebGL resources that are connected to this geometry</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroys the geometry.</p>"
						},
						{
							"name": "clone",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>returns a clone of the geometry</p>"
						},
						{
							"name": "merge",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "glVertexArrayObjects",
							"type": "PropertyDoc",
							"access": "protected",
							"scope": "instance",
							"brief": "<p>A map of renderer IDs to webgl VAOs</p>"
						},
						{
							"name": "instanceCount",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "refCount",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						}
					]
				},
				{
					"name": "CanvasMaskManager",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>A set of functions used to handle masking.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "pushMask",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>This method adds it to the current stack of masks.</p>"
						},
						{
							"name": "recursiveFindShapes",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Renders all PIXI.Graphics shapes in a subtree.</p>"
						},
						{
							"name": "renderGraphicsShape",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Renders a PIXI.Graphics shape.</p>"
						},
						{
							"name": "popMask",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Restores the current drawing context to the state it was before the mask was applied.</p>"
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Destroys this canvas mask manager.</p>"
						}
					]
				},
				{
					"name": "SpriteMaskFilter",
					"type": "ClassDoc",
					"access": "public",
					"scope": "inner",
					"brief": "<p>This handles a Sprite acting as a mask, as opposed to a Graphic.</p>",
					"children": [
						{
							"name": "constructor",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "apply",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Applies the filter</p>"
						},
						{
							"name": "maskSprite",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "maskMatrix",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "blendMode",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Sets the blendmode of the filter</p>"
						},
						{
							"name": "padding",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "resolution",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "enabled",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>If enabled is true the filter is applied, if false it will not.</p>"
						},
						{
							"name": "autoFit",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "legacy",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "state",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "destroy",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "uniforms",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": ""
						},
						{
							"name": "from",
							"type": "MethodDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>A short hand function to create a shader based of a vertex and fragment shader</p>"
						},
						{
							"name": "program",
							"type": "PropertyDoc",
							"access": "public",
							"scope": "instance",
							"brief": "<p>Program that the shader uses</p>"
						}
					]
				},
				{
					"name": "glCore",
					"type": "NSDoc",
					"access": "public",
					"scope": "static",
					"brief": "",
					"children": [
						{
							"name": "shader",
							"type": "NSDoc",
							"access": "public",
							"scope": "static",
							"brief": "",
							"children": [
								{
									"name": "mapSize",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "compileProgram",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "defaultValue",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								}
							]
						}
					]
				},
				{
					"name": "resources",
					"type": "NSDoc",
					"access": "public",
					"scope": "static",
					"brief": "<p>Collection of base resource types supported by PixiJS.</p>",
					"children": [
						{
							"name": "ArrayResource",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "<p>A resource that contains a number of sources.</p>",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "dispose",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "addResourceAt",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Set a resource by ID</p>"
								},
								{
									"name": "bind",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "unbind",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "load",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "upload",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "items",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "itemDirtyIds",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "length",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Number of elements in array</p>"
								},
								{
									"name": "_load",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "resize",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "valid",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "update",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Has been updated trigger event</p>"
								},
								{
									"name": "width",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The width of the resource.</p>"
								},
								{
									"name": "height",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The height of the resource.</p>"
								},
								{
									"name": "style",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Set the style, optional to override</p>"
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_width",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_height",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "destroyed",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "internal",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "onResize",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "onUpdate",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Mini-runner for handling update events</p>"
								},
								{
									"name": "onError",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								}
							]
						},
						{
							"name": "BaseImageResource",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "crossOrigin",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "upload",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "update",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "dispose",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "source",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "noSubImage",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "bind",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Bind to a parent BaseTexture</p>"
								},
								{
									"name": "unbind",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Unbind to a parent BaseTexture</p>"
								},
								{
									"name": "resize",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "valid",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "load",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "width",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The width of the resource.</p>"
								},
								{
									"name": "height",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The height of the resource.</p>"
								},
								{
									"name": "style",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Set the style, optional to override</p>"
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_width",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_height",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "destroyed",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "internal",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "onResize",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "onUpdate",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Mini-runner for handling update events</p>"
								},
								{
									"name": "onError",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								}
							]
						},
						{
							"name": "BufferResource",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "upload",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "dispose",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "test",
									"type": "MethodDoc",
									"access": "public",
									"scope": "static",
									"brief": "<p>Used to auto-detect the type of resource.</p>"
								},
								{
									"name": "data",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "bind",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Bind to a parent BaseTexture</p>"
								},
								{
									"name": "unbind",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Unbind to a parent BaseTexture</p>"
								},
								{
									"name": "resize",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "valid",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "update",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Has been updated trigger event</p>"
								},
								{
									"name": "load",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "width",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The width of the resource.</p>"
								},
								{
									"name": "height",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The height of the resource.</p>"
								},
								{
									"name": "style",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Set the style, optional to override</p>"
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_width",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_height",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "destroyed",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "internal",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "onResize",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "onUpdate",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Mini-runner for handling update events</p>"
								},
								{
									"name": "onError",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								}
							]
						},
						{
							"name": "CanvasResource",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "",
							"children": [
								{
									"name": "test",
									"type": "MethodDoc",
									"access": "public",
									"scope": "static",
									"brief": "<p>Used to auto-detect the type of resource.</p>"
								},
								{
									"name": "crossOrigin",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "upload",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "update",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "dispose",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "source",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "noSubImage",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "bind",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Bind to a parent BaseTexture</p>"
								},
								{
									"name": "unbind",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Unbind to a parent BaseTexture</p>"
								},
								{
									"name": "resize",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "valid",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "load",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "width",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The width of the resource.</p>"
								},
								{
									"name": "height",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The height of the resource.</p>"
								},
								{
									"name": "style",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Set the style, optional to override</p>"
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_width",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_height",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "destroyed",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "internal",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "onResize",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "onUpdate",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Mini-runner for handling update events</p>"
								},
								{
									"name": "onError",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								}
							]
						},
						{
							"name": "CubeResource",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "<p>Resource for a CubeTexture which contains six resources.</p>",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "bind",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Add binding</p>"
								},
								{
									"name": "upload",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Upload the resource</p>"
								},
								{
									"name": "test",
									"type": "MethodDoc",
									"access": "public",
									"scope": "static",
									"brief": "<p>Used to auto-detect the type of resource.</p>"
								},
								{
									"name": "SIDES",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "static",
									"brief": "<p>Number of texture sides to store for CubeResources</p>"
								},
								{
									"name": "dispose",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "addResourceAt",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Set a resource by ID</p>"
								},
								{
									"name": "unbind",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "load",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "items",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "itemDirtyIds",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "length",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Number of elements in array</p>"
								},
								{
									"name": "_load",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "resize",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "valid",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "update",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Has been updated trigger event</p>"
								},
								{
									"name": "width",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The width of the resource.</p>"
								},
								{
									"name": "height",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The height of the resource.</p>"
								},
								{
									"name": "style",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Set the style, optional to override</p>"
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_width",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_height",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "destroyed",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "internal",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "onResize",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "onUpdate",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Mini-runner for handling update events</p>"
								},
								{
									"name": "onError",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								}
							]
						},
						{
							"name": "DepthResource",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "",
							"children": [
								{
									"name": "upload",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "dispose",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "data",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "bind",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Bind to a parent BaseTexture</p>"
								},
								{
									"name": "unbind",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Unbind to a parent BaseTexture</p>"
								},
								{
									"name": "resize",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "valid",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "update",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Has been updated trigger event</p>"
								},
								{
									"name": "load",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "width",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The width of the resource.</p>"
								},
								{
									"name": "height",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The height of the resource.</p>"
								},
								{
									"name": "style",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Set the style, optional to override</p>"
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_width",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_height",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "destroyed",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "internal",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "onResize",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "onUpdate",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Mini-runner for handling update events</p>"
								},
								{
									"name": "onError",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								}
							]
						},
						{
							"name": "ImageBitmapResource",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "",
							"children": [
								{
									"name": "test",
									"type": "MethodDoc",
									"access": "public",
									"scope": "static",
									"brief": "<p>Used to auto-detect the type of resource.</p>"
								},
								{
									"name": "crossOrigin",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "upload",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "update",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "dispose",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "source",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "noSubImage",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "bind",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Bind to a parent BaseTexture</p>"
								},
								{
									"name": "unbind",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Unbind to a parent BaseTexture</p>"
								},
								{
									"name": "resize",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "valid",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "load",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "width",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The width of the resource.</p>"
								},
								{
									"name": "height",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The height of the resource.</p>"
								},
								{
									"name": "style",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Set the style, optional to override</p>"
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_width",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_height",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "destroyed",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "internal",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "onResize",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "onUpdate",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Mini-runner for handling update events</p>"
								},
								{
									"name": "onError",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								}
							]
						},
						{
							"name": "ImageResource",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "load",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>returns a promise when image will be loaded and processed</p>"
								},
								{
									"name": "process",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "upload",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Upload the image resource to GPU.</p>"
								},
								{
									"name": "dispose",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "url",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_process",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "preserveBitmap",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "createBitmap",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "alphaMode",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "bitmap",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_load",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "crossOrigin",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "update",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "source",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "noSubImage",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "bind",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Bind to a parent BaseTexture</p>"
								},
								{
									"name": "unbind",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Unbind to a parent BaseTexture</p>"
								},
								{
									"name": "resize",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "valid",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "width",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The width of the resource.</p>"
								},
								{
									"name": "height",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The height of the resource.</p>"
								},
								{
									"name": "style",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Set the style, optional to override</p>"
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_width",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_height",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "destroyed",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "internal",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "onResize",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "onUpdate",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Mini-runner for handling update events</p>"
								},
								{
									"name": "onError",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								}
							]
						},
						{
							"name": "Resource",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "<p>Base resource class for textures that manages validation and uploading, depending on its type.</p>",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "bind",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Bind to a parent BaseTexture</p>"
								},
								{
									"name": "unbind",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Unbind to a parent BaseTexture</p>"
								},
								{
									"name": "resize",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "valid",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "update",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Has been updated trigger event</p>"
								},
								{
									"name": "load",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "width",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The width of the resource.</p>"
								},
								{
									"name": "height",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The height of the resource.</p>"
								},
								{
									"name": "style",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Set the style, optional to override</p>"
								},
								{
									"name": "dispose",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": "<p>Clean up anything, this happens when destroying is ready.</p>"
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "test",
									"type": "MethodDoc",
									"access": "public",
									"scope": "static",
									"brief": "<p>Abstract, used to auto-detect resource type</p>"
								},
								{
									"name": "_width",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_height",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "destroyed",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "internal",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "onResize",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "onUpdate",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Mini-runner for handling update events</p>"
								},
								{
									"name": "onError",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								}
							]
						},
						{
							"name": "SVGResource",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "load",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_loadSvg",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Loads an SVG image from <code>imageUrl</code> or <code>data URL</code>.</p>"
								},
								{
									"name": "getSize",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Get size from an svg string using regexp.</p>"
								},
								{
									"name": "dispose",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "test",
									"type": "MethodDoc",
									"access": "public",
									"scope": "static",
									"brief": "<p>Used to auto-detect the type of resource.</p>"
								},
								{
									"name": "svg",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "scale",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_overrideWidth",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_overrideHeight",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_resolve",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_crossorigin",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_load",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "SVG_SIZE",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "static",
									"brief": "<p>RegExp for SVG size.</p>"
								},
								{
									"name": "crossOrigin",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "upload",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "update",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "source",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "noSubImage",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "bind",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Bind to a parent BaseTexture</p>"
								},
								{
									"name": "unbind",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Unbind to a parent BaseTexture</p>"
								},
								{
									"name": "resize",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "valid",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "width",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The width of the resource.</p>"
								},
								{
									"name": "height",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The height of the resource.</p>"
								},
								{
									"name": "style",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Set the style, optional to override</p>"
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_width",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_height",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "destroyed",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "internal",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "onResize",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "onUpdate",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Mini-runner for handling update events</p>"
								},
								{
									"name": "onError",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								}
							]
						},
						{
							"name": "VideoResource",
							"type": "ClassDoc",
							"access": "public",
							"scope": "inner",
							"brief": "",
							"children": [
								{
									"name": "constructor",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "update",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Trigger updating of the texture</p>"
								},
								{
									"name": "load",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": "<p>Start preloading the video resource.</p>"
								},
								{
									"name": "_onError",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Handle video error events.</p>"
								},
								{
									"name": "_isSourcePlaying",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Returns true if the underlying source is playing.</p>"
								},
								{
									"name": "_isSourceReady",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Returns true if the underlying source is ready for playing.</p>"
								},
								{
									"name": "_onPlayStart",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Runs the update loop when the video is ready to play</p>"
								},
								{
									"name": "_onPlayStop",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Fired when a pause event is triggered, stops the update loop</p>"
								},
								{
									"name": "_onCanPlay",
									"type": "MethodDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Fired when the video is loaded and ready to play</p>"
								},
								{
									"name": "dispose",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "autoUpdate",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Should the base texture automatically update itself, set to true by default</p>"
								},
								{
									"name": "updateFPS",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "test",
									"type": "MethodDoc",
									"access": "public",
									"scope": "static",
									"brief": "<p>Used to auto-detect the type of resource.</p>"
								},
								{
									"name": "_autoUpdate",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p><code>true</code> to use PIXI.Ticker.shared to auto update the base texture.</p>"
								},
								{
									"name": "_isConnectedToTicker",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p><code>true</code> if the instance is currently connected to PIXI.Ticker.shared to auto update the base texture.</p>"
								},
								{
									"name": "autoPlay",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_load",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_resolve",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "TYPES",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "static",
									"brief": ""
								},
								{
									"name": "crossOrigin",
									"type": "MethodDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "upload",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "source",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "noSubImage",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "bind",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Bind to a parent BaseTexture</p>"
								},
								{
									"name": "unbind",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Unbind to a parent BaseTexture</p>"
								},
								{
									"name": "resize",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "valid",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "width",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The width of the resource.</p>"
								},
								{
									"name": "height",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>The height of the resource.</p>"
								},
								{
									"name": "style",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": "<p>Set the style, optional to override</p>"
								},
								{
									"name": "destroy",
									"type": "MethodDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_width",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "_height",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "destroyed",
									"type": "PropertyDoc",
									"access": "public",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "internal",
									"type": "PropertyDoc",
									"access": "protected",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "onResize",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								},
								{
									"name": "onUpdate",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": "<p>Mini-runner for handling update events</p>"
								},
								{
									"name": "onError",
									"type": "PropertyDoc",
									"access": "private",
									"scope": "instance",
									"brief": ""
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "",
			"type": "ClassDoc",
			"access": "public",
			"scope": "inner",
			"brief": ""
		},
		{
			"name": "ResizePlugin",
			"type": "ClassDoc",
			"access": "private",
			"scope": "inner",
			"brief": "",
			"children": [
				{
					"name": "init",
					"type": "MethodDoc",
					"access": "private",
					"scope": "static",
					"brief": ""
				},
				{
					"name": "destroy",
					"type": "MethodDoc",
					"access": "private",
					"scope": "static",
					"brief": ""
				},
				{
					"name": "queueResize",
					"type": "PropertyDoc",
					"access": "public",
					"scope": "instance",
					"brief": ""
				},
				{
					"name": "cancelResize",
					"type": "PropertyDoc",
					"access": "private",
					"scope": "instance",
					"brief": ""
				},
				{
					"name": "resize",
					"type": "PropertyDoc",
					"access": "public",
					"scope": "instance",
					"brief": ""
				}
			]
		},
		{
			"name": "TemporaryDisplayObject",
			"type": "ClassDoc",
			"access": "public",
			"scope": "inner",
			"brief": "",
			"children": [
				{
					"name": "constructor",
					"type": "MethodDoc",
					"access": "public",
					"scope": "instance",
					"brief": ""
				}
			]
		},
		{
			"name": "get",
			"type": "MethodDoc",
			"access": "public",
			"scope": "instance",
			"brief": "<p>The name of the runner.</p>"
		},
		{
			"name": "FilterState",
			"type": "ClassDoc",
			"access": "private",
			"scope": "inner",
			"brief": "<p>System plugin to the renderer to manage filter states.</p>",
			"children": [
				{
					"name": "constructor",
					"type": "MethodDoc",
					"access": "public",
					"scope": "instance",
					"brief": ""
				},
				{
					"name": "clear",
					"type": "MethodDoc",
					"access": "private",
					"scope": "instance",
					"brief": ""
				},
				{
					"name": "target",
					"type": "PropertyDoc",
					"access": "private",
					"scope": "instance",
					"brief": ""
				},
				{
					"name": "legacy",
					"type": "PropertyDoc",
					"access": "private",
					"scope": "instance",
					"brief": ""
				},
				{
					"name": "resolution",
					"type": "PropertyDoc",
					"access": "private",
					"scope": "instance",
					"brief": ""
				},
				{
					"name": "sourceFrame",
					"type": "PropertyDoc",
					"access": "private",
					"scope": "instance",
					"brief": ""
				},
				{
					"name": "destinationFrame",
					"type": "PropertyDoc",
					"access": "private",
					"scope": "instance",
					"brief": ""
				},
				{
					"name": "filters",
					"type": "PropertyDoc",
					"access": "private",
					"scope": "instance",
					"brief": ""
				}
			]
		},
		{
			"name": "GLBuffer",
			"type": "ClassDoc",
			"access": "public",
			"scope": "inner",
			"brief": "",
			"children": [
				{
					"name": "constructor",
					"type": "MethodDoc",
					"access": "public",
					"scope": "instance",
					"brief": ""
				}
			]
		},
		{
			"name": "IGLUniformData",
			"type": "ClassDoc",
			"access": "public",
			"scope": "inner",
			"brief": ""
		},
		{
			"name": "ArcUtils",
			"type": "ClassDoc",
			"access": "private",
			"scope": "inner",
			"brief": "",
			"children": [
				{
					"name": "curveTo",
					"type": "MethodDoc",
					"access": "private",
					"scope": "instance",
					"brief": "<p>The arcTo() method creates an arc/curve between two tangents on the canvas.</p>"
				},
				{
					"name": "arc",
					"type": "MethodDoc",
					"access": "private",
					"scope": "instance",
					"brief": "<p>The arc method creates an arc/curve (used to create circles, or parts of circles).</p>"
				}
			]
		},
		{
			"name": "BezierUtils",
			"type": "ClassDoc",
			"access": "private",
			"scope": "inner",
			"brief": "",
			"children": [
				{
					"name": "curveLength",
					"type": "MethodDoc",
					"access": "private",
					"scope": "instance",
					"brief": ""
				}
			]
		},
		{
			"name": "QuadraticUtils",
			"type": "ClassDoc",
			"access": "private",
			"scope": "inner",
			"brief": "",
			"children": [
				{
					"name": "curveLength",
					"type": "MethodDoc",
					"access": "private",
					"scope": "instance",
					"brief": ""
				},
				{
					"name": "curveTo",
					"type": "MethodDoc",
					"access": "private",
					"scope": "instance",
					"brief": ""
				}
			]
		},
		{
			"name": "PlaneGeometry",
			"type": "ClassDoc",
			"access": "public",
			"scope": "inner",
			"brief": "",
			"children": [
				{
					"name": "constructor",
					"type": "MethodDoc",
					"access": "public",
					"scope": "instance",
					"brief": ""
				},
				{
					"name": "build",
					"type": "MethodDoc",
					"access": "private",
					"scope": "instance",
					"brief": ""
				}
			]
		},
		{
			"name": "TextFormat",
			"type": "ClassDoc",
			"access": "private",
			"scope": "inner",
			"brief": "<p>BitmapFont format that's Text-based.</p>",
			"children": [
				{
					"name": "test",
					"type": "MethodDoc",
					"access": "private",
					"scope": "static",
					"brief": "<p>Check if resource refers to txt font data.</p>"
				},
				{
					"name": "parse",
					"type": "MethodDoc",
					"access": "private",
					"scope": "static",
					"brief": "<p>Convert text font data to a javascript object.</p>"
				}
			]
		},
		{
			"name": "XMLFormat",
			"type": "ClassDoc",
			"access": "private",
			"scope": "inner",
			"brief": "<p>BitmapFont format that's XML-based.</p>",
			"children": [
				{
					"name": "test",
					"type": "MethodDoc",
					"access": "private",
					"scope": "static",
					"brief": "<p>Check if resource refers to xml font data.</p>"
				},
				{
					"name": "parse",
					"type": "MethodDoc",
					"access": "private",
					"scope": "static",
					"brief": "<p>Convert the XML into BitmapFontData that we can use.</p>"
				}
			]
		},
		{
			"name": "SharedArrayBuffer",
			"type": "InterfaceDoc",
			"access": "public",
			"scope": "inner",
			"brief": ""
		},
		{
			"name": "OffscreenCanvas",
			"type": "InterfaceDoc",
			"access": "public",
			"scope": "inner",
			"brief": ""
		}
	]
}